{"version":3,"sources":["assets/images/ssl-tls.jpg","utils/auth.js","Config.js","utils/requests.js","components/FormattedMessage.js","lang/zh_HK.js","lang/zh_TW.js","lang/en_US.js","lang/ja_JP.js","lang/ko_KR.js","Lang.js","lang/zh_CN.js","utils/ImperativeFormatMessage.js","pages/Login.js","service/auth.js","pages/PageNotFound.js","components/Mybreadcrumb.js","pages/user/Dashboard.js","service/zone.js","components/zone/Operation.js","pages/user/zone/List.js","utils/context.js","components/SwitchCard.js","components/DiyCard.js","components/zone/Overview.js","components/Img.js","utils/time.js","components/zone/SslTls/Hsts.js","components/zone/SslTls.js","components/zone/Firewall.js","components/zone/Cache.js","components/zone/Pagerules/Actions.js","components/zone/Pagerules.js","components/zone/Network.js","components/zone/ScrapeShield.js","pages/user/zone/Control.js","pages/user/zone/Create.js","components/dnsrecord/Operation.js","pages/user/dnsrecord/List.js","pages/user/dnsrecord/Edit.js","routes/index.js","components/Frame.js","App.js","index.js"],"names":["module","exports","getToken","localStorage","getItem","clearToken","removeItem","GLOBAL_CONFIG","window","history","createHashHistory","instance","axios","create","BASE_URL","interceptors","request","use","config","headers","error","Promise","reject","response","console","log","data","code","push","requests","get","url","params","post","put","patch","del","delete","FormattedMessage","props","id","values","txt","dangerouslySetInnerHTML","__html","zh_HK","zh_CN","en_US","ja_JP","ko_KR","langs","antd_zh_CN","antd_zh_HK","zh_TW","antd_zh_TW","antd_en_US","antd_ja_JP","antd_ko_KR","getCurrentLanguage","currentLanguage","navigator","language","chooseLocale","k","chooseAntdLocale","LangContext","React","createContext","Lang","useState","setLanguage","locale","setLocale","antdLocale","setAntdLocale","useEffect","setItem","setCurrentLanguage","Provider","value","messages","children","ImperativeFormatMessage","intl","createIntl","formatMessage","Login","useHistory","className","title","defaultMessage","name","initialValues","JSON","parse","onFinish","message","loading","content","key","duration","remember","stringify","setFormdata","user","formData","FormData","append","username","password","loginApi","then","res","undefined","access_token","success","setTimeout","msg","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","htmlType","PageNotFound","Mybreadcrumb","items","path","style","marginBottom","to","map","item","link","Dashboard","dnsRecordUpdate","zone_id","dns_record_id","body","proxied","ttl","changeZoneSetting","doCachePurge","purge_everything","files","Operation","btnStatus","setBtnState","zones","setZones","index","deleteZone","useCallback","zoneDelete","splice","size","onClick","danger","breadcrumb","List","setloading","columns","useMemo","dataIndex","render","text","status","color","toUpperCase","zone","dataSource","rowKey","record","Context","SwitchCard","setBtnStatus","active","hoverable","actions","setting","editable","handOnClick","finally","background","borderColor","maxWidth","margin","DiyCard","Option","Overview","useContext","zone_settings","exchangeStatus","changeSecurityLevel","e","info","direction","width","security_level","defaultValue","onChange","v","Img","src","alt","height","moment","toLowerCase","secondTransform","unit","Math","round","as","getLocalUnit","normalizeUnits","Hsts","visibleState","visible","setvisible","confirmLoading","setConfirmLoading","modalHSTS","setModalHSTS","securityHeaderOnChange","Object","assign","HSTSActions","action","checked","enabled","max_age","Array","include_subdomains","preload","nosniff","onOk","onCancel","description","closable","span","display","justifyContent","alignItems","SslTls","changeSSL","target","mode","ssl","min_tls_version","Group","Button","Img_SSLTLS","padding","modified_on","security_header","strict_transport_security","Firewall","resolve","notification","open","TextArea","Cache","modalText","setModalText","changeCacheLevel","purgeEverything","purgeFilesByUrl","trim","length","split","warning","changeBrowserCacheTtl","divCards","onConfirm","okText","cancelText","rows","cache_level","browser_cache_ttl","Actions","setLoading","btnLoading","setBtnLoading","pagerule_id","pageRules","targets","priority","setPageRules","shape","icon","DeleteFilled","Pagerules","setDataSource","constraint","getZonePagerules","number","Network","ScrapeShield","TabPane","Control","components","setZone_settings","match","getAllZoneSettings","tmp","a","contextValue","tip","spinning","delay","defaultActiveKey","centered","tab","paddingBottom","layout","labelCol","sm","lg","wrapperCol","submitTailLayout","offset","xs","Edit","zone_name","onFinishFailed","errorInfo","label","block","btnState","dnsrecords","setDnsrecords","SafetyCertificateOutlined","copy","dnsRecordDelete","isCreate","formRef","createRef","current","setFieldsValue","destroy","ref","mainRoutes","component","userRoutes","exact","ZoneList","ZoneControl","ZoneCreate","DnsrecordList","DnsrecordEdit","Header","Sider","Content","SubMenu","menu","HomeOutlined","AntCloudOutlined","LinkOutlined","isUrl","Frame","collapsed","setCollapsed","trigger","collapsible","breakpoint","collapsedWidth","onBreakpoint","broken","theme","defaultSelectedKeys","isArray","vo","ke","href","rel","createElement","MenuUnfoldOutlined","MenuFoldOutlined","overlay","keys","DownOutlined","App","route","routeProps","from","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.fe0db69f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ssl-tls.0ef27a92.jpg\";","\n\nexport const isLogined = () => {\n\n    return getToken();\n}\nexport const getToken = () => {\n    return localStorage.getItem('access_token');\n}\n\nexport const clearToken = () => {\n    return localStorage.removeItem('access_token');\n}\n\nexport const setToken = (access_token) => {\n    localStorage.setItem('access_token', access_token);\n}\nexport const getUsername = () => {\n    return localStorage.getItem('username');\n}\n\nexport const clearUsername = () => {\n    return localStorage.removeItem('username');\n}\n\nexport const setUsername = (username) => {\n    localStorage.setItem('username', username);\n}\n\nexport const clearAll = () => {\n    return localStorage.clear()\n}\n\nexport const setFormdata = (values) => {\n    localStorage.setItem('formdata',JSON.stringify(values))\n}\n\nexport const getFormdata = () => {\n    return JSON.parse(localStorage.getItem('formdata'))\n}\n\n","const GLOBAL_CONFIG = window.GLOBAL_CONFIG\r\n\r\nexport default GLOBAL_CONFIG","import axios from 'axios'\n\nimport { createHashHistory } from 'history';\n\nimport { getToken, clearToken } from '@utils/auth'\n\nimport GLOBAL_CONFIG from '@/Config'\n\nconst history = createHashHistory()\n\n\nconst instance = axios.create({\n    'baseURL': GLOBAL_CONFIG.BASE_URL\n    // 'baseURL': 'http://120.78.8.80:8000/'\n    // 'baseURL': 'http://127.0.0.1:8000/'\n})\n// 添加请求拦截器\ninstance.interceptors.request.use((config) => {\n    // 在发送请求之前做些什么\n    config.headers['Authorization'] = 'Bearer ' + getToken()\n    return config;\n}, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n// 添加响应拦截器\ninstance.interceptors.response.use((response) => {\n    // 对响应数据做点什么\n    console.log(response);\n    if (response.data.code === 401) {\n        clearToken();\n        history.push('/login')\n    }\n    return response.data;\n}, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nconst requests = {\n    get: (url, params) => {\n        return instance.get(url, { 'params': params })\n    },\n    post: (url, data, params = {}) => {\n        return instance.post(url, data, { 'params': params })\n    },\n    put: (url, data, params = {}) => {\n\n        return instance.put(url, data, { 'params': params })\n    },\n    patch: (url, data, params = {}) => {\n\n        return instance.patch(url, data, { 'params': params })\n    },\n\n    del: (url, params) => {\n\n        return instance.delete(url, { 'params': params })\n    }\n}\n\nexport default requests;","import React from 'react'\r\nimport { FormattedMessage as Formatted } from 'react-intl'\r\n\r\n\r\nconst FormattedMessage = (props) => {\r\n    return (\r\n        <Formatted id={props.id} values={props.values}>\r\n            {txt => <span dangerouslySetInnerHTML={{\r\n                __html: txt\r\n            }\r\n            }></span>\r\n            }\r\n        </Formatted >\r\n    )\r\n}\r\n\r\nexport default FormattedMessage\r\n\r\n\r\n\r\n","const zh_HK = {\r\n    'Remember me': '記住密碼',\r\n    'Log in': '登錄',\r\n    'Login': '登錄',\r\n    'Submitting': '正在提交中...',\r\n    'Login successful': '登錄成功！',\r\n    'Login failed': '登錄失敗！',\r\n    'Please input your Username!': '請輸入您的用戶名！',\r\n    'Please input your Password!': '請輸入您的密碼！',\r\n    // control\r\n    'Overview': '概覽',\r\n    'SSL-TLS': 'SSL-TLS',\r\n    'Firewall': '防火牆',\r\n    'Page Rules': '頁面規則',\r\n    'Network': '網絡',\r\n    'Cache': '緩存',\r\n    'Scrape Shield': '內容保護',\r\n    'Switch successfully': '切換成功！',\r\n    'Switching failed': '切換失敗：{msg}',\r\n    'Add domain name successfully': '添加域名成功',\r\n    'Failed to add domain': '添加域名失敗：{msg}',\r\n    'Please input your Zone Name': '請輸入您的域名！',\r\n    'Zone Name': '域名',\r\n    'Submit': '提交',\r\n    'Zone': '域名',\r\n    'Status': '狀態',\r\n    'Operation': '操作',\r\n\r\n    'Record Type': '記錄類型',\r\n    'Host Name': '記錄名',\r\n    'Content': '記錄值',\r\n    'TTL': 'TTL',\r\n    'Add a Dnsrecord': '添加記錄',\r\n\r\n    'Failed to load dns record': '加載dns記錄失敗！{msg}',\r\n    'Added record successfully': '添加記錄成功！',\r\n    'Update record successfully': '更新記錄成功',\r\n\r\n    'Record Name': '記錄名稱',\r\n    'Record Content': '記錄內容',\r\n    'CDN': 'CDN',\r\n    'Please input your Record Name': '請輸入您的記錄名稱',\r\n    'Please input your Record Type': '請輸入您的記錄類型',\r\n    'Please input your Record Content': '請輸入您的記錄內容',\r\n    'Please input your TTL': '請輸入您的TTL',\r\n    'Please input your CDN': '請輸入您的CDN',\r\n\r\n    'Manage': '管理',\r\n    'Update completed': '更新成功！',\r\n    'Successfully deleted': '刪除成功！',\r\n\r\n    'You sure you want to delete it?': '確定要刪除嗎？',\r\n    'Yes': '確定',\r\n    'No': '不',\r\n    'Cancel': '取消',\r\n\r\n    'Enable HSTS (Strict-Transport-Security)': '啟用 HSTS (Strict-Transport-Security)',\r\n    'Provide HSTS headers for all HTTPS requests': '為所有 HTTPS 請求提供 HSTS 標頭',\r\n    'Maximum age header (max-age)': '最長期限標頭 (max-age)',\r\n    'Specify the duration of HSTS header caching in the browser': '指定 HSTS 標頭在瀏覽器中緩存的持續時間',\r\n    '0 (disabled)': '0（禁用）',\r\n    'Apply HSTS policy to subdomains (includeSubDomains)': '將 HSTS 策略應用於子域 (includeSubDomains)',\r\n    'Every domain under this domain will inherit the same HSTS header': '此域下的每個域將繼承相同的 HSTS 標頭',\r\n    'Warning': '警告：',\r\n    'If any of your subdomains do not support HTTPS, these subdomains will become inaccessible.': '如果您的任何子域不支持 HTTPS，這些子域將變為不可訪問。',\r\n    'Preloading': '預加載',\r\n    'Allow browser to automatically preload HSTS configuration': '允許瀏覽器自動預加載 HSTS 配置',\r\n    'Preloading may make websites that do not support HTTPS completely inaccessible.': '預加載可能會使不支持 HTTPS 的網站完全不可訪問。',\r\n    'Sniffless header': '無嗅探標頭',\r\n    'Send the \"X-Content-Type-Options: nosniff\" header to prevent Internet Explorer and Google Chrome from sniffing around in the declared Content-Type via MIME.': '發送 「X-Content-Type-Options: nosniff」 標頭，來防止 Internet Explorer 和 Google Chrome 瀏覽器通過 MIME 在聲明的 Content-Type 中四處嗅探。',\r\n    'HTTP Strict Transport Security (HSTS)': 'HTTP 嚴格傳輸安全 (HSTS)',\r\n    'You will need to specify the full path of the file.': '您將需要指定文件的完整路徑。',\r\n    '<p>HTTP Strict Transport Security (HSTS) can greatly improve the security of a website. However, when enabling HSTS, keep the following important considerations in mind:</p><strong>HTTPS (SSL) must be enabled to use HSTS. </strong><ul><li> If you turn on HSTS, but your website does not support HTTPS, the browser will not accept HSTS settings. </li><li>If you enable HSTS but leave Cloudflare, you need to continue to support HTTPS through a new service provider, otherwise, visitors will not be able to access your site until you support HTTPS. </li><li>If Cloudflare’s HTTPS is turned off after HSTS is enabled and there is no valid SSL certificate on the origin server, visitors will not be able to access your website. </li><li>Note: Cloudflare’s HTTP can be disabled in several ways: masking subdomains in DNS records, \"suspending\" Cloudflare services, or using a custom SSL certificate that is incorrectly configured on your Cloudflare dashboard (e.g. , Invalid SSL certificate, expired certificate, or mismatched hostname). </li></ul><p>If you need to disable HTTPS on your domain, you must first disable HSTS in your Cloudflare dashboard and wait until the maximum period has passed (to ensure that every browser is aware of this change) Before you can disable HTTPS. The average maximum period is six months (you can set the maximum period in the next step). If you delete HTTPS before disabling HSTS, visitors will not be able to access your site until the maximum period is reached or you support HTTPS again. Since disabling HTTPS on HSTS-enabled websites may cause these consequences, we strongly recommend that you deploy the HTTPS service before enabling this feature</p>'\r\n        : '<div><p>HTTP 嚴格傳輸安全 (HTTP Strict Transport Security, HSTS) 可以大幅提高網站的安全性。但是，啟用 HSTS 時，請謹記以下重要注意事項：</p><strong>必須啟用 HTTPS (SSL) 才能使用 HSTS。</strong><ul><li>如果您打開 HSTS，但您的網站不支持 HTTPS，瀏覽器將不接受 HSTS 設置。</li><li>如果您啟用了 HSTS 但離開了 Cloudflare，您需要通過新的服務提供商繼續支持 HTTPS，否則，在您支持 HTTPS 之前，訪問者將無法訪問您的站點。</li><li>如果在啟用 HSTS 後關閉了 Cloudflare 的 HTTPS，並且源服務器上沒有有效的 SSL 證書，訪問者將無法訪問您的網站。</li><li>注意：可以通過以下幾種方法禁用 Cloudflare 的 HTTP：在 DNS 記錄中遮蔽子域，「暫停」 Cloudflare 服務，或通過您的 Cloudflare 儀錶板配置錯誤的自定義 SSL 證書（例如，無效的 SSL 證書、過期證書或不匹配的主機名）。</li></ul><p>如果您需要在域上禁用 HTTPS，必須先在您的 Cloudflare 儀錶板中禁用 HSTS，並等到最長期限過去（以確保每個瀏覽器都知道此更改），然後才能禁用 HTTPS。平均最長期限為六個月（您可以在下一步中設置最長期限）。如果您在禁用 HSTS 之前刪除了 HTTPS，訪問者將無法訪問您的網站，直至達到最長期限或您再次支持 HTTPS。由於在啟用 HSTS 的網站上禁用 HTTPS 可能會導致這些後果，因此我們強烈建議您先部署 HTTPS 服務再啟用此功能</p></div>',\r\n    'If not configured correctly, HTTP Strict Transport Security (HSTS) may make your website inaccessible for a long time.': '如果配置不正確，HTTP 嚴格傳輸安全 (HSTS) 可能會使您的網站長時間不可訪問。',\r\n\r\n\r\n    // cache\r\n    'URL must not be empty': 'URL不得為空',\r\n    'If your server is shut down, Cloudflare will use our cache to serve the static pages of your website.': '如果您的服務器關閉，Cloudflare 將使用我們的緩存為您的網站的靜態頁面提供服務。',\r\n    'Temporarily bypass our cache to see the changes made to your origin server in real time. <br />Note: Enabling this feature can significantly speed up the loading speed of the origin server. The development mode does not clear the cache, so you need to clear the files after the development mode expires.': '暫時繞過我們的緩存可以實時查看對您的源服務器進行的更改。<br />注意：啟用此功能可顯著加快源服務器的加載速度。開發模式不會清除緩存，因此需要在開發模式過期後清除文件。',\r\n    'Custom clear': '自定義清除',\r\n    'Clear cache': '清除緩存',\r\n\r\n    'Clear all caches, use with caution': '清理全部緩存，慎用',\r\n    'Are you sure you want to clear all caches': '您確定要清理全部緩存嗎？',\r\n    'Clean up all': '清理全部',\r\n    'Currently, wildcards are not supported when clearing a single URL. You can clear up to 30 URLs at once. Separate URLs one per line.': '目前進行單個 URL 清除時不支持通配符。您一次最多可以清除 30 個 URL。按照每行一個的方式分隔 URL。',\r\n    'Example': '示例：',\r\n    'Clear the cache files to force Cloudflare to extract the latest versions of these files from your web server. You can erase files selectively, or you can erase all files at the same time. <br /><strong>Note:</strong> Clearing the cache may temporarily degrade the performance of your website and increase the time it takes to load files on your origin server.'\r\n        : '<div>清除緩存文件以強制 Cloudflare 從您的 Web 服務器中提取這些文件的最新版本。您可以選擇性地清除文件，也可以同時清除所有文件。<br /><strong>注意：</strong>清除緩存可能會使您的網站性能暫時降級，並延長在您的源服務器上加載文件的時間。</div>',\r\n    'Development Mode™': '開發模式™',\r\n    'Cache level': '緩存級別',\r\n    'No query string': '沒有查詢字符串',\r\n    'Ignore query string': '忽略查詢字符串',\r\n    'Standard': '標準',\r\n    'Determine the amount of static content you want Cloudflare to cache your website. Increasing the cache can shorten the page load time.': '確定您希望 Cloudflare 對您的網站進行緩存的靜態內容量。增加緩存可以縮短頁面加載時間。',\r\n    'Browser cache TTL': '瀏覽器緩存 TTL',\r\n    'Follow existing headers': '遵循現有標頭',\r\n    \"Determine how long Cloudflare instructs visitors’ browsers to cache files. During this period, the browser will load files from its local cache, thereby improving page loading speed.\": '確定 Cloudflare 指示訪問者的瀏覽器緩存文件的時長。在此期間，瀏覽器會從其本地緩存中加載文件，從而提高頁面加載速度。',\r\n    // Netword\r\n    'Speed up your website with HTTP/2': '使用 HTTP/2 加速您的網站',\r\n    'Use QUIC to accelerate HTTP requests. QUIC provides higher encryption and performance than TCP and TLS.': '使用 QUIC 加速 HTTP 請求，QUIC 提供比 TCP 和 TLS 更高的加密和性能。',\r\n    'Improve the performance of clients that have previously connected to your website.': '提高之前已連接到您網站的客戶端的性能。',\r\n    'Allow a WebSocket connection with your origin server. <br />Concurrent connection criteria applicable to your plan: low': '<div>允許與您的源服務器建立 WebSocket 連接。<br />適用於您所用計劃的並發連接準則：low</div>',\r\n    \"Onion routing allows traffic from legitimate users on the Tor network to be routed through Cloudflare's onion service instead of exit nodes, thereby improving user privacy and achieving more detailed protection.\": '洋蔥路由允許通過 Cloudflare 的洋蔥服務而不是退出節點路由來自 Tor 網絡上合法用戶的流量，從而改善用戶的隱私並實現更細化的保護。',\r\n    'Contains the country code of the visitor』s location and all requests sent to your website. <br /><strong>Note:</strong> You must retrieve the IP geolocation information from the CF-IPCountry HTTP header.': '包含訪問者位置的國家/地區代碼和所有發送到您網站的請求。<br /><strong>注意：</strong>您必須從 CF-IPCountry HTTP 標頭減檢索 IP 地理位置信息。',\r\n    'HTTP/3 (using QUIC)': 'HTTP/3（使用 QUIC）',\r\n    '0-RTT connection recovery': '0-RTT 連接恢復',\r\n    'Onion routing': '洋蔥路由',\r\n    'IP geolocation': 'IP 地理位置',\r\n\r\n    // Operation\r\n    'Manage DNS': '管理DNS記錄',\r\n    'Copy cname record': '拷貝cname記錄',\r\n    \"Copy successfully\": \"拷貝成功\",\r\n    'Delete': '刪除',\r\n\r\n    //Overview\r\n    'Development model': '開發模式',\r\n    'Quick operation': '快速操作',\r\n    'Under Attack Mode': 'Under Attack 模式',\r\n    'Temporarily bypass our cache. View changes made to your source server in real time.': '暫時繞過我們的緩存。實時查看對您的源服務器進行的更改。',\r\n    'Close (Enterprise)': '關閉（Enterprise）',\r\n    'Basic (essentially off)': '基本（本質上為關）',\r\n    'low': '低',\r\n    'medium': '中',\r\n    'high': '高',\r\n    'under_attack': '無敵',\r\n    'Display JavaScript challenges when visitors visit your site.': '在訪問者訪問您的站點時顯示 JavaScript 質詢。',\r\n\r\n    //PageRules\r\n    'URL/description': 'URL/說明',\r\n    'Failed to get page rules': '獲取頁面規則失敗',\r\n    'Page rules': '頁面規則',\r\n    '<div>Page rules are used to control which Cloudflare settings are triggered for a given URL. Only one page rule is triggered for each URL, so if you sort the page rules in order of priority, this is very useful. Please set the URL mode as specific as possible.<br />You have {number} page rules left.</div>'\r\n        : '頁面規則用於控制針對給定的 URL 觸發哪些 Cloudflare 設置。針對每個 URL 僅觸發一個頁面規則，因此，如果您按照優先級順序對頁面規則進行排序，則這非常有用，請儘可能將 URL 模式設置得具體些。<br />您剩下 {number} 個頁面規則。',\r\n    // : '{number}',\r\n\r\n    //ScrapeShield\r\n    'Email address obfuscation technique': '電子郵件地址混淆技術',\r\n    'Display an obfuscated email address on your website to prevent automated programs and spammers from obtaining it, while for human visitors, no visible changes will be made to the address.': '在您的網站上顯示經過模糊處理的電子郵件地址，以防止機自動程序和垃圾郵件製造者獲取該地址，而對於人類訪問者，則不會對地址進行任何可見更改。',\r\n    'Server side exclusion': '服務器端排除',\r\n    'Automatically hide specific content to prevent visitors with a bad reputation from viewing': '自動隱藏特定內容以防聲譽不好的訪問者查看',\r\n    'Hotlink protection': 'Hotlink 保護',\r\n    'Prevent offsite links pointing to your images.': '防止站外鏈接指向您的圖像。',\r\n\r\n    //SslTls\r\n    'Always use HTTPS': '始終使用 HTTPS',\r\n    'Redirect all requests using the \"http\" scheme to \"https\". This will apply to all http requests in the area.': '將所有使用方案 「http」 的請求重定向到 「https」。這將應用於該區域的所有 http 請求。',\r\n    'Random encryption': '隨機加密',\r\n    'Random encryption allows browsers to know that your site is provided through an encrypted connection, allowing them to benefit from the performance improvements of HTTP/2. The browser will continue to display \"http\" in the address bar instead of \"https\".': '隨機加密可以讓瀏覽器知道您的站點通過加密連接提供，從而讓它們從 HTTP/2 的性能改進中受益。瀏覽器將繼續在地址欄中顯示 「http」，而不是 「https」。',\r\n    'Automatic HTTPS rewrite': '自動 HTTPS 重寫',\r\n    'Automatic HTTPS rewriting helps correct mixed content by changing \"http\" to \"https\" for all resources or links on websites that can be served by HTTPS.': '自動 HTTPS 重寫通過將可以使用 HTTPS 提供服務的網站上所有資源或鏈接的 「http」 更改為 「https」 來幫助修正混合內容。',\r\n    'Your SSL/TLS encryption mode is {mode}': '您的 SSL/TLS 加密模式為 {mode}',\r\n    'No encryption applied': '未應用加密',\r\n    'Close (unsafe)': '關閉（不安全）',\r\n    'Flexible': '靈活',\r\n    'Encrypt the traffic between the browser and Cloudflare': '加密瀏覽器與 Cloudflare 之間的流量',\r\n    'End-to-end encryption, using self-signed certificate on the server': '端到端加密，使用服務器上的自簽名證書',\r\n    'Full': '完全',\r\n    'End-to-end encryption, but a trusted CA certificate or Cloudflare Origin CA certificate is required on the server': '端到端加密，但服務器上需要有受信任的 CA 證書或 Cloudflare Origin CA 證書',\r\n    'Complete (strict)': '完全（嚴格）',\r\n    'This setting was last changed': '此設置上次更改時間為',\r\n    'Minimum TLS version': '最低 TLS 版本',\r\n    'Only allow HTTPS connections from visitors who support the selected TLS protocol version or higher.': '僅允許來自支持所選 TLS 協議版本或更高版本的訪問者的 HTTPS 連接。',\r\n    'Click to switch': '點擊切換',\r\n    'Turn off HTTP Strict Transport Security (HSTS)': '關閉HTTP 嚴格傳輸安全 (HSTS)',\r\n    'Enable HTTP Strict Transport Security (HSTS)': '啟用HTTP 嚴格傳輸安全 (HSTS)',\r\n    'Enforce web security policies on your website.': '對您的網站強制執行 Web 安全策略。',\r\n\r\n    // Frame\r\n    'Console': '控制台',\r\n    'Domain management': '域名管理',\r\n    'Domain list': '域名列表',\r\n    'Add domain': '添加域名',\r\n    'Visit Author': '訪問作者博客',\r\n    'Visit Cloudflare': '訪問 Cloudflare',\r\n    'Sign out': '退出登錄',\r\n\r\n\r\n    'Click close': '點擊關閉',\r\n    'Click to open': '點擊開啟',\r\n    'No right to operate': '無權操作',\r\n    // <FormattedMessage id='Manage'/>\r\n\r\n}\r\nexport default zh_HK","const zh_CN = {\r\n    'Remember me': '記住密碼',\r\n    'Log in': '登錄',\r\n    'Login': '登錄',\r\n    'Submitting': '正在提交中...',\r\n    'Login successful': '登錄成功！',\r\n    'Login failed': '登錄失敗！',\r\n    'Please input your Username!': '請輸入您的用戶名！',\r\n    'Please input your Password!': '請輸入您的密碼！',\r\n    // control\r\n    'Overview': '概覽',\r\n    'SSL-TLS': 'SSL-TLS',\r\n    'Firewall': '防火牆',\r\n    'Page Rules': '頁面規則',\r\n    'Network': '網路',\r\n    'Cache': '緩存',\r\n    'Scrape Shield': '內容保護',\r\n    'Switch successfully': '切換成功！',\r\n    'Switching failed': '切換失敗：{msg}',\r\n    'Add domain name successfully': '添加域名成功',\r\n    'Failed to add domain': '添加域名失敗：{msg}',\r\n    'Please input your Zone Name': '請輸入您的域名！',\r\n    'Zone Name': '域名',\r\n    'Submit': '提交',\r\n    'Zone': '域名',\r\n    'Status': '狀態',\r\n    'Operation': '操作',\r\n\r\n    'Record Type': '記錄類型',\r\n    'Host Name': '記錄名',\r\n    'Content': '記錄值',\r\n    'TTL': 'TTL',\r\n    'Add a Dnsrecord': '添加記錄',\r\n\r\n    'Failed to load dns record': '載入dns記錄失敗！{msg}',\r\n    'Added record successfully': '添加記錄成功！',\r\n    'Update record successfully': '更新記錄成功',\r\n\r\n    'Record Name': '記錄名稱',\r\n    'Record Content': '記錄內容',\r\n    'CDN': 'CDN',\r\n    'Please input your Record Name': '請輸入您的記錄名稱',\r\n    'Please input your Record Type': '請輸入您的記錄類型',\r\n    'Please input your Record Content': '請輸入您的記錄內容',\r\n    'Please input your TTL': '請輸入您的TTL',\r\n    'Please input your CDN': '請輸入您的CDN',\r\n\r\n    'Manage': '管理',\r\n    'Update completed': '更新成功！',\r\n    'Successfully deleted': '刪除成功！',\r\n\r\n    'You sure you want to delete it?': '確定要刪除嗎？',\r\n    'Yes': '確定',\r\n    'No': '不',\r\n    'Cancel': '取消',\r\n\r\n    'Enable HSTS (Strict-Transport-Security)': '啟用 HSTS (Strict-Transport-Security)',\r\n    'Provide HSTS headers for all HTTPS requests': '為所有 HTTPS 請求提供 HSTS 標頭',\r\n    'Maximum age header (max-age)': '最長期限標頭 (max-age)',\r\n    'Specify the duration of HSTS header caching in the browser': '指定 HSTS 標頭在瀏覽器中緩存的持續時間',\r\n    '0 (disabled)': '0（禁用）',\r\n    'Apply HSTS policy to subdomains (includeSubDomains)': '將 HSTS 策略應用於子域 (includeSubDomains)',\r\n    'Every domain under this domain will inherit the same HSTS header': '此域下的每個域將繼承相同的 HSTS 標頭',\r\n    'Warning': '警告：',\r\n    'If any of your subdomains do not support HTTPS, these subdomains will become inaccessible.': '如果您的任何子域不支持 HTTPS，這些子域將變為不可訪問。',\r\n    'Preloading': '預載入',\r\n    'Allow browser to automatically preload HSTS configuration': '允許瀏覽器自動預載入 HSTS 配置',\r\n    'Preloading may make websites that do not support HTTPS completely inaccessible.': '預載入可能會使不支持 HTTPS 的網站完全不可訪問。',\r\n    'Sniffless header': '無嗅探標頭',\r\n    'Send the \"X-Content-Type-Options: nosniff\" header to prevent Internet Explorer and Google Chrome from sniffing around in the declared Content-Type via MIME.': '發送 「X-Content-Type-Options: nosniff」 標頭，來防止 Internet Explorer 和 Google Chrome 瀏覽器通過 MIME 在聲明的 Content-Type 中四處嗅探。',\r\n    'HTTP Strict Transport Security (HSTS)': 'HTTP 嚴格傳輸安全 (HSTS)',\r\n    'You will need to specify the full path of the file.': '您將需要指定文件的完整路徑。',\r\n    '<p>HTTP Strict Transport Security (HSTS) can greatly improve the security of a website. However, when enabling HSTS, keep the following important considerations in mind:</p><strong>HTTPS (SSL) must be enabled to use HSTS. </strong><ul><li> If you turn on HSTS, but your website does not support HTTPS, the browser will not accept HSTS settings. </li><li>If you enable HSTS but leave Cloudflare, you need to continue to support HTTPS through a new service provider, otherwise, visitors will not be able to access your site until you support HTTPS. </li><li>If Cloudflare’s HTTPS is turned off after HSTS is enabled and there is no valid SSL certificate on the origin server, visitors will not be able to access your website. </li><li>Note: Cloudflare’s HTTP can be disabled in several ways: masking subdomains in DNS records, \"suspending\" Cloudflare services, or using a custom SSL certificate that is incorrectly configured on your Cloudflare dashboard (e.g. , Invalid SSL certificate, expired certificate, or mismatched hostname). </li></ul><p>If you need to disable HTTPS on your domain, you must first disable HSTS in your Cloudflare dashboard and wait until the maximum period has passed (to ensure that every browser is aware of this change) Before you can disable HTTPS. The average maximum period is six months (you can set the maximum period in the next step). If you delete HTTPS before disabling HSTS, visitors will not be able to access your site until the maximum period is reached or you support HTTPS again. Since disabling HTTPS on HSTS-enabled websites may cause these consequences, we strongly recommend that you deploy the HTTPS service before enabling this feature</p>'\r\n        : '<div><p>HTTP 嚴格傳輸安全 (HTTP Strict Transport Security, HSTS) 可以大幅提高網站的安全性。但是，啟用 HSTS 時，請謹記以下重要注意事項：</p><strong>必須啟用 HTTPS (SSL) 才能使用 HSTS。</strong><ul><li>如果您打開 HSTS，但您的網站不支持 HTTPS，瀏覽器將不接受 HSTS 設置。</li><li>如果您啟用了 HSTS 但離開了 Cloudflare，您需要通過新的服務提供商繼續支持 HTTPS，否則，在您支持 HTTPS 之前，訪問者將無法訪問您的站點。</li><li>如果在啟用 HSTS 後關閉了 Cloudflare 的 HTTPS，並且源伺服器上沒有有效的 SSL 證書，訪問者將無法訪問您的網站。</li><li>注意：可以通過以下幾種方法禁用 Cloudflare 的 HTTP：在 DNS 記錄中遮蔽子域，「暫停」 Cloudflare 服務，或通過您的 Cloudflare 儀錶板配置錯誤的自定義 SSL 證書（例如，無效的 SSL 證書、過期證書或不匹配的主機名）。</li></ul><p>如果您需要在域上禁用 HTTPS，必須先在您的 Cloudflare 儀錶板中禁用 HSTS，並等到最長期限過去（以確保每個瀏覽器都知道此更改），然後才能禁用 HTTPS。平均最長期限為六個月（您可以在下一步中設置最長期限）。如果您在禁用 HSTS 之前刪除了 HTTPS，訪問者將無法訪問您的網站，直至達到最長期限或您再次支持 HTTPS。由於在啟用 HSTS 的網站上禁用 HTTPS 可能會導致這些後果，因此我們強烈建議您先部署 HTTPS 服務再啟用此功能</p></div>',\r\n    'If not configured correctly, HTTP Strict Transport Security (HSTS) may make your website inaccessible for a long time.': '如果配置不正確，HTTP 嚴格傳輸安全 (HSTS) 可能會使您的網站長時間不可訪問。',\r\n\r\n\r\n    // cache\r\n    'URL must not be empty': 'URL不得為空',\r\n    'If your server is shut down, Cloudflare will use our cache to serve the static pages of your website.': '如果您的伺服器關閉，Cloudflare 將使用我們的緩存為您的網站的靜態頁面提供服務。',\r\n    'Temporarily bypass our cache to see the changes made to your origin server in real time. <br />Note: Enabling this feature can significantly speed up the loading speed of the origin server. The development mode does not clear the cache, so you need to clear the files after the development mode expires.': '暫時繞過我們的緩存可以實時查看對您的源伺服器進行的更改。<br />注意：啟用此功能可顯著加快源伺服器的載入速度。開發模式不會清除緩存，因此需要在開發模式過期後清除文件。',\r\n    'Custom clear': '自定義清除',\r\n    'Clear cache': '清除緩存',\r\n\r\n    'Clear all caches, use with caution': '清理全部緩存，慎用',\r\n    'Are you sure you want to clear all caches': '您確定要清理全部緩存嗎？',\r\n    'Clean up all': '清理全部',\r\n    'Currently, wildcards are not supported when clearing a single URL. You can clear up to 30 URLs at once. Separate URLs one per line.': '目前進行單個 URL 清除時不支持通配符。您一次最多可以清除 30 個 URL。按照每行一個的方式分隔 URL。',\r\n    'Example': '示例：',\r\n    'Clear the cache files to force Cloudflare to extract the latest versions of these files from your web server. You can erase files selectively, or you can erase all files at the same time. <br /><strong>Note:</strong> Clearing the cache may temporarily degrade the performance of your website and increase the time it takes to load files on your origin server.'\r\n        : '<div>清除緩存文件以強制 Cloudflare 從您的 Web 伺服器中提取這些文件的最新版本。您可以選擇性地清除文件，也可以同時清除所有文件。<br /><strong>注意：</strong>清除緩存可能會使您的網站性能暫時降級，並延長在您的源伺服器上載入文件的時間。</div>',\r\n    'Development Mode™': '開發模式™',\r\n    'Cache level': '緩存級別',\r\n    'No query string': '沒有查詢字元串',\r\n    'Ignore query string': '忽略查詢字元串',\r\n    'Standard': '標準',\r\n    'Determine the amount of static content you want Cloudflare to cache your website. Increasing the cache can shorten the page load time.': '確定您希望 Cloudflare 對您的網站進行緩存的靜態內容量。增加緩存可以縮短頁面載入時間。',\r\n    'Browser cache TTL': '瀏覽器緩存 TTL',\r\n    'Follow existing headers': '遵循現有標頭',\r\n    'Determine how long Cloudflare instructs visitors’ browsers to cache files. During this period, the browser will load files from its local cache, thereby improving page loading speed.': '確定 Cloudflare 指示訪問者的瀏覽器緩存文件的時長。在此期間，瀏覽器會從其本地緩存中載入文件，從而提高頁面載入速度。',\r\n    // Netword\r\n    'Speed up your website with HTTP/2': '使用 HTTP/2 加速您的網站',\r\n    'Use QUIC to accelerate HTTP requests. QUIC provides higher encryption and performance than TCP and TLS.': '使用 QUIC 加速 HTTP 請求，QUIC 提供比 TCP 和 TLS 更高的加密和性能。',\r\n    'Improve the performance of clients that have previously connected to your website.': '提高之前已連接到您網站的客戶端的性能。',\r\n    'Allow a WebSocket connection with your origin server. <br />Concurrent connection criteria applicable to your plan: low': '<div>允許與您的源伺服器建立 WebSocket 連接。<br />適用於您所用計劃的並發連接準則：low</div>',\r\n    \"Onion routing allows traffic from legitimate users on the Tor network to be routed through Cloudflare's onion service instead of exit nodes, thereby improving user privacy and achieving more detailed protection.\": '洋蔥路由允許通過 Cloudflare 的洋蔥服務而不是退出節點路由來自 Tor 網路上合法用戶的流量，從而改善用戶的隱私並實現更細化的保護。',\r\n    'Contains the country code of the visitor』s location and all requests sent to your website. <br /><strong>Note:</strong> You must retrieve the IP geolocation information from the CF-IPCountry HTTP header.': '包含訪問者位置的國家/地區代碼和所有發送到您網站的請求。<br /><strong>注意：</strong>您必須從 CF-IPCountry HTTP 標頭減檢索 IP 地理位置信息。',\r\n    'HTTP/3 (using QUIC)': 'HTTP/3（使用 QUIC）',\r\n    '0-RTT connection recovery': '0-RTT 連接恢復',\r\n    'Onion routing': '洋蔥路由',\r\n    'IP geolocation': 'IP 地理位置',\r\n\r\n    // Operation\r\n    'Manage DNS': '管理DNS記錄',\r\n    'Copy cname record': '拷貝cname記錄',\r\n    \"Copy successfully\": \"拷貝成功\",\r\n    'Delete': '刪除',\r\n\r\n    //Overview\r\n    'Development model': '開發模式',\r\n    'Quick operation': '快速操作',\r\n    'Under Attack Mode': 'Under Attack 模式',\r\n    'Temporarily bypass our cache. View changes made to your source server in real time.': '暫時繞過我們的緩存。實時查看對您的源伺服器進行的更改。',\r\n    'Close (Enterprise)': '關閉（Enterprise）',\r\n    'Basic (essentially off)': '基本（本質上為關）',\r\n    'low': '低',\r\n    'medium': '中',\r\n    'high': '高',\r\n    'under_attack': '無敵',\r\n    'Display JavaScript challenges when visitors visit your site.': '在訪問者訪問您的站點時顯示 JavaScript 質詢。',\r\n\r\n    //PageRules\r\n    'URL/description': 'URL/說明',\r\n    'Failed to get page rules': '獲取頁面規則失敗',\r\n    'Page rules': '頁面規則',\r\n    '<div>Page rules are used to control which Cloudflare settings are triggered for a given URL. Only one page rule is triggered for each URL, so if you sort the page rules in order of priority, this is very useful. Please set the URL mode as specific as possible.<br />You have {number} page rules left.</div>'\r\n        : '頁面規則用於控制針對給定的 URL 觸發哪些 Cloudflare 設置。針對每個 URL 僅觸發一個頁面規則，因此，如果您按照優先順序順序對頁面規則進行排序，則這非常有用，請儘可能將 URL 模式設置得具體些。<br />您剩下 {number} 個頁面規則。',\r\n    // : '{number}',\r\n\r\n    //ScrapeShield\r\n    'Email address obfuscation technique': '電子郵件地址混淆技術',\r\n    'Display an obfuscated email address on your website to prevent automated programs and spammers from obtaining it, while for human visitors, no visible changes will be made to the address.': '在您的網站上顯示經過模糊處理的電子郵件地址，以防止機自動程序和垃圾郵件製造者獲取該地址，而對於人類訪問者，則不會對地址進行任何可見更改。',\r\n    'Server side exclusion': '伺服器端排除',\r\n    'Automatically hide specific content to prevent visitors with a bad reputation from viewing': '自動隱藏特定內容以防聲譽不好的訪問者查看',\r\n    'Hotlink protection': 'Hotlink 保護',\r\n    'Prevent offsite links pointing to your images.': '防止站外鏈接指向您的圖像。',\r\n\r\n    //SslTls\r\n    'Always use HTTPS': '始終使用 HTTPS',\r\n    'Redirect all requests using the \"http\" scheme to \"https\". This will apply to all http requests in the area.': '將所有使用方案 「http」 的請求重定向到 「https」。這將應用於該區域的所有 http 請求。',\r\n    'Random encryption': '隨機加密',\r\n    'Random encryption allows browsers to know that your site is provided through an encrypted connection, allowing them to benefit from the performance improvements of HTTP/2. The browser will continue to display \"http\" in the address bar instead of \"https\".': '隨機加密可以讓瀏覽器知道您的站點通過加密連接提供，從而讓它們從 HTTP/2 的性能改進中受益。瀏覽器將繼續在地址欄中顯示 「http」，而不是 「https」。',\r\n    'Automatic HTTPS rewrite': '自動 HTTPS 重寫',\r\n    'Automatic HTTPS rewriting helps correct mixed content by changing \"http\" to \"https\" for all resources or links on websites that can be served by HTTPS.': '自動 HTTPS 重寫通過將可以使用 HTTPS 提供服務的網站上所有資源或鏈接的 「http」 更改為 「https」 來幫助修正混合內容。',\r\n    'Your SSL/TLS encryption mode is {mode}': '您的 SSL/TLS 加密模式為 {mode}',\r\n    'No encryption applied': '未應用加密',\r\n    'Close (unsafe)': '關閉（不安全）',\r\n    'Flexible': '靈活',\r\n    'Encrypt the traffic between the browser and Cloudflare': '加密瀏覽器與 Cloudflare 之間的流量',\r\n    'End-to-end encryption, using self-signed certificate on the server': '端到端加密，使用伺服器上的自簽名證書',\r\n    'Full': '完全',\r\n    'End-to-end encryption, but a trusted CA certificate or Cloudflare Origin CA certificate is required on the server': '端到端加密，但伺服器上需要有受信任的 CA 證書或 Cloudflare Origin CA 證書',\r\n    'Complete (strict)': '完全（嚴格）',\r\n    'This setting was last changed': '此設置上次更改時間為',\r\n    'Minimum TLS version': '最低 TLS 版本',\r\n    'Only allow HTTPS connections from visitors who support the selected TLS protocol version or higher.': '僅允許來自支持所選 TLS 協議版本或更高版本的訪問者的 HTTPS 連接。',\r\n    'Click to switch': '點擊切換',\r\n    'Turn off HTTP Strict Transport Security (HSTS)': '關閉HTTP 嚴格傳輸安全 (HSTS)',\r\n    'Enable HTTP Strict Transport Security (HSTS)': '啟用HTTP 嚴格傳輸安全 (HSTS)',\r\n    'Enforce web security policies on your website.': '對您的網站強制執行 Web 安全策略。',\r\n\r\n    // Frame\r\n    'Console': '控制台',\r\n    'Domain management': '域名管理',\r\n    'Domain list': '域名列表',\r\n    'Add domain': '添加域名',\r\n    'Visit Author': '訪問作者博客',\r\n    'Visit Cloudflare': '訪問 Cloudflare',\r\n    'Sign out': '退出登錄',\r\n\r\n\r\n    'Click close': '點擊關閉',\r\n    'Click to open': '點擊開啟',\r\n    'No right to operate': '無權操作',\r\n    // <FormattedMessage id='Manage'/>\r\n\r\n}\r\nexport default zh_CN","const en_US = {\r\n    \"Remember me\": \"Remember me\",\r\n    \"Log in\": \"Log in\",\r\n    \"Login\": \"Login\",\r\n    \"Submitting\": \"Submitting\",\r\n    \"Login successful\": \"Login successful\",\r\n    \"Login failed\": \"Login failed\",\r\n    \"Please input your Username!\": \"Please input your Username!\",\r\n    \"Please input your Password!\": \"Please input your Password!\",\r\n    \"Overview\": \"Overview\",\r\n    \"SSL-TLS\": \"SSL-TLS\",\r\n    \"Firewall\": \"Firewall\",\r\n    \"Page Rules\": \"Page Rules\",\r\n    \"Network\": \"Network\",\r\n    \"Cache\": \"Cache\",\r\n    \"Scrape Shield\": \"Scrape Shield\",\r\n    \"Switch successfully\": \"Switch successfully\",\r\n    \"Switching failed\": \"Switching failed\",\r\n    \"Add domain name successfully\": \"Add domain name successfully\",\r\n    \"Failed to add domain\": \"Failed to add domain\",\r\n    \"Please input your Zone Name\": \"Please input your Zone Name\",\r\n    \"Zone Name\": \"Zone Name\",\r\n    \"Submit\": \"Submit\",\r\n    \"Zone\": \"Zone\",\r\n    \"Status\": \"Status\",\r\n    \"Operation\": \"Operation\",\r\n    \"Record Type\": \"Record Type\",\r\n    \"Host Name\": \"Host Name\",\r\n    \"Content\": \"Content\",\r\n    \"TTL\": \"TTL\",\r\n    \"Add a Dnsrecord\": \"Add a Dnsrecord\",\r\n    \"Failed to load dns record\": \"Failed to load dns record\",\r\n    \"Added record successfully\": \"Added record successfully\",\r\n    \"Update record successfully\": \"Update record successfully\",\r\n    \"Record Name\": \"Record Name\",\r\n    \"Record Content\": \"Record Content\",\r\n    \"CDN\": \"CDN\",\r\n    \"Please input your Record Name\": \"Please input your Record Name\",\r\n    \"Please input your Record Type\": \"Please input your Record Type\",\r\n    \"Please input your Record Content\": \"Please input your Record Content\",\r\n    \"Please input your TTL\": \"Please input your TTL\",\r\n    \"Please input your CDN\": \"Please input your CDN\",\r\n    \"Manage\": \"Manage\",\r\n    \"Update completed\": \"Update completed\",\r\n    \"Successfully deleted\": \"Successfully deleted\",\r\n    \"You sure you want to delete it?\": \"You sure you want to delete it?\",\r\n    \"Yes\": \"Yes\",\r\n    \"No\": \"No\",\r\n    \"Cancel\": \"Cancel\",\r\n    \"Enable HSTS (Strict-Transport-Security)\": \"Enable HSTS (Strict-Transport-Security)\",\r\n    \"Provide HSTS headers for all HTTPS requests\": \"Provide HSTS headers for all HTTPS requests\",\r\n    \"Maximum age header (max-age)\": \"Maximum age header (max-age)\",\r\n    \"Specify the duration of HSTS header caching in the browser\": \"Specify the duration of HSTS header caching in the browser\",\r\n    \"0 (disabled)\": \"0 (disabled)\",\r\n    \"Apply HSTS policy to subdomains (includeSubDomains)\": \"Apply HSTS policy to subdomains (includeSubDomains)\",\r\n    \"Every domain under this domain will inherit the same HSTS header\": \"Every domain under this domain will inherit the same HSTS header\",\r\n    \"Warning\": \"Warning\",\r\n    \"If any of your subdomains do not support HTTPS, these subdomains will become inaccessible.\": \"If any of your subdomains do not support HTTPS, these subdomains will become inaccessible.\",\r\n    \"Preloading\": \"Preloading\",\r\n    \"Allow browser to automatically preload HSTS configuration\": \"Allow browser to automatically preload HSTS configuration\",\r\n    \"Preloading may make websites that do not support HTTPS completely inaccessible.\": \"Preloading may make websites that do not support HTTPS completely inaccessible.\",\r\n    \"Sniffless header\": \"Sniffless header\",\r\n    \"Send the \\\"X-Content-Type-Options: nosniff\\\" header to prevent Internet Explorer and Google Chrome from sniffing around in the declared Content-Type via MIME.\": \"Send the \\\"X-Content-Type-Options: nosniff\\\" header to prevent Internet Explorer and Google Chrome from sniffing around in the declared Content-Type via MIME.\",\r\n    \"HTTP Strict Transport Security (HSTS)\": \"HTTP Strict Transport Security (HSTS)\",\r\n    \"You will need to specify the full path of the file.\": \"You will need to specify the full path of the file.\",\r\n    \"<p>HTTP Strict Transport Security (HSTS) can greatly improve the security of a website. However, when enabling HSTS, keep the following important considerations in mind:</p><strong>HTTPS (SSL) must be enabled to use HSTS. </strong><ul><li> If you turn on HSTS, but your website does not support HTTPS, the browser will not accept HSTS settings. </li><li>If you enable HSTS but leave Cloudflare, you need to continue to support HTTPS through a new service provider, otherwise, visitors will not be able to access your site until you support HTTPS. </li><li>If Cloudflare’s HTTPS is turned off after HSTS is enabled and there is no valid SSL certificate on the origin server, visitors will not be able to access your website. </li><li>Note: Cloudflare’s HTTP can be disabled in several ways: masking subdomains in DNS records, \\\"suspending\\\" Cloudflare services, or using a custom SSL certificate that is incorrectly configured on your Cloudflare dashboard (e.g. , Invalid SSL certificate, expired certificate, or mismatched hostname). </li></ul><p>If you need to disable HTTPS on your domain, you must first disable HSTS in your Cloudflare dashboard and wait until the maximum period has passed (to ensure that every browser is aware of this change) Before you can disable HTTPS. The average maximum period is six months (you can set the maximum period in the next step). If you delete HTTPS before disabling HSTS, visitors will not be able to access your site until the maximum period is reached or you support HTTPS again. Since disabling HTTPS on HSTS-enabled websites may cause these consequences, we strongly recommend that you deploy the HTTPS service before enabling this feature</p>\": \"<p>HTTP Strict Transport Security (HSTS) can greatly improve the security of a website. However, when enabling HSTS, keep the following important considerations in mind:</p><strong>HTTPS (SSL) must be enabled to use HSTS. </strong><ul><li> If you turn on HSTS, but your website does not support HTTPS, the browser will not accept HSTS settings. </li><li>If you enable HSTS but leave Cloudflare, you need to continue to support HTTPS through a new service provider, otherwise, visitors will not be able to access your site until you support HTTPS. </li><li>If Cloudflare’s HTTPS is turned off after HSTS is enabled and there is no valid SSL certificate on the origin server, visitors will not be able to access your website. </li><li>Note: Cloudflare’s HTTP can be disabled in several ways: masking subdomains in DNS records, \\\"suspending\\\" Cloudflare services, or using a custom SSL certificate that is incorrectly configured on your Cloudflare dashboard (e.g. , Invalid SSL certificate, expired certificate, or mismatched hostname). </li></ul><p>If you need to disable HTTPS on your domain, you must first disable HSTS in your Cloudflare dashboard and wait until the maximum period has passed (to ensure that every browser is aware of this change) Before you can disable HTTPS. The average maximum period is six months (you can set the maximum period in the next step). If you delete HTTPS before disabling HSTS, visitors will not be able to access your site until the maximum period is reached or you support HTTPS again. Since disabling HTTPS on HSTS-enabled websites may cause these consequences, we strongly recommend that you deploy the HTTPS service before enabling this feature</p>\",\r\n    \"If not configured correctly, HTTP Strict Transport Security (HSTS) may make your website inaccessible for a long time.\": \"If not configured correctly, HTTP Strict Transport Security (HSTS) may make your website inaccessible for a long time.\",\r\n    \"URL must not be empty\": \"URL must not be empty\",\r\n    \"If your server is shut down, Cloudflare will use our cache to serve the static pages of your website.\": \"If your server is shut down, Cloudflare will use our cache to serve the static pages of your website.\",\r\n    \"Temporarily bypass our cache to see the changes made to your origin server in real time. <br />Note: Enabling this feature can significantly speed up the loading speed of the origin server. The development mode does not clear the cache, so you need to clear the files after the development mode expires.\": \"Temporarily bypass our cache to see the changes made to your origin server in real time. <br />Note: Enabling this feature can significantly speed up the loading speed of the origin server. The development mode does not clear the cache, so you need to clear the files after the development mode expires.\",\r\n    \"Custom clear\": \"Custom clear\",\r\n    \"Clear cache\": \"Clear cache\",\r\n    \"Clear all caches, use with caution\": \"Clear all caches, use with caution\",\r\n    \"Are you sure you want to clear all caches\": \"Are you sure you want to clear all caches\",\r\n    \"Clean up all\": \"Clean up all\",\r\n    \"Currently, wildcards are not supported when clearing a single URL. You can clear up to 30 URLs at once. Separate URLs one per line.\": \"Currently, wildcards are not supported when clearing a single URL. You can clear up to 30 URLs at once. Separate URLs one per line.\",\r\n    \"Example\": \"Example\",\r\n    \"Clear the cache files to force Cloudflare to extract the latest versions of these files from your web server. You can erase files selectively, or you can erase all files at the same time. <br /><strong>Note:</strong> Clearing the cache may temporarily degrade the performance of your website and increase the time it takes to load files on your origin server.\": \"Clear the cache files to force Cloudflare to extract the latest versions of these files from your web server. You can erase files selectively, or you can erase all files at the same time. <br /><strong>Note:</strong> Clearing the cache may temporarily degrade the performance of your website and increase the time it takes to load files on your origin server.\",\r\n    \"Development Mode™\": \"Development Mode™\",\r\n    \"Cache level\": \"Cache level\",\r\n    \"No query string\": \"No query string\",\r\n    \"Ignore query string\": \"Ignore query string\",\r\n    \"Standard\": \"Standard\",\r\n    \"Determine the amount of static content you want Cloudflare to cache your website. Increasing the cache can shorten the page load time.\": \"Determine the amount of static content you want Cloudflare to cache your website. Increasing the cache can shorten the page load time.\",\r\n    \"Browser cache TTL\": \"Browser cache TTL\",\r\n    \"Follow existing headers\": \"Follow existing headers\",\r\n    \"Determine how long Cloudflare instructs visitors’ browsers to cache files. During this period, the browser will load files from its local cache, thereby improving page loading speed.\": \"Determine how long Cloudflare instructs visitors’ browsers to cache files. During this period, the browser will load files from its local cache, thereby improving page loading speed.\",\r\n    \"Speed up your website with HTTP/2\": \"Speed up your website with HTTP/2\",\r\n    \"Use QUIC to accelerate HTTP requests. QUIC provides higher encryption and performance than TCP and TLS.\": \"Use QUIC to accelerate HTTP requests. QUIC provides higher encryption and performance than TCP and TLS.\",\r\n    \"Improve the performance of clients that have previously connected to your website.\": \"Improve the performance of clients that have previously connected to your website.\",\r\n    \"Allow a WebSocket connection with your origin server. <br />Concurrent connection criteria applicable to your plan: low\": \"Allow a WebSocket connection with your origin server. <br />Concurrent connection criteria applicable to your plan: low\",\r\n    \"Onion routing allows traffic from legitimate users on the Tor network to be routed through Cloudflare's onion service instead of exit nodes, thereby improving user privacy and achieving more detailed protection.\": \"Onion routing allows traffic from legitimate users on the Tor network to be routed through Cloudflare's onion service instead of exit nodes, thereby improving user privacy and achieving more detailed protection.\",\r\n    \"Contains the country code of the visitor’s location and all requests sent to your website. <br /><strong>Note:</strong> You must retrieve the IP geolocation information from the CF-IPCountry HTTP header.\": \"Contains the country code of the visitor’s location and all requests sent to your website. <br /><strong>Note:</strong> You must retrieve the IP geolocation information from the CF-IPCountry HTTP header.\",\r\n    \"HTTP/3 (using QUIC)\": \"HTTP/3 (using QUIC)\",\r\n    \"0-RTT connection recovery\": \"0-RTT connection recovery\",\r\n    \"Onion routing\": \"Onion routing\",\r\n    \"IP geolocation\": \"IP geolocation\",\r\n    \"Manage DNS\": \"Manage DNS\",\r\n    'Copy cname record': 'Copy cname record',\r\n    \"Copy successfully\": \"Copy successfully\",\r\n    \"Delete\": \"Delete\",\r\n    \"Development model\": \"Development model\",\r\n    \"Quick operation\": \"Quick operation\",\r\n    \"Under Attack Mode\": \"Under Attack Mode\",\r\n    \"Temporarily bypass our cache. View changes made to your source server in real time.\": \"Temporarily bypass our cache. View changes made to your source server in real time.\",\r\n    \"Close (Enterprise)\": \"Close (Enterprise)\",\r\n    \"Basic (essentially off)\": \"Basic (essentially off)\",\r\n    \"low\": \"low\",\r\n    \"medium\": \"medium\",\r\n    \"high\": \"high\",\r\n    \"under_attack\": \"under_attack\",\r\n    \"Display JavaScript challenges when visitors visit your site.\": \"Display JavaScript challenges when visitors visit your site.\",\r\n    \"URL/description\": \"URL/description\",\r\n    \"Failed to get page rules\": \"Failed to get page rules\",\r\n    \"Page rules\": \"Page rules\",\r\n    \"<div>Page rules are used to control which Cloudflare settings are triggered for a given URL. Only one page rule is triggered for each URL, so if you sort the page rules in order of priority, this is very useful. Please set the URL mode as specific as possible.<br />You have {number} page rules left.</div>\": \"<div>Page rules are used to control which Cloudflare settings are triggered for a given URL. Only one page rule is triggered for each URL, so if you sort the page rules in order of priority, this is very useful. Please set the URL mode as specific as possible.<br />You have {number} page rules left.</div>\",\r\n    \"Email address obfuscation technique\": \"Email address obfuscation technique\",\r\n    \"Display an obfuscated email address on your website to prevent automated programs and spammers from obtaining it, while for human visitors, no visible changes will be made to the address.\": \"Display an obfuscated email address on your website to prevent automated programs and spammers from obtaining it, while for human visitors, no visible changes will be made to the address.\",\r\n    \"Server side exclusion\": \"Server side exclusion\",\r\n    \"Automatically hide specific content to prevent visitors with a bad reputation from viewing\": \"Automatically hide specific content to prevent visitors with a bad reputation from viewing\",\r\n    \"Hotlink protection\": \"Hotlink protection\",\r\n    \"Prevent offsite links pointing to your images.\": \"Prevent offsite links pointing to your images.\",\r\n    \"Always use HTTPS\": \"Always use HTTPS\",\r\n    \"Redirect all requests using the \\\"http\\\" scheme to \\\"https\\\". This will apply to all http requests in the area.\": \"Redirect all requests using the \\\"http\\\" scheme to \\\"https\\\". This will apply to all http requests in the area.\",\r\n    \"Random encryption\": \"Random encryption\",\r\n    \"Random encryption allows browsers to know that your site is provided through an encrypted connection, allowing them to benefit from the performance improvements of HTTP/2. The browser will continue to display \\\"http\\\" in the address bar instead of \\\"https\\\".\": \"Random encryption allows browsers to know that your site is provided through an encrypted connection, allowing them to benefit from the performance improvements of HTTP/2. The browser will continue to display \\\"http\\\" in the address bar instead of \\\"https\\\".\",\r\n    \"Automatic HTTPS rewrite\": \"Automatic HTTPS rewrite\",\r\n    \"Automatic HTTPS rewriting helps correct mixed content by changing \\\"http\\\" to \\\"https\\\" for all resources or links on websites that can be served by HTTPS.\": \"Automatic HTTPS rewriting helps correct mixed content by changing \\\"http\\\" to \\\"https\\\" for all resources or links on websites that can be served by HTTPS.\",\r\n    \"Your SSL/TLS encryption mode is {mode}\": \"Your SSL/TLS encryption mode is {mode}\",\r\n    \"No encryption applied\": \"No encryption applied\",\r\n    \"Close (unsafe)\": \"Close (unsafe)\",\r\n    \"Flexible\": \"Flexible\",\r\n    \"Encrypt the traffic between the browser and Cloudflare\": \"Encrypt the traffic between the browser and Cloudflare\",\r\n    \"End-to-end encryption, using self-signed certificate on the server\": \"End-to-end encryption, using self-signed certificate on the server\",\r\n    \"Full\": \"Full\",\r\n    \"End-to-end encryption, but a trusted CA certificate or Cloudflare Origin CA certificate is required on the server\": \"End-to-end encryption, but a trusted CA certificate or Cloudflare Origin CA certificate is required on the server\",\r\n    \"Complete (strict)\": \"Complete (strict)\",\r\n    \"This setting was last changed\": \"This setting was last changed\",\r\n    \"Minimum TLS version\": \"Minimum TLS version\",\r\n    \"Only allow HTTPS connections from visitors who support the selected TLS protocol version or higher.\": \"Only allow HTTPS connections from visitors who support the selected TLS protocol version or higher.\",\r\n    \"Click to switch\": \"Click to switch\",\r\n    \"Turn off HTTP Strict Transport Security (HSTS)\": \"Turn off HTTP Strict Transport Security (HSTS)\",\r\n    \"Enable HTTP Strict Transport Security (HSTS)\": \"Enable HTTP Strict Transport Security (HSTS)\",\r\n    \"Enforce web security policies on your website.\": \"Enforce web security policies on your website.\",\r\n    \"Console\": \"Console\",\r\n    \"Domain management\": \"Domain management\",\r\n    \"Domain list\": \"Domain list\",\r\n    \"Add domain\": \"Add domain\",\r\n    \"Visit Author\": \"Visit Author\",\r\n    \"Visit Cloudflare\": \"Visit Cloudflare\",\r\n    \"Sign out\": \"Sign out\",\r\n    \"Click close\": \"Click close\",\r\n    \"Click to open\": \"Click to open\",\r\n    \"No right to operate\": \"No right to operate\"\r\n}\r\nexport default en_US","const ja_JP = {\r\n    \"Remember me\": \"パスワードを覚えてください\",\r\n    \"Log in\": \"ログイン\",\r\n    \"Login\": \"ログイン\",\r\n    \"Submitting\": \"提出中です\",\r\n    \"Login successful\": \"ログイン成功！\",\r\n    \"Login failed\": \"ログイン失敗！\",\r\n    \"Please input your Username!\": \"ユーザー名を入力してください。\",\r\n    \"Please input your Password!\": \"パスワードを入力してください。\",\r\n    \"Overview\": \"概要\",\r\n    \"SSL-TLS\": \"SSL-TLS\",\r\n    \"Firewall\": \"防火壁\",\r\n    \"Page Rules\": \"ページのルール\",\r\n    \"Network\": \"ネットワーク\",\r\n    \"Cache\": \"キャッシュ\",\r\n    \"Scrape Shield\": \"内容の保護\",\r\n    \"Switch successfully\": \"切り替え成功！\",\r\n    \"Switching failed\": \"切替失敗:{msg}\",\r\n    \"Add domain name successfully\": \"ドメインの追加に成功しました\",\r\n    \"Failed to add domain\": \"ドメイン名の追加に失敗しました:{msg}\",\r\n    \"Please input your Zone Name\": \"ドメイン名を入力してください。\",\r\n    \"Zone Name\": \"ドメイン名\",\r\n    \"Submit\": \"送信\",\r\n    \"Zone\": \"ドメイン名\",\r\n    \"Status\": \"状態\",\r\n    \"Operation\": \"操作\",\r\n    \"Record Type\": \"レコードの種類\",\r\n    \"Host Name\": \"レコード名\",\r\n    \"Content\": \"レコード値\",\r\n    \"TTL\": \"TT\",\r\n    \"Add a Dnsrecord\": \"レコードを追加\",\r\n    \"Failed to load dns record\": \"dnsレコードの読み込みに失敗しました。{msg}\",\r\n    \"Added record successfully\": \"レコードの追加に成功しました。\",\r\n    \"Update record successfully\": \"記録の更新に成功しました\",\r\n    \"Record Name\": \"レコード名\",\r\n    \"Record Content\": \"内容を記録する\",\r\n    \"CDN\": \"CDN\",\r\n    \"Please input your Record Name\": \"レコード名を入力してください。\",\r\n    \"Please input your Record Type\": \"記録の種類を入力してください。\",\r\n    \"Please input your Record Content\": \"記録内容を入力してください。\",\r\n    \"Please input your TTL\": \"TTLを入力してください\",\r\n    \"Please input your CDN\": \"CDNを入力してください\",\r\n    \"Manage\": \"管理\",\r\n    \"Update completed\": \"更新成功！\",\r\n    \"Successfully deleted\": \"削除成功！\",\r\n    \"You sure you want to delete it?\": \"本当に削除しますか？\",\r\n    \"Yes\": \"を選択します\",\r\n    \"No\": \"いいえ、\",\r\n    \"Cancel\": \"キャンセル\",\r\n    \"Enable HSTS (Strict-Transport-Security)\": \"HSTSを有効にします。\",\r\n    \"Provide HSTS headers for all HTTPS requests\": \"すべてのHTTPS要求にHSTSヘッダを提供する。\",\r\n    \"Maximum age header (max-age)\": \"最長期限ヘッダ（max-age）\",\r\n    \"Specify the duration of HSTS header caching in the browser\": \"HSTSヘッダがブラウザにキャッシュされる持続時間を指定します。\",\r\n    \"0 (disabled)\": \"0(無効)\",\r\n    \"Apply HSTS policy to subdomains (includeSubDomains)\": \"HSTSポリシーをサブドメインに適用する。\",\r\n    \"Every domain under this domain will inherit the same HSTS header\": \"このドメインの各ドメインは同じHSTSヘッダを継承します。\",\r\n    \"Warning\": \"警告:\",\r\n    \"If any of your subdomains do not support HTTPS, these subdomains will become inaccessible.\": \"あなたのサブドメインがHTTPSをサポートしていない場合、これらのサブドメインはアクセス不可になります。\",\r\n    \"Preloading\": \"プリロード\",\r\n    \"Allow browser to automatically preload HSTS configuration\": \"ブラウザがHSTS設定を自動でプリロードすることを許可します。\",\r\n    \"Preloading may make websites that do not support HTTPS completely inaccessible.\": \"プリローディングはHTTPSをサポートしていないウェブサイトを完全にアクセスできなくする可能性があります。\",\r\n    \"Sniffless header\": \"嗅覚なし\",\r\n    \"Send the \\\"X-Content-Type-Options: nosniff\\\" header to prevent Internet Explorer and Google Chrome from sniffing around in the declared Content-Type via MIME.\": \"「X-Connect-Type-Options:nosniff」のヘッダを送信して、Internet ExplorerとGoogle ChromeブラウザがMIMEを通じて声明のContent-Typeの中であちこち嗅ぎ分けることを防止します。\",\r\n    \"HTTP Strict Transport Security (HSTS)\": \"HTTP厳格伝送安全（HSTS）\",\r\n    \"You will need to specify the full path of the file.\": \"ファイルのフルパスを指定する必要があります。\",\r\n    \"<p>HTTP Strict Transport Security (HSTS) can greatly improve the security of a website. However, when enabling HSTS, keep the following important considerations in mind:</p><strong>HTTPS (SSL) must be enabled to use HSTS. </strong><ul><li> If you turn on HSTS, but your website does not support HTTPS, the browser will not accept HSTS settings. </li><li>If you enable HSTS but leave Cloudflare, you need to continue to support HTTPS through a new service provider, otherwise, visitors will not be able to access your site until you support HTTPS. </li><li>If Cloudflare’s HTTPS is turned off after HSTS is enabled and there is no valid SSL certificate on the origin server, visitors will not be able to access your website. </li><li>Note: Cloudflare’s HTTP can be disabled in several ways: masking subdomains in DNS records, \\\"suspending\\\" Cloudflare services, or using a custom SSL certificate that is incorrectly configured on your Cloudflare dashboard (e.g. , Invalid SSL certificate, expired certificate, or mismatched hostname). </li></ul><p>If you need to disable HTTPS on your domain, you must first disable HSTS in your Cloudflare dashboard and wait until the maximum period has passed (to ensure that every browser is aware of this change) Before you can disable HTTPS. The average maximum period is six months (you can set the maximum period in the next step). If you delete HTTPS before disabling HSTS, visitors will not be able to access your site until the maximum period is reached or you support HTTPS again. Since disabling HTTPS on HSTS-enabled websites may cause these consequences, we strongly recommend that you deploy the HTTPS service before enabling this feature</p>\": \"＜div＞＜p＞HTTP厳格トランスポートセキュリティ（HTTP Strict Transport Security、HSTS）は、サイトのセキュリティを大幅に向上させることができます。ただし、HSTSを有効にするには、以下の重要な注意事項をメモしてください。</strong><ul><li>HSTSを開けば、あなたのサイトはHTTPSをサポートしていません。ブラウザはHSTSの設定を受け付けません。</li><li>HSTSを有効にしてもCloudflareを離れたら、新しいサービスプロバイダを通じてHTTPSをサポートし続ける必要があります。そうでなければ、HTTPSをサポートする前に、訪問者はあなたのサイトにアクセスできなくなります。</li><li>HSTSを有効にした後、CloudflareのHTTPSをオフにし、ソースサーバに有効なSSL証明書がないと、訪問者はあなたのウェブサイトにアクセスできません。＜li＞＜li＞注意：CloudflareのHTTPは、DNS記録において、サブドメインを隠し、“一時停止”Cloudflareサービス、またはCloudflareメータボードを介して、誤ったカスタムSSL証明書（例えば、無効なSSL証明書、期限切れ証明書、または不一致のホスト名）を設定することができます。</li></ul><p>もしあなたがドメイン上でHTTPSを無効にする必要があるなら、まずあなたのCloudflareメーターボードの中でHSTSを無効にして、そして最長期限が過ぎたら（各ブラウザがこの変更を知っていることを確認するため）、HTTPSを無効にすることができます。平均最長期間は6ヶ月です。HSTSを無効にする前にHTTPSを削除したら、訪問者はあなたのウェブサイトにアクセスできなくなります。最長期限に達するまでは、またHTTPSをサポートします。HSTSを有効にするウェブサイトでHTTPSを無効にすると、これらの結果につながる可能性があるので、HTTPSサービスを先に展開してからこの機能を有効にすることを強く推奨します。\",\r\n    \"If not configured correctly, HTTP Strict Transport Security (HSTS) may make your website inaccessible for a long time.\": \"正しく設定されていない場合、HTTPの厳密なトランスポート安全（HSTS）は、ウェブサイトに長時間アクセスできなくなる可能性があります。\",\r\n    \"URL must not be empty\": \"URLは空にしてはいけません\",\r\n    \"If your server is shut down, Cloudflare will use our cache to serve the static pages of your website.\": \"サーバがオフになったら、Cloudflareは私たちのキャッシュを使ってあなたのウェブサイトの静止ページにサービスを提供します。\",\r\n    \"Temporarily bypass our cache to see the changes made to your origin server in real time. <br />Note: Enabling this feature can significantly speed up the loading speed of the origin server. The development mode does not clear the cache, so you need to clear the files after the development mode expires.\": \"一時的にキャッシュを避けて、ソースサーバの変更をリアルタイムで確認できます。<br/>この機能を有効にすると、ソースサーバのロード速度が著しく速くなります。開発モードはキャッシュをクリアしませんので、開発モードが切れたらファイルをクリアする必要があります。\",\r\n    \"Custom clear\": \"カスタムクリア\",\r\n    \"Clear cache\": \"キャッシュをクリア\",\r\n    \"Clear all caches, use with caution\": \"キャッシュを全部整理して、慎重に使います。\",\r\n    \"Are you sure you want to clear all caches\": \"本当にキャッシュを全部整理しますか？\",\r\n    \"Clean up all\": \"全部整理します\",\r\n    \"Currently, wildcards are not supported when clearing a single URL. You can clear up to 30 URLs at once. Separate URLs one per line.\": \"現在は単一のURLクリアを行っていますが、ワイルドカードはサポートされていません。一回で最大30個のURLをクリアできます。URLは行ごとに一つずつ区切られます。\",\r\n    \"Example\": \"例:\",\r\n    \"Clear the cache files to force Cloudflare to extract the latest versions of these files from your web server. You can erase files selectively, or you can erase all files at the same time. <br /><strong>Note:</strong> Clearing the cache may temporarily degrade the performance of your website and increase the time it takes to load files on your origin server.\": \"＜div＞キャッシュファイルをクリアして、Cloudflareを強制的にWebサーバからこれらのファイルの最新バージョンを抽出します。ファイルを選択的にクリアすることもできますし、すべてのファイルを同時にクリアすることもできます。<br/><strong>キャッシュをクリアすると、ウェブサイトの機能が一時的に低下し、ソースサーバにファイルをロードする時間が長くなります。</div>\",\r\n    \"Development Mode™\": \"開発モード™\",\r\n    \"Cache level\": \"キャッシュレベル\",\r\n    \"No query string\": \"クエリー文字列がありません。\",\r\n    \"Ignore query string\": \"クエリー文字列を無視する\",\r\n    \"Standard\": \"標準\",\r\n    \"Determine the amount of static content you want Cloudflare to cache your website. Increasing the cache can shorten the page load time.\": \"Cloudflareがあなたのサイトをキャッシュする静的な容量を指定します。キャッシュを追加するとページの読み込み時間が短縮されます。\",\r\n    \"Browser cache TTL\": \"ブラウザキャッシュTTL\",\r\n    \"Follow existing headers\": \"既存のヘッダに従う\",\r\n    \"Determine how long Cloudflare instructs visitors’ browsers to cache files. During this period, the browser will load files from its local cache, thereby improving page loading speed.\": \"Cloudflareは、訪問者のブラウザキャッシュファイルの時間を指定します。この期間中は、ブラウザがローカルキャッシュからファイルを読み込み、ページの読み込み速度を向上させます。\",\r\n    \"Speed up your website with HTTP/2\": \"HTTP/2を使ってあなたのサイトを加速します。\",\r\n    \"Use QUIC to accelerate HTTP requests. QUIC provides higher encryption and performance than TCP and TLS.\": \"QUICCを用いてHTTP要求を加速し、QUICCはTCPとTLSより高い暗号化と性能を提供する。\",\r\n    \"Improve the performance of clients that have previously connected to your website.\": \"ウェブサイトに接続されているクライアントの性能を向上させます。\",\r\n    \"Allow a WebSocket connection with your origin server. <br />Concurrent connection criteria applicable to your plan: low\": \"＜div＞あなたのソースサーバとWebSocket接続を確立することができます。<br/>あなたの計画の同時接続基準に適用されます。low</div>\",\r\n    \"Onion routing allows traffic from legitimate users on the Tor network to be routed through Cloudflare's onion service instead of exit nodes, thereby improving user privacy and achieving more detailed protection.\": \"タマネギルートは、Cloudflareのタマネギサービスによって、ノードを終了してTorネットワーク上の合法的なユーザからのトラフィックをルーティングするのではなく、Cloudflareのサービスによって、ユーザのプライバシーを改善し、より詳細な保護を実現することができる。\",\r\n    \"Contains the country code of the visitor’s location and all requests sent to your website. <br /><strong>Note:</strong> You must retrieve the IP geolocation information from the CF-IPCountry HTTP header.\": \"訪問者の位置を含む国/地域コードとあなたのサイトに送るすべての要請。<br/><strong>注意：<strong>CF-IPCountry HTTPヘッダからIP地理位置情報を検索しなければなりません。\",\r\n    \"HTTP/3 (using QUIC)\": \"HTTP/3（QUICCを使用）\",\r\n    \"0-RTT connection recovery\": \"0-RTT接続復旧\",\r\n    \"Onion routing\": \"たまねぎルート\",\r\n    \"IP geolocation\": \"IP地理位置\",\r\n    \"Manage DNS\": \"DNSレコードの管理\",\r\n    'Copy cname record': 'cnameレコードをコピーする',\r\n    \"Copy successfully\": \"正常にコピー\",\r\n    \"Delete\": \"削除\",\r\n    \"Development model\": \"開発モード\",\r\n    \"Quick operation\": \"クイック操作\",\r\n    \"Under Attack Mode\": \"Under Attackモード\",\r\n    \"Temporarily bypass our cache. View changes made to your source server in real time.\": \"私たちのキャッシュを避けてください。ソースサーバの変更をリアルタイムで確認します。\",\r\n    \"Close (Enterprise)\": \"クローズ(Enterprise)\",\r\n    \"Basic (essentially off)\": \"基本（本質的には関係）\",\r\n    \"low\": \"低い\",\r\n    \"medium\": \"にある\",\r\n    \"high\": \"高さ\",\r\n    \"under_attack\": \"無敵\",\r\n    \"Display JavaScript challenges when visitors visit your site.\": \"訪問者があなたのサイトに訪問する時、JavaScriptの質問を表示します。\",\r\n    \"URL/description\": \"URL/説明\",\r\n    \"Failed to get page rules\": \"ページルールの取得に失敗しました。\",\r\n    \"Page rules\": \"ページのルール\",\r\n    \"<div>Page rules are used to control which Cloudflare settings are triggered for a given URL. Only one page rule is triggered for each URL, so if you sort the page rules in order of priority, this is very useful. Please set the URL mode as specific as possible.<br />You have {number} page rules left.</div>\": \"ページルールは、所定のURLに対してどのCloudflare設定をトリガするかを制御するために使用されます。各URLについてはページルールが1つしか触発されませんので、優先順位順にページルールを並べ替えるととても役立ちます。URLモードをできるだけ具体的に設定してください。<br/>ページルールを残しています。\",\r\n    \"Email address obfuscation technique\": \"メールアドレスの紛らわしい技術\",\r\n    \"Display an obfuscated email address on your website to prevent automated programs and spammers from obtaining it, while for human visitors, no visible changes will be made to the address.\": \"あなたのサイトには、マシンの自動プログラムや迷惑メールの作成者がこのアドレスを取得するのを防ぐために、ぼかし処理された電子メールアドレスが表示されますが、人間の訪問者に対しては、アドレスは表示されません。\",\r\n    \"Server side exclusion\": \"サーバから削除\",\r\n    \"Automatically hide specific content to prevent visitors with a bad reputation from viewing\": \"特定の内容を自動的に隠して、評判の悪い訪問者の確認を防ぐ。\",\r\n    \"Hotlink protection\": \"Hotlink保護\",\r\n    \"Prevent offsite links pointing to your images.\": \"サイト外のリンクがあなたの画像を指すことを防止します。\",\r\n    \"Always use HTTPS\": \"常にHTTPSを使う\",\r\n    \"Redirect all requests using the \\\"http\\\" scheme to \\\"https\\\". This will apply to all http requests in the area.\": \"すべての使用スキーム「http」の要求を「https」にリダイレクトする。これはこの領域のすべてのhttp要求に適用される。\",\r\n    \"Random encryption\": \"ランダム暗号化\",\r\n    \"Random encryption allows browsers to know that your site is provided through an encrypted connection, allowing them to benefit from the performance improvements of HTTP/2. The browser will continue to display \\\"http\\\" in the address bar instead of \\\"https\\\".\": \"ランダム暗号化は、あなたのサイトが暗号化された接続によって提供されていることをブラウザに知らせ、HTTP/2の性能向上から利益を得ることができます。ブラウザは引き続きアドレスバーに「http」ではなく「https」を表示します。\",\r\n    \"Automatic HTTPS rewrite\": \"自動HTTPS書き換え\",\r\n    \"Automatic HTTPS rewriting helps correct mixed content by changing \\\"http\\\" to \\\"https\\\" for all resources or links on websites that can be served by HTTPS.\": \"自動HTTPS書き換えは、HTTPSを利用してサービスを提供できるサイト上のすべてのリソースまたはリンクの「http」を「https」に変更することで、ミックスコンテンツの修正を助ける。\",\r\n    \"Your SSL/TLS encryption mode is {mode}\": \"あなたのSSL/TLS暗号化モードは{mode}です。\",\r\n    \"No encryption applied\": \"暗号化が適用されていません\",\r\n    \"Close (unsafe)\": \"閉じる(安全でない)\",\r\n    \"Flexible\": \"機敏である\",\r\n    \"Encrypt the traffic between the browser and Cloudflare\": \"ブラウザとCloudflareの流量を暗号化します。\",\r\n    \"End-to-end encryption, using self-signed certificate on the server\": \"エンド暗号化を行い、サーバ上の自署名証明書を使用します。\",\r\n    \"Full\": \"まったく\",\r\n    \"End-to-end encryption, but a trusted CA certificate or Cloudflare Origin CA certificate is required on the server\": \"エンド暗号化が必要ですが、サーバー上で信頼されているCA証明書またはCloudflare Origin CA証明書が必要です。\",\r\n    \"Complete (strict)\": \"まったく\",\r\n    \"This setting was last changed\": \"この設定の最後の変更時間は\",\r\n    \"Minimum TLS version\": \"最低TLSバージョン\",\r\n    \"Only allow HTTPS connections from visitors who support the selected TLS protocol version or higher.\": \"選択されたTLSプロトコルのバージョンまたはより高いバージョンをサポートする訪問者からのHTTPS接続のみが許可されます。\",\r\n    \"Click to switch\": \"クリックで切り替え\",\r\n    \"Turn off HTTP Strict Transport Security (HSTS)\": \"HTTPをオフにして、厳格な転送安全（HSTS）\",\r\n    \"Enable HTTP Strict Transport Security (HSTS)\": \"HTTPの厳密な伝送安全（HSTS）を有効にします。\",\r\n    \"Enforce web security policies on your website.\": \"あなたのウェブサイトに強制的にWebセキュリティポリシーを実行します。\",\r\n    \"Console\": \"コンソール\",\r\n    \"Domain management\": \"ドメイン管理\",\r\n    \"Domain list\": \"ドメイン名のリスト\",\r\n    \"Add domain\": \"ドメイン名を追加\",\r\n    \"Visit Author\": \"作者のブログにアクセス\",\r\n    \"Visit Cloudflare\": \"Cloudflareにアクセス\",\r\n    \"Sign out\": \"ログアウト\",\r\n    \"Click close\": \"クリックして閉じる\",\r\n    \"Click to open\": \"クリックして開く\",\r\n    \"No right to operate\": \"操作権がない\"\r\n}\r\nexport default ja_JP","const ko_KR = {\r\n    \"Remember me\": \"비밀 번 호 를 기억 하 다.\",\r\n    \"Log in\": \"등록 하 다.\",\r\n    \"Login\": \"등록 하 다.\",\r\n    \"Submitting\": \"제출 중...\",\r\n    \"Login successful\": \"로그 인 성공!\",\r\n    \"Login failed\": \"로그 인 실패!\",\r\n    \"Please input your Username!\": \"당신 의 아 이 디 를 입력 하 세 요!\",\r\n    \"Please input your Password!\": \"비밀 번 호 를 입력 하 세 요!\",\r\n    \"Overview\": \"개관 하 다.\",\r\n    \"SSL-TLS\": \"SSL - TLS\",\r\n    \"Firewall\": \"방화벽.\",\r\n    \"Page Rules\": \"페이지 규칙\",\r\n    \"Network\": \"인터넷\",\r\n    \"Cache\": \"캐 시 메모리\",\r\n    \"Scrape Shield\": \"내용 보호\",\r\n    \"Switch successfully\": \"전환 성공!\",\r\n    \"Switching failed\": \"전환 실패: {msg}\",\r\n    \"Add domain name successfully\": \"도 메 인 이름 추가 성공\",\r\n    \"Failed to add domain\": \"도 메 인 이름 추가 실패: {msg}\",\r\n    \"Please input your Zone Name\": \"도 메 인 이름 을 입력 하 세 요!\",\r\n    \"Zone Name\": \"도 메 인 네 임\",\r\n    \"Submit\": \"제출 하 다.\",\r\n    \"Zone\": \"도 메 인 네 임\",\r\n    \"Status\": \"상태.\",\r\n    \"Operation\": \"조작 하 다.\",\r\n    \"Record Type\": \"기록 형식\",\r\n    \"Host Name\": \"기록 명\",\r\n    \"Content\": \"기록 값\",\r\n    \"TTL\": \"TTL\",\r\n    \"Add a Dnsrecord\": \"기록 추가\",\r\n    \"Failed to load dns record\": \"dns 기록 불 러 오기 실패!{msg}\",\r\n    \"Added record successfully\": \"기록 추가 성공!\",\r\n    \"Update record successfully\": \"기록 갱신 성공\",\r\n    \"Record Name\": \"기록 이름\",\r\n    \"Record Content\": \"내용 을 기록 하 다\",\r\n    \"CDN\": \"CDN\",\r\n    \"Please input your Record Name\": \"당신 의 기록 명칭 을 입력 하 세 요\",\r\n    \"Please input your Record Type\": \"당신 의 기록 유형 을 입력 하 세 요\",\r\n    \"Please input your Record Content\": \"당신 의 기록 내용 을 입력 하 세 요\",\r\n    \"Please input your TTL\": \"TTL 을 입력 하 세 요\",\r\n    \"Please input your CDN\": \"CDN 을 입력 하 세 요\",\r\n    \"Manage\": \"관리 하 다.\",\r\n    \"Update completed\": \"업데이트 성공!\",\r\n    \"Successfully deleted\": \"삭제 성공!\",\r\n    \"You sure you want to delete it?\": \"삭제 하 시 겠 습 니까?\",\r\n    \"Yes\": \"확정 하 다.\",\r\n    \"No\": \"아니.\",\r\n    \"Cancel\": \"취소 하 다.\",\r\n    \"Enable HSTS (Strict-Transport-Security)\": \"HSTS 사용 하기 (Stript - Transport - Security)\",\r\n    \"Provide HSTS headers for all HTTPS requests\": \"모든 HTTPS 에 HSTS 레이 블 을 요청 합 니 다.\",\r\n    \"Maximum age header (max-age)\": \"최 장 기간 헤더 (max - age)\",\r\n    \"Specify the duration of HSTS header caching in the browser\": \"브 라 우 저 에 HSTS 레이 블 릿 이 캐 시 되 는 지속 시간 을 지정 합 니 다.\",\r\n    \"0 (disabled)\": \"0 (사용 금지)\",\r\n    \"Apply HSTS policy to subdomains (includeSubDomains)\": \"HSTS 정책 을 하위 필드 에 적용 (includesubDomains)\",\r\n    \"Every domain under this domain will inherit the same HSTS header\": \"이 도 메 인 아래 각 도 메 인 마다 같은 HSTS 레이 블 을 계승 합 니 다.\",\r\n    \"Warning\": \"경고:\",\r\n    \"If any of your subdomains do not support HTTPS, these subdomains will become inaccessible.\": \"HTTPS 를 지원 하지 않 는 부분 이 있다 면, 이 부분 들 은 접근 할 수 없 게 됩 니 다.\",\r\n    \"Preloading\": \"프 리 로드\",\r\n    \"Allow browser to automatically preload HSTS configuration\": \"브 라 우 저 에서 H STS 설정 을 자동 으로 프 리 로 딩 할 수 있 도록 합 니 다.\",\r\n    \"Preloading may make websites that do not support HTTPS completely inaccessible.\": \"사전 로 딩 은 HTTPS 를 지원 하지 않 는 웹 사 이 트 를 전혀 방문 할 수 없 게 할 수도 있다.\",\r\n    \"Sniffless header\": \"냄새 맡 는 곳 이 없다.\",\r\n    \"Send the \\\"X-Content-Type-Options: nosniff\\\" header to prevent Internet Explorer and Google Chrome from sniffing around in the declared Content-Type via MIME.\": \"인터넷 Explorer 와 구 글 Chrome 브 라 우 저 는 MIME 를 통 해 성명 한 Content - Type 에서 냄새 를 맡 지 않도록 'X - Content - Type' 헤더 를 보 냅 니 다.\",\r\n    \"HTTP Strict Transport Security (HSTS)\": \"HTTP 엄격 한 전송 안전 (HSTS)\",\r\n    \"You will need to specify the full path of the file.\": \"파일 의 전체 경 로 를 지정 해 야 합 니 다.\",\r\n    \"<p>HTTP Strict Transport Security (HSTS) can greatly improve the security of a website. However, when enabling HSTS, keep the following important considerations in mind:</p><strong>HTTPS (SSL) must be enabled to use HSTS. </strong><ul><li> If you turn on HSTS, but your website does not support HTTPS, the browser will not accept HSTS settings. </li><li>If you enable HSTS but leave Cloudflare, you need to continue to support HTTPS through a new service provider, otherwise, visitors will not be able to access your site until you support HTTPS. </li><li>If Cloudflare’s HTTPS is turned off after HSTS is enabled and there is no valid SSL certificate on the origin server, visitors will not be able to access your website. </li><li>Note: Cloudflare’s HTTP can be disabled in several ways: masking subdomains in DNS records, \\\"suspending\\\" Cloudflare services, or using a custom SSL certificate that is incorrectly configured on your Cloudflare dashboard (e.g. , Invalid SSL certificate, expired certificate, or mismatched hostname). </li></ul><p>If you need to disable HTTPS on your domain, you must first disable HSTS in your Cloudflare dashboard and wait until the maximum period has passed (to ensure that every browser is aware of this change) Before you can disable HTTPS. The average maximum period is six months (you can set the maximum period in the next step). If you delete HTTPS before disabling HSTS, visitors will not be able to access your site until the maximum period is reached or you support HTTPS again. Since disabling HTTPS on HSTS-enabled websites may cause these consequences, we strongly recommend that you deploy the HTTPS service before enabling this feature</p>\"\r\n        : \"<p> HSTS (HTTP Strict Transport Security)는 웹 사이트의 보안을 크게 향상시킬 수 있습니다. 그러나 HSTS를 활성화 할 때는 다음과 같은 중요한 사항을 고려해야합니다.</p><strong> HSTS를 사용하려면 HTTP (SSL)를 활성화해야합니다.</strong><ul><li> HSTS를 켰지 만 웹 사이트에서 HTTPS를 지원하지 않으면 브라우저가 HSTS 설정을 허용하지 않습니다.</li><li> HSTS를 활성화했지만 Cloudflare를 떠나면 새로운 서비스 제공 업체를 통해 HTTPS를 계속 지원해야합니다. 그렇지 않으면 방문자는 HTTPS를 지원할 때까지 사이트에 액세스        할 수 없습니다.</li><li> HSTS가 활성화 된 후 Cloudflare의 HTTPS가 꺼져 있고 오리진 서버에 유효한 SSL 인증서가없는 경우 방문자가 웹 사이트에 액세스 할 수 없습니다.</li><li> 참고 : Cloudflare의 HTTP는 DNS 레코드에서 하위 도메인을 마스킹하거나, Cloudflare 서비스를 \\\"중지\\\"하거나, Cloudflare 대시 보드에서 잘못 구성된 사용자        정의 SSL 인증서 (예 : 잘못된 SSL 인증서)를 사용하여 비활성화 할 수 있습니다. , 만료 된 인증서 또는 일치하지 않는 호스트 이름).</li></ul><p> 도메인에서 HTTPS를 비활성화해야하는 경우 먼저 Cloudflare 대시 보드에서 HSTS를 비활성화하고 최대 기간이 지날 때까지 기다려야합니다 (모든 브라우저가이 변경 사항을    인식 할 수 있도록) HTTPS를 비활성화하기 전에. 평균 최대 기간은 6 개월입니다 (다음 단계에서 최대 기간을 설정할 수 있음). HSTS를 비활성화하기 전에 HTTPS를    삭제하면 방문자는 최대 기간에 도달하거나 HTTPS를 다시 지원할 때까지 사이트에 액세스 할 수 없습니다. HSTS 지원 웹 사이트에서 HTTPS를 비활성화하면 이러한 결과가    발생할 수 있으므로이 기능을 활성화하기 전에 HTTPS 서비스를 배포하는 것이 좋습니다</p>\",\r\n    \"If not configured correctly, HTTP Strict Transport Security (HSTS) may make your website inaccessible for a long time.\": \"설정 이 잘못 되면 HTTP 의 엄격 한 전송 안전 (HSTS) 은 귀하 의 웹 사 이 트 를 장시간 방문 할 수 없습니다.\",\r\n    \"URL must not be empty\": \"URL 비 어 있 으 면 안 됩 니 다.\",\r\n    \"If your server is shut down, Cloudflare will use our cache to serve the static pages of your website.\": \"서버 가 종료 되면 클 라 우 드 플 라 어 는 웹 사이트 의 정적 페이지 에 저희 캐 시 를 사용 하여 서 비 스 를 제공 합 니 다.\",\r\n    \"Temporarily bypass our cache to see the changes made to your origin server in real time. <br />Note: Enabling this feature can significantly speed up the loading speed of the origin server. The development mode does not clear the cache, so you need to clear the files after the development mode expires.\": \"저희 캐 시 를 잠시 돌 면 원 서버 변경 사항 을 실시 간 으로 확인 할 수 있 습 니 다.< br / > 주의: 이 기능 을 사용 하면 소스 서버 의 로드 속 도 를 현저히 가속 화 할 수 있 습 니 다.개발 모델 은 캐 시 를 지우 지 않 기 때문에 개발 모델 이 만 료 된 후에 파일 을 삭제 해 야 합 니 다.\",\r\n    \"Custom clear\": \"사용자 정의 클 리 어\",\r\n    \"Clear cache\": \"캐 시 삭제\",\r\n    \"Clear all caches, use with caution\": \"모든 캐 시 정리, 사용 조심\",\r\n    \"Are you sure you want to clear all caches\": \"모든 캐 시 를 삭제 하 시 겠 습 니까?\",\r\n    \"Clean up all\": \"전 부 를 청산 하 다\",\r\n    \"Currently, wildcards are not supported when clearing a single URL. You can clear up to 30 URLs at once. Separate URLs one per line.\": \"현재 하나의 URL 클 리 어 를 진행 할 때 마스크 를 지원 하지 않 습 니 다.한 번 에 최대 30 개의 URL 을 지 울 수 있 습 니 다.줄 마다 URL 을 구분 합 니 다.\",\r\n    \"Example\": \"예시:\",\r\n    \"Clear the cache files to force Cloudflare to extract the latest versions of these files from your web server. You can erase files selectively, or you can erase all files at the same time. <br /><strong>Note:</strong> Clearing the cache may temporarily degrade the performance of your website and increase the time it takes to load files on your origin server.\": \"< div > 캐 시 파일 을 삭제 하여 웹 서버 에서 이 파일 들 의 최신 버 전 을 강제로 클 라 우 드 플 라 워 로 추출 합 니 다.선택 적 으로 파일 을 지 울 수도 있 고 모든 파일 을 지 울 수도 있 습 니 다.< br / > < strong > 주의: < / strong > 캐 시 를 삭제 하면 사이트 의 성능 을 일시 적 으로 떨 어 뜨 릴 수 있 으 며, 원본 서버 에 파일 을 추가 하 는 시간 을 연장 할 수 있 습 니 다.< / div >\",\r\n    \"Development Mode™\": \"개발 모델알고리즘.\",\r\n    \"Cache level\": \"캐 시 수준\",\r\n    \"No query string\": \"검색 문자열 이 없습니다\",\r\n    \"Ignore query string\": \"검색 문자열 무시 하기\",\r\n    \"Standard\": \"표준.\",\r\n    \"Determine the amount of static content you want Cloudflare to cache your website. Increasing the cache can shorten the page load time.\": \"Cloudflare 에서 귀하 의 웹 사 이 트 를 캐 시 하 기 를 원 하 는 정적 내 용량 을 확인 합 니 다.캐 시 를 추가 하면 페이지 로 딩 시간 을 단축 할 수 있다.\",\r\n    \"Browser cache TTL\": \"브 라 우 저 캐 시 TTL\",\r\n    \"Follow existing headers\": \"기 존의 표준 을 따르다.\",\r\n    \"Determine how long Cloudflare instructs visitors’ browsers to cache files. During this period, the browser will load files from its local cache, thereby improving page loading speed.\": \"Cloudflare 가 방문 자 를 가리 키 는 브 라 우 저 캐 시 파일 의 시간 을 확정 합 니 다.이 기간 에 브 라 우 저 는 로 컬 캐 시 에서 파일 을 불 러 와 페이지 로 딩 속 도 를 높 인 다.\",\r\n    \"Speed up your website with HTTP/2\": \"HTTP / 2 를 사용 하여 웹 사 이 트 를 가속 화 합 니 다.\",\r\n    \"Use QUIC to accelerate HTTP requests. QUIC provides higher encryption and performance than TCP and TLS.\": \"QUIC 가속 HTTP 요청 을 사용 하고, QUIC 는 TCP 와 TLS 보다 더 높 은 암호 화 및 성능 을 제공 합 니 다.\",\r\n    \"Improve the performance of clients that have previously connected to your website.\": \"이전에 귀하 사이트 에 연 결 된 클 라 이언 트 의 성능 을 향상 시 킵 니 다.\",\r\n    \"Allow a WebSocket connection with your origin server. <br />Concurrent connection criteria applicable to your plan: low\": \"< div > 원본 서버 와 WebSocket 연결 을 허용 합 니 다.< br / > 당신 이 사용 하 는 계획 의 동시 접속 준칙 에 적용: low < / div >\",\r\n    \"Onion routing allows traffic from legitimate users on the Tor network to be routed through Cloudflare's onion service instead of exit nodes, thereby improving user privacy and achieving more detailed protection.\": \"양파 길 은 클 라 우 드 플 라 워 를 통한 양파 서 비 스 를 허용 합 니 다. 노드 를 탈퇴 하 는 것 이 아니 라 Tor 네트워크 에서 합 법 적 인 사용자 의 데 이 터 를 통 해 사용자 의 프라이버시 를 개선 하고 보다 세분 화 된 보 호 를 실현 합 니 다.\",\r\n    \"Contains the country code of the visitor’s location and all requests sent to your website. <br /><strong>Note:</strong> You must retrieve the IP geolocation information from the CF-IPCountry HTTP header.\": \"방문 자의 위 치 를 포함 하 는 국가 / 지역 코드 와 귀하 의 사이트 에 전송 하 는 모든 요청.< br / > < strong > 주의: < / strong > 귀 하 는 CF - IPCountry HTTP 레이 블 에서 IP 지리 적 위치 정 보 를 검색 해 야 합 니 다.\",\r\n    \"HTTP/3 (using QUIC)\": \"HTTP / 3 (QUIC 사용)\",\r\n    \"0-RTT connection recovery\": \"0 - RTT 연결 복원\",\r\n    \"Onion routing\": \"양파 경로\",\r\n    \"IP geolocation\": \"IP 지리 적 위치\",\r\n    \"Manage DNS\": \"DNS 기록 관리\",\r\n    'Copy cname record': 'cname 레코드 복사',\r\n    \"Copy successfully\": \"성공적으로 복사\",\r\n    \"Delete\": \"삭제 하 다.\",\r\n    \"Development model\": \"개발 모델\",\r\n    \"Quick operation\": \"빠 른 조작\",\r\n    \"Under Attack Mode\": \"Under Attack 모드\",\r\n    \"Temporarily bypass our cache. View changes made to your source server in real time.\": \"잠시 저희 캐 시 를 돌 립 니 다.원 서버 변경 사항 을 실시 간 으로 확인 합 니 다.\",\r\n    \"Close (Enterprise)\": \"닫 기 (Enterprise)\",\r\n    \"Basic (essentially off)\": \"기본 (본질 적 으로 는 관문)\",\r\n    \"low\": \"낮다.\",\r\n    \"medium\": \"명중 하 다.\",\r\n    \"high\": \"높다.\",\r\n    \"under_attack\": \"무적\",\r\n    \"Display JavaScript challenges when visitors visit your site.\": \"방문 자가 당신 의 역 을 방문 할 때 자바 스 크 립 트 질의 문 의 를 표시 합 니 다.\",\r\n    \"URL/description\": \"URL / 설명\",\r\n    \"Failed to get page rules\": \"페이지 규칙 가 져 오기 실패\",\r\n    \"Page rules\": \"페이지 규칙\",\r\n    \"<div>Page rules are used to control which Cloudflare settings are triggered for a given URL. Only one page rule is triggered for each URL, so if you sort the page rules in order of priority, this is very useful. Please set the URL mode as specific as possible.<br />You have {number} page rules left.</div>\": \"페이지 규칙 은 주어진 URL 을 위 한 어떤 Cloudflare 설정 을 실행 하 는 지 제어 하 는 데 사 용 됩 니 다.각 URL 마다 하나의 페이지 규칙 만 적용 하기 때문에 우선 순위 순 으로 페이지 규칙 을 정렬 하면 매우 유용 합 니 다. 가능 한 한 URL 모드 를 구체 적 으로 설정 하 십시오.< br / > 남 은 {number} 페이지 규칙 입 니 다.\",\r\n    \"Email address obfuscation technique\": \"전자 메 일 주소 혼동 기술\",\r\n    \"Display an obfuscated email address on your website to prevent automated programs and spammers from obtaining it, while for human visitors, no visible changes will be made to the address.\": \"귀하 의 사이트 에 컴퓨터 자동 프로그램 과 스 팸 메 일 제조 자가 이 주 소 를 가 져 오 는 것 을 방지 하기 위해 모호 하 게 처 리 된 메 일 주 소 를 표시 하고, 인간 방문 자 에 대해 서 는 주소 변경 을 할 수 없습니다.\",\r\n    \"Server side exclusion\": \"서버 쪽 제거\",\r\n    \"Automatically hide specific content to prevent visitors with a bad reputation from viewing\": \"평판 이 좋 지 않 은 방문 자 들 이 볼 수 있 도록 특정 내용 을 자동 으로 숨 긴 다.\",\r\n    \"Hotlink protection\": \"Hotlink 보호\",\r\n    \"Prevent offsite links pointing to your images.\": \"외부 링크 가 그림 을 가리 키 는 것 을 방지 합 니 다.\",\r\n    \"Always use HTTPS\": \"항상 HTTPS 를 사용 합 니 다.\",\r\n    \"Redirect all requests using the \\\"http\\\" scheme to \\\"https\\\". This will apply to all http requests in the area.\": \"모든 사용 방안 \\\"http\\\" 의 요청 을 \\\"https\\\" 로 변경 합 니 다.이 지역 의 모든 http 요청 에 사 용 됩 니 다.\",\r\n    \"Random encryption\": \"임 의 암호 화\",\r\n    \"Random encryption allows browsers to know that your site is provided through an encrypted connection, allowing them to benefit from the performance improvements of HTTP/2. The browser will continue to display \\\"http\\\" in the address bar instead of \\\"https\\\".\": \"랜 덤 암호 화 는 웹 사이트 가 암호 화 된 연결 을 통 해 제공 되 는 것 을 알 게 하고 HTTP / 2 의 성능 개선 에 도움 을 줄 수 있 습 니 다.브 라 우 저 는 \\\"https\\\" 대신 주소 표시 줄 에 \\\"http\\\" 을 계속 표시 합 니 다.\",\r\n    \"Automatic HTTPS rewrite\": \"자동 HTTPS 재 작성\",\r\n    \"Automatic HTTPS rewriting helps correct mixed content by changing \\\"http\\\" to \\\"https\\\" for all resources or links on websites that can be served by HTTPS.\": \"자동 HTTPS 재 작성 은 HTTPS 로 서 비 스 를 제공 할 수 있 는 웹 사이트 의 모든 자원 이나 링크 의 \\\"http\\\" 을 \\\"https\\\" 로 변경 하여 혼합 내용 을 수정 하 는 데 도움 을 줍 니 다.\",\r\n    \"Your SSL/TLS encryption mode is {mode}\": \"SSL / TLS 암호 화 모드 {mode}\",\r\n    \"No encryption applied\": \"암호 화 되 지 않 음\",\r\n    \"Close (unsafe)\": \"닫 기 (안전 하지 않 음)\",\r\n    \"Flexible\": \"민첩 하 다.\",\r\n    \"Encrypt the traffic between the browser and Cloudflare\": \"암호 화 브 라 우 저 와 클 라 우 드 플 라 워 사이 의 데이터\",\r\n    \"End-to-end encryption, using self-signed certificate on the server\": \"서버 에 있 는 자기 서명 인증 서 를 사용 하여 엔 드 로 암호 화 합 니 다.\",\r\n    \"Full\": \"완전 하 다.\",\r\n    \"End-to-end encryption, but a trusted CA certificate or Cloudflare Origin CA certificate is required on the server\": \"엔 드 암호 화 되 어 있 지만 서버 에 신뢰 받 는 CA 인증서 나 Cloudflare Origin CA 인증서 가 있어 야 합 니 다.\",\r\n    \"Complete (strict)\": \"완전 (엄격)\",\r\n    \"This setting was last changed\": \"이 설정 은 마지막 변경 시간 은\",\r\n    \"Minimum TLS version\": \"최저 TLS 버 전\",\r\n    \"Only allow HTTPS connections from visitors who support the selected TLS protocol version or higher.\": \"선택 한 TLS 프로 토 콜 버 전이 나 더 높 은 버 전 을 지원 하 는 방문 자 들 만 의 HTTPS 연결 을 허용 합 니 다.\",\r\n    \"Click to switch\": \"클릭 하여 전환\",\r\n    \"Turn off HTTP Strict Transport Security (HSTS)\": \"HTTP 를 닫 고 엄 격 히 전송 하기 (HSTS)\",\r\n    \"Enable HTTP Strict Transport Security (HSTS)\": \"HTTP 를 사용 하여 보안 유지 하기 (HSTS)\",\r\n    \"Enforce web security policies on your website.\": \"웹 사이트 에 웹 보안 정책 을 강제로 실행 합 니 다.\",\r\n    \"Console\": \"콘 솔\",\r\n    \"Domain management\": \"도 메 인 네 임 관리\",\r\n    \"Domain list\": \"도 메 인 네 임 리스트\",\r\n    \"Add domain\": \"도 메 인 이름 추가\",\r\n    \"Visit Author\": \"작가 블 로 그 를 방문 하 다.\",\r\n    \"Visit Cloudflare\": \"Cloudflare 방문\",\r\n    \"Sign out\": \"로그아웃 로그 인\",\r\n    \"Click close\": \"클릭 하여 닫 기\",\r\n    \"Click to open\": \"클릭 하여 오픈\",\r\n    \"No right to operate\": \"조작 할 권리 가 없다.\"\r\n}\r\nexport default ko_KR","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { ConfigProvider } from 'antd'\r\nimport { IntlProvider } from 'react-intl';\r\n\r\nimport antd_zh_CN from 'antd/es/locale/zh_CN';\r\nimport antd_zh_HK from 'antd/es/locale/zh_HK';\r\nimport antd_zh_TW from 'antd/es/locale/zh_TW';\r\nimport antd_en_US from 'antd/es/locale/en_US';\r\nimport antd_ja_JP from 'antd/es/locale/ja_JP';\r\nimport antd_ko_KR from 'antd/es/locale/ko_KR';\r\n\r\nimport zh_CN from '@/lang/zh_CN'\r\nimport zh_HK from '@/lang/zh_HK'\r\nimport zh_TW from '@/lang/zh_TW'\r\nimport en_US from '@/lang/en_US'\r\nimport ja_JP from '@/lang/ja_JP'\r\nimport ko_KR from '@/lang/ko_KR'\r\n\r\n\r\nexport const langs = {\r\n    'zh-CN': {\r\n        'local': zh_CN,\r\n        'antd': antd_zh_CN,\r\n    },\r\n    'zh-HK': {\r\n        'local': zh_HK,\r\n        'antd': antd_zh_HK,\r\n    },\r\n    'zh-TW': {\r\n        'local': zh_TW,\r\n        'antd': antd_zh_TW,\r\n    },\r\n    'en-US': {\r\n        'local': en_US,\r\n        'antd': antd_en_US,\r\n    },\r\n    'ja-JP': {\r\n        'local': ja_JP,\r\n        'antd': antd_ja_JP,\r\n    },\r\n    'ko-KR': {\r\n        'local': ko_KR,\r\n        'antd': antd_ko_KR,\r\n    },\r\n}\r\nexport const getCurrentLanguage = () => {\r\n    const currentLanguage = localStorage.getItem('language')\r\n    if (currentLanguage) {\r\n        return currentLanguage\r\n    }\r\n\r\n    return navigator.language\r\n}\r\n\r\nexport const setCurrentLanguage = (language) => {\r\n    localStorage.setItem('language', language)\r\n}\r\n\r\nexport const chooseLocale = (currentLanguage = getCurrentLanguage()) => {\r\n    for (let k in langs) {\r\n        if (currentLanguage === k) {\r\n            return langs[k]['local']\r\n        }\r\n    }\r\n    return en_US;\r\n}\r\n\r\nexport const chooseAntdLocale = (currentLanguage = getCurrentLanguage()) => {\r\n    for (let k in langs) {\r\n        if (currentLanguage === k) {\r\n            return langs[k]['antd']\r\n        }\r\n    }\r\n    return antd_en_US;\r\n}\r\n\r\nexport const LangContext = React.createContext();\r\n\r\nconst Lang = (props) => {\r\n    const [language, setLanguage] = useState(getCurrentLanguage())\r\n    // 本地语言包\r\n    const [locale, setLocale] = useState(chooseLocale(language))\r\n    // antd 语言包\r\n    const [antdLocale, setAntdLocale] = useState(chooseAntdLocale(language))\r\n\r\n    useEffect(() => {\r\n        setCurrentLanguage(language)\r\n        setLocale(chooseLocale(language))\r\n        setAntdLocale(chooseAntdLocale(language))\r\n    }, [language])\r\n\r\n    return (\r\n        <LangContext.Provider value={{\r\n            currentLanguage: language, setCurrentLanguage: setLanguage\r\n        }}>\r\n            <ConfigProvider locale={antdLocale}>\r\n                <IntlProvider\r\n                    locale={language}\r\n                    messages={locale}\r\n                >\r\n                    {props.children}\r\n                </IntlProvider>\r\n            </ConfigProvider>\r\n        </LangContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Lang\r\n","const zh_CN = {\r\n    'Remember me': '记住密码',\r\n    'Log in': '登录',\r\n    'Login': '登录',\r\n    'Submitting': '正在提交中...',\r\n    'Login successful': '登录成功！',\r\n    'Login failed': '登录失败！',\r\n    'Please input your Username!': '请输入您的用户名！',\r\n    'Please input your Password!': '请输入您的密码！',\r\n    // control\r\n    'Overview': '概览',\r\n    'SSL-TLS': 'SSL-TLS',\r\n    'Firewall': '防火墙',\r\n    'Page Rules': '页面规则',\r\n    'Network': '网络',\r\n    'Cache': '缓存',\r\n    'Scrape Shield': '内容保护',\r\n    'Switch successfully': '切换成功！',\r\n    'Switching failed': '切换失败：{msg}',\r\n    'Add domain name successfully': '添加域名成功',\r\n    'Failed to add domain': '添加域名失败：{msg}',\r\n    'Please input your Zone Name': '请输入您的域名！',\r\n    'Zone Name': '域名',\r\n    'Submit': '提交',\r\n    'Zone': '域名',\r\n    'Status': '状态',\r\n    'Operation': '操作',\r\n\r\n    'Record Type': '记录类型',\r\n    'Host Name': '记录名',\r\n    'Content': '记录值',\r\n    'TTL': 'TTL',\r\n    'Add a Dnsrecord': '添加记录',\r\n\r\n    'Failed to load dns record': '加载dns记录失败！{msg}',\r\n    'Added record successfully': '添加记录成功！',\r\n    'Update record successfully': '更新记录成功',\r\n\r\n    'Record Name': '记录名称',\r\n    'Record Content': '记录内容',\r\n    'CDN': 'CDN',\r\n    'Please input your Record Name': '请输入您的记录名称',\r\n    'Please input your Record Type': '请输入您的记录类型',\r\n    'Please input your Record Content': '请输入您的记录内容',\r\n    'Please input your TTL': '请输入您的TTL',\r\n    'Please input your CDN': '请输入您的CDN',\r\n\r\n    'Manage': '管理',\r\n    'Update completed': '更新成功！',\r\n    'Successfully deleted': '删除成功！',\r\n\r\n    'You sure you want to delete it?': '确定要删除吗？',\r\n    'Yes': '确定',\r\n    'No': '不',\r\n    'Cancel': '取消',\r\n\r\n    'Enable HSTS (Strict-Transport-Security)': '启用 HSTS (Strict-Transport-Security)',\r\n    'Provide HSTS headers for all HTTPS requests': '为所有 HTTPS 请求提供 HSTS 标头',\r\n    'Maximum age header (max-age)': '最长期限标头 (max-age)',\r\n    'Specify the duration of HSTS header caching in the browser': '指定 HSTS 标头在浏览器中缓存的持续时间',\r\n    '0 (disabled)': '0（禁用）',\r\n    'Apply HSTS policy to subdomains (includeSubDomains)': '将 HSTS 策略应用于子域 (includeSubDomains)',\r\n    'Every domain under this domain will inherit the same HSTS header': '此域下的每个域将继承相同的 HSTS 标头',\r\n    'Warning': '警告：',\r\n    'If any of your subdomains do not support HTTPS, these subdomains will become inaccessible.': '如果您的任何子域不支持 HTTPS，这些子域将变为不可访问。',\r\n    'Preloading': '预加载',\r\n    'Allow browser to automatically preload HSTS configuration': '允许浏览器自动预加载 HSTS 配置',\r\n    'Preloading may make websites that do not support HTTPS completely inaccessible.': '预加载可能会使不支持 HTTPS 的网站完全不可访问。',\r\n    'Sniffless header': '无嗅探标头',\r\n    'Send the \"X-Content-Type-Options: nosniff\" header to prevent Internet Explorer and Google Chrome from sniffing around in the declared Content-Type via MIME.': '发送 “X-Content-Type-Options: nosniff” 标头，来防止 Internet Explorer 和 Google Chrome 浏览器通过 MIME 在声明的 Content-Type 中四处嗅探。',\r\n    'HTTP Strict Transport Security (HSTS)': 'HTTP 严格传输安全 (HSTS)',\r\n    'You will need to specify the full path of the file.': '您将需要指定文件的完整路径。',\r\n    '<p>HTTP Strict Transport Security (HSTS) can greatly improve the security of a website. However, when enabling HSTS, keep the following important considerations in mind:</p><strong>HTTPS (SSL) must be enabled to use HSTS. </strong><ul><li> If you turn on HSTS, but your website does not support HTTPS, the browser will not accept HSTS settings. </li><li>If you enable HSTS but leave Cloudflare, you need to continue to support HTTPS through a new service provider, otherwise, visitors will not be able to access your site until you support HTTPS. </li><li>If Cloudflare’s HTTPS is turned off after HSTS is enabled and there is no valid SSL certificate on the origin server, visitors will not be able to access your website. </li><li>Note: Cloudflare’s HTTP can be disabled in several ways: masking subdomains in DNS records, \"suspending\" Cloudflare services, or using a custom SSL certificate that is incorrectly configured on your Cloudflare dashboard (e.g. , Invalid SSL certificate, expired certificate, or mismatched hostname). </li></ul><p>If you need to disable HTTPS on your domain, you must first disable HSTS in your Cloudflare dashboard and wait until the maximum period has passed (to ensure that every browser is aware of this change) Before you can disable HTTPS. The average maximum period is six months (you can set the maximum period in the next step). If you delete HTTPS before disabling HSTS, visitors will not be able to access your site until the maximum period is reached or you support HTTPS again. Since disabling HTTPS on HSTS-enabled websites may cause these consequences, we strongly recommend that you deploy the HTTPS service before enabling this feature</p>'\r\n        : '<div><p>HTTP 严格传输安全 (HTTP Strict Transport Security, HSTS) 可以大幅提高网站的安全性。但是，启用 HSTS 时，请谨记以下重要注意事项：</p><strong>必须启用 HTTPS (SSL) 才能使用 HSTS。</strong><ul><li>如果您打开 HSTS，但您的网站不支持 HTTPS，浏览器将不接受 HSTS 设置。</li><li>如果您启用了 HSTS 但离开了 Cloudflare，您需要通过新的服务提供商继续支持 HTTPS，否则，在您支持 HTTPS 之前，访问者将无法访问您的站点。</li><li>如果在启用 HSTS 后关闭了 Cloudflare 的 HTTPS，并且源服务器上没有有效的 SSL 证书，访问者将无法访问您的网站。</li><li>注意：可以通过以下几种方法禁用 Cloudflare 的 HTTP：在 DNS 记录中遮蔽子域，“暂停” Cloudflare 服务，或通过您的 Cloudflare 仪表板配置错误的自定义 SSL 证书（例如，无效的 SSL 证书、过期证书或不匹配的主机名）。</li></ul><p>如果您需要在域上禁用 HTTPS，必须先在您的 Cloudflare 仪表板中禁用 HSTS，并等到最长期限过去（以确保每个浏览器都知道此更改），然后才能禁用 HTTPS。平均最长期限为六个月（您可以在下一步中设置最长期限）。如果您在禁用 HSTS 之前删除了 HTTPS，访问者将无法访问您的网站，直至达到最长期限或您再次支持 HTTPS。由于在启用 HSTS 的网站上禁用 HTTPS 可能会导致这些后果，因此我们强烈建议您先部署 HTTPS 服务再启用此功能</p></div>)',\r\n    'If not configured correctly, HTTP Strict Transport Security (HSTS) may make your website inaccessible for a long time.': '如果配置不正确，HTTP 严格传输安全 (HSTS) 可能会使您的网站长时间不可访问。',\r\n\r\n\r\n    // cache\r\n    'URL must not be empty': 'URL不得为空',\r\n    'If your server is shut down, Cloudflare will use our cache to serve the static pages of your website.': '如果您的服务器关闭，Cloudflare 将使用我们的缓存为您的网站的静态页面提供服务。',\r\n    'Temporarily bypass our cache to see the changes made to your origin server in real time. <br />Note: Enabling this feature can significantly speed up the loading speed of the origin server. The development mode does not clear the cache, so you need to clear the files after the development mode expires.': '暂时绕过我们的缓存可以实时查看对您的源服务器进行的更改。<br />注意：启用此功能可显著加快源服务器的加载速度。开发模式不会清除缓存，因此需要在开发模式过期后清除文件。',\r\n    'Custom clear': '自定义清除',\r\n    'Clear cache': '清除缓存',\r\n\r\n    'Clear all caches, use with caution': '清理全部缓存，慎用',\r\n    'Are you sure you want to clear all caches': '您确定要清理全部缓存吗？',\r\n    'Clean up all': '清理全部',\r\n    'Currently, wildcards are not supported when clearing a single URL. You can clear up to 30 URLs at once. Separate URLs one per line.': '目前进行单个 URL 清除时不支持通配符。您一次最多可以清除 30 个 URL。按照每行一个的方式分隔 URL。',\r\n    'Example': '示例：',\r\n    'Clear the cache files to force Cloudflare to extract the latest versions of these files from your web server. You can erase files selectively, or you can erase all files at the same time. <br /><strong>Note:</strong> Clearing the cache may temporarily degrade the performance of your website and increase the time it takes to load files on your origin server.'\r\n        : '<div>清除缓存文件以强制 Cloudflare 从您的 Web 服务器中提取这些文件的最新版本。您可以选择性地清除文件，也可以同时清除所有文件。<br /><strong>注意：</strong>清除缓存可能会使您的网站性能暂时降级，并延长在您的源服务器上加载文件的时间。</div>',\r\n    'Development Mode™': '开发模式™',\r\n    'Cache level': '缓存级别',\r\n    'No query string': '没有查询字符串',\r\n    'Ignore query string': '忽略查询字符串',\r\n    'Standard': '标准',\r\n    'Determine the amount of static content you want Cloudflare to cache your website. Increasing the cache can shorten the page load time.': '确定您希望 Cloudflare 对您的网站进行缓存的静态内容量。增加缓存可以缩短页面加载时间。',\r\n    'Browser cache TTL': '浏览器缓存 TTL',\r\n    'Follow existing headers': '遵循现有标头',\r\n    'Determine how long Cloudflare instructs visitors’ browsers to cache files. During this period, the browser will load files from its local cache, thereby improving page loading speed.': '确定 Cloudflare 指示访问者的浏览器缓存文件的时长。在此期间，浏览器会从其本地缓存中加载文件，从而提高页面加载速度。',\r\n    // Netword\r\n    'Speed up your website with HTTP/2': '使用 HTTP/2 加速您的网站',\r\n    'Use QUIC to accelerate HTTP requests. QUIC provides higher encryption and performance than TCP and TLS.': '使用 QUIC 加速 HTTP 请求，QUIC 提供比 TCP 和 TLS 更高的加密和性能。',\r\n    'Improve the performance of clients that have previously connected to your website.': '提高之前已连接到您网站的客户端的性能。',\r\n    'Allow a WebSocket connection with your origin server. <br />Concurrent connection criteria applicable to your plan: low': '<div>允许与您的源服务器建立 WebSocket 连接。<br />适用于您所用计划的并发连接准则：low</div>',\r\n    \"Onion routing allows traffic from legitimate users on the Tor network to be routed through Cloudflare's onion service instead of exit nodes, thereby improving user privacy and achieving more detailed protection.\": '洋葱路由允许通过 Cloudflare 的洋葱服务而不是退出节点路由来自 Tor 网络上合法用户的流量，从而改善用户的隐私并实现更细化的保护。',\r\n    'Contains the country code of the visitor’s location and all requests sent to your website. <br /><strong>Note:</strong> You must retrieve the IP geolocation information from the CF-IPCountry HTTP header.': '包含访问者位置的国家/地区代码和所有发送到您网站的请求。<br /><strong>注意：</strong>您必须从 CF-IPCountry HTTP 标头减检索 IP 地理位置信息。',\r\n    'HTTP/3 (using QUIC)': 'HTTP/3（使用 QUIC）',\r\n    '0-RTT connection recovery': '0-RTT 连接恢复',\r\n    'Onion routing': '洋葱路由',\r\n    'IP geolocation': 'IP 地理位置',\r\n\r\n    // Operation\r\n    'Manage DNS': '管理DNS记录',\r\n    'Copy cname record': '拷贝cname记录',\r\n    \"Copy successfully\": \"拷贝成功\",\r\n    'Delete': '删除',\r\n\r\n    //Overview\r\n    'Development model': '开发模式',\r\n    'Quick operation': '快速操作',\r\n    'Under Attack Mode': 'Under Attack 模式',\r\n    'Temporarily bypass our cache. View changes made to your source server in real time.': '暂时绕过我们的缓存。实时查看对您的源服务器进行的更改。',\r\n    'Close (Enterprise)': '关闭（Enterprise）',\r\n    'Basic (essentially off)': '基本（本质上为关）',\r\n    'low': '低',\r\n    'medium': '中',\r\n    'high': '高',\r\n    'under_attack': '无敌',\r\n    'Display JavaScript challenges when visitors visit your site.': '在访问者访问您的站点时显示 JavaScript 质询。',\r\n\r\n    //PageRules\r\n    'URL/description': 'URL/说明',\r\n    'Failed to get page rules': '获取页面规则失败',\r\n    'Page rules': '页面规则',\r\n    '<div>Page rules are used to control which Cloudflare settings are triggered for a given URL. Only one page rule is triggered for each URL, so if you sort the page rules in order of priority, this is very useful. Please set the URL mode as specific as possible.<br />You have {number} page rules left.</div>'\r\n        : '页面规则用于控制针对给定的 URL 触发哪些 Cloudflare 设置。针对每个 URL 仅触发一个页面规则，因此，如果您按照优先级顺序对页面规则进行排序，则这非常有用，请尽可能将 URL 模式设置得具体些。<br />您剩下 {number} 个页面规则。',\r\n    // : '{number}',\r\n\r\n    //ScrapeShield\r\n    'Email address obfuscation technique': '电子邮件地址混淆技术',\r\n    'Display an obfuscated email address on your website to prevent automated programs and spammers from obtaining it, while for human visitors, no visible changes will be made to the address.': '在您的网站上显示经过模糊处理的电子邮件地址，以防止机自动程序和垃圾邮件制造者获取该地址，而对于人类访问者，则不会对地址进行任何可见更改。',\r\n    'Server side exclusion': '服务器端排除',\r\n    'Automatically hide specific content to prevent visitors with a bad reputation from viewing': '自动隐藏特定内容以防声誉不好的访问者查看',\r\n    'Hotlink protection': 'Hotlink 保护',\r\n    'Prevent offsite links pointing to your images.': '防止站外链接指向您的图像。',\r\n\r\n    //SslTls\r\n    'Always use HTTPS': '始终使用 HTTPS',\r\n    'Redirect all requests using the \"http\" scheme to \"https\". This will apply to all http requests in the area.': '将所有使用方案 “http” 的请求重定向到 “https”。这将应用于该区域的所有 http 请求。',\r\n    'Random encryption': '随机加密',\r\n    'Random encryption allows browsers to know that your site is provided through an encrypted connection, allowing them to benefit from the performance improvements of HTTP/2. The browser will continue to display \"http\" in the address bar instead of \"https\".': '随机加密可以让浏览器知道您的站点通过加密连接提供，从而让它们从 HTTP/2 的性能改进中受益。浏览器将继续在地址栏中显示 “http”，而不是 “https”。',\r\n    'Automatic HTTPS rewrite': '自动 HTTPS 重写',\r\n    'Automatic HTTPS rewriting helps correct mixed content by changing \"http\" to \"https\" for all resources or links on websites that can be served by HTTPS.': '自动 HTTPS 重写通过将可以使用 HTTPS 提供服务的网站上所有资源或链接的 “http” 更改为 “https” 来帮助修正混合内容。',\r\n    'Your SSL/TLS encryption mode is {mode}': '您的 SSL/TLS 加密模式为 {mode}',\r\n    'No encryption applied': '未应用加密',\r\n    'Close (unsafe)': '关闭（不安全）',\r\n    'Flexible': '灵活',\r\n    'Encrypt the traffic between the browser and Cloudflare': '加密浏览器与 Cloudflare 之间的流量',\r\n    'End-to-end encryption, using self-signed certificate on the server': '端到端加密，使用服务器上的自签名证书',\r\n    'Full': '完全',\r\n    'End-to-end encryption, but a trusted CA certificate or Cloudflare Origin CA certificate is required on the server': '端到端加密，但服务器上需要有受信任的 CA 证书或 Cloudflare Origin CA 证书',\r\n    'Complete (strict)': '完全（严格）',\r\n    'This setting was last changed': '此设置上次更改时间为',\r\n    'Minimum TLS version': '最低 TLS 版本',\r\n    'Only allow HTTPS connections from visitors who support the selected TLS protocol version or higher.': '仅允许来自支持所选 TLS 协议版本或更高版本的访问者的 HTTPS 连接。',\r\n    'Click to switch': '点击切换',\r\n    'Turn off HTTP Strict Transport Security (HSTS)': '关闭HTTP 严格传输安全 (HSTS)',\r\n    'Enable HTTP Strict Transport Security (HSTS)': '启用HTTP 严格传输安全 (HSTS)',\r\n    'Enforce web security policies on your website.': '对您的网站强制执行 Web 安全策略。',\r\n\r\n    // Frame\r\n    'Console': '控制台',\r\n    'Domain management': '域名管理',\r\n    'Domain list': '域名列表',\r\n    'Add domain': '添加域名',\r\n    'Visit Author': '访问作者博客',\r\n    'Visit Cloudflare': '访问 Cloudflare',\r\n    'Sign out': '退出登录',\r\n\r\n\r\n    'Click close': '点击关闭',\r\n    'Click to open': '点击开启',\r\n    'No right to operate': '无权操作',\r\n    // <FormattedMessage id='Manage'/>\r\n\r\n}\r\nexport default zh_CN","\r\nimport { createIntl } from 'react-intl'\r\n\r\nimport { chooseLocale, getCurrentLanguage } from '@/Lang'\r\n\r\nconst ImperativeFormatMessage = (id, values = {}) => {\r\n    const intl = createIntl({\r\n        locale: getCurrentLanguage(),\r\n        messages: chooseLocale()\r\n    })\r\n    return intl.formatMessage({ id, values })\r\n}\r\n\r\nexport default ImperativeFormatMessage","import React from 'react';\nimport { Form, Input, Button, Checkbox, Card, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport { loginApi } from '@service/auth'\nimport { setToken, getFormdata, setFormdata } from '@utils/auth';\nimport '@css/Login.scss';\nimport { setUsername } from '../utils/auth';\n\nimport FormattedMessage from '@components/FormattedMessage';\n\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\n\nconst Login = () => {\n    const history = useHistory();\n\n    const onFinish = values => {\n        message.loading({ content: ImperativeFormatMessage('Submitting'), key: 'loading', duration: 0 })\n        if (values.remember) {\n            setFormdata(values)\n        }\n        loginApi(values)\n            .then((res) => {\n                if (res.access_token !== undefined) {\n                    setToken(res.access_token)\n                    setUsername(values.username)\n                    message.success({ content: ImperativeFormatMessage('Login successful'), key: 'loading', duration: 2 });\n                    setTimeout(() => {\n                        history.push('/user');\n                    }, 1000)\n                    return;\n                }\n                if (res.msg !== undefined) {\n                    message.error({ content: res.msg, key: 'loading', duration: 2 });\n                } else {\n                    message.error({ content: ImperativeFormatMessage('Login failed'), key: 'loading', duration: 2 });\n                }\n            })\n    };\n\n\n    return (\n        <div className=\"site-card-border-less-wrapper\">\n            <Card className=\"card\" title={<FormattedMessage\n                id='Login'\n                defaultMessage='Login'\n            />}>\n\n                <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={getFormdata()}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: (<FormattedMessage\n                                    id='Please input your Username!'\n                                    defaultMessage='Please input your Username!'\n                                />),\n                            },\n                        ]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: (<FormattedMessage\n                                    id='Please input your Password!'\n                                    defaultMessage='Please input your Password!'\n                                />),\n                            },\n                        ]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                            <Checkbox>\n                                <FormattedMessage\n                                    id='Remember me'\n                                    defaultMessage='Remember me'\n                                />\n                            </Checkbox>\n                        </Form.Item>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            <FormattedMessage\n                                id='Log in'\n                                defaultMessage='Log in'\n                            />\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n            </Card>\n        </div>\n    );\n};\n\nexport default Login;","\nimport requests from '@utils/requests'\n\nexport const loginApi = (user) => {\n    let formData = new FormData();\n    formData.append('username', user.username);\n    formData.append('password', user.password);\n    return requests.post('/login', formData)\n}","import React from 'react'\n\nfunction PageNotFound() {\n    return (\n        <div>\n            404 PageNotFound\n        </div>\n    )\n}\n\nexport default PageNotFound\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb } from 'antd';\n\nconst Mybreadcrumb = (props) => {\n    let items = props.path;\n    return (\n        <Breadcrumb style={{ marginBottom: '2em' }}>\n            <Breadcrumb.Item key='home'>\n                <Link to=\"/\">Home</Link>\n            </Breadcrumb.Item>\n            {\n                items.map((item, k) => {\n                    if (item.link !== undefined && item.link !== '') {\n                        return <Breadcrumb.Item key={k}>\n                            <Link to={item.link}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                    }\n                    return <Breadcrumb.Item key={k}>\n                        {item.title}\n                    </Breadcrumb.Item>\n                })\n            }\n        </Breadcrumb>\n    )\n}\n\nexport default Mybreadcrumb\n","import React from 'react'\nimport Mybreadcrumb from '@components/Mybreadcrumb'\n\nconst Dashboard = () => {\n\n    return (\n        <div>\n            <Mybreadcrumb path={[{ title: 'Dashborad' }]} />\n            啥也没有的控制台\n        </div>\n    )\n}\n\nexport default Dashboard\n","\nimport requests from '@utils/requests'\n\n/**\n * 获取域名列表\n */\nexport const getZonesApi = () => {\n    return requests.get('/zone_list')\n}\n\n/**\n * 添加域名\n * @param {string} zone_name \n */\nexport const zoneCreate = (zone_name) => {\n    return requests.post('/do_zone_create', {\n        'zone_name': zone_name,\n    })\n}\n/**\n * 删除域名\n * @param {string} zone_id \n */\nexport const zoneDelete = (zone_id) => {\n    return requests.del('/do_zone_delete', {\n        'zone_id': zone_id,\n    })\n}\n\n\n/**\n * 获取目标域名的dns记录\n * @param {string} zone_id \n */\nexport const getZoneDnsrecordsApi = (zone_id) => {\n    return requests.get('/get_dns_records', {\n        'zone_id': zone_id\n    })\n}\n/**\n * 获取目标域名目标dns记录的详细信息\n * @param {string} zone_id \n * @param {string} dns_record_id \n */\nexport const getDnsRecordInfoApi = (zone_id, dns_record_id) => {\n    return requests.get('/get_dns_record_info', {\n        'zone_id': zone_id,\n        'dns_record_id': dns_record_id,\n    })\n}\n/**\n * 更新目标域名的目标dns记录\n * @param {string} zone_id \n * @param {string} dns_record_id \n * @param {object} body \n */\nexport const dnsRecordUpdate = (zone_id, dns_record_id, body) => {\n    return requests.put('/do_dns_record_update', {\n        'name': body.name,\n        'type': body.type,\n        'content': body.content,\n        'proxied': body.proxied,\n        'ttl': body.ttl,\n    }, {\n        'zone_id': zone_id,\n        'dns_record_id': dns_record_id,\n    })\n}\n\n/**\n * 删除目标域名的目标dns记录\n * @param {string} zone_id \n * @param {string} dns_record_id \n */\nexport const dnsRecordDelete = (zone_id, dns_record_id) => {\n    return requests.del('/do_dns_record_delete', {\n        'zone_id': zone_id,\n        'dns_record_id': dns_record_id,\n    })\n}\n/**\n * 添加dns记录至目标域名\n * @param {string} zone_id \n * @param {object} body \n */\nexport const dnsRecordCreate = (zone_id, body) => {\n    return requests.post('/do_dns_record_create', {\n        'name': body.name,\n        'type': body.type,\n        'content': body.content,\n        'proxied': body.proxied,\n        'ttl': body.ttl,\n    }, {\n        'zone_id': zone_id,\n    })\n}\n/**\n * 获取域名全部设置\n * @param {string} zone_id \n */\nexport const getAllZoneSettings = (zone_id) => {\n    return requests.get('/get_all_zone_settings', {\n        'zone_id': zone_id\n    })\n}\n/**\n * 更新域名设置\n * @param {string} zone_id \n * @param {string} type \n * @param {object} body \n */\nexport const changeZoneSetting = (zone_id, type, body) => {\n    return requests.patch('/do_zone_setting_update', {\n        'value': body\n    }, {\n        'zone_id': zone_id,\n        'type': type,\n    })\n}\n/**\n * 清理缓存\n * @param {string} zone_id \n * @param {object} body \n */\nexport const doCachePurge = (zone_id, body) => {\n    return requests.post('/do_cache_purge', {\n        'purge_everything': body.purge_everything || false,\n        'files': body.files || [],\n    }, {\n        'zone_id': zone_id,\n    })\n}\n\n/**\n * 获取域名全部页面规则\n * @param {string} zone_id \n */\nexport const getZonePagerules = (zone_id) => {\n    return requests.get('/get_zone_pagerules', {\n        'zone_id': zone_id\n    })\n}\n\n/**\n * 删除域名页面规则\n * @param {string} zone_id \n * @param {string} pagerule_id \n */\nexport const doZonePageruleDelete = (zone_id, pagerule_id) => {\n    return requests.del('/do_zone_pagerule_delete', {\n        'zone_id': zone_id,\n        'pagerule_id': pagerule_id,\n    })\n}\n\n/**\n * 获取域名指定页面规则详细信息\n * @param {string} zone_id \n * @param {string} pagerule_id \n */\nexport const getZonePageruleDetails = (zone_id, pagerule_id) => {\n    return requests.get('/get_zone_pagerule_details', {\n        'zone_id': zone_id,\n        'pagerule_id': pagerule_id,\n    })\n}\n\n/**\n * 创建页面规则\n * @param {string} zone_id \n * @param {object} body \n */\nexport const doZonePageruleCreate = (zone_id, body) => {\n    return requests.post('/do_zone_pagerule_create', {\n        'targets': body.targets || [],\n        'actions': body.actions || [],\n        'priority': body.priority || 1,\n        'status': body.status || 'active',\n    }, {\n        'zone_id': zone_id,\n    })\n}\n\n/**\n * 更新页面规则\n * @param {string} zone_id \n * @param {object} body \n */\nexport const doZonePageruleUpdate = (zone_id, pagerule_id, body) => {\n    return requests.put('/do_zone_pagerule_update', {\n        'targets': body.targets || [],\n        'actions': body.actions || [],\n        'priority': body.priority || 1,\n        'status': body.status || 'active',\n    }, {\n        'zone_id': zone_id,\n        'pagerule_id': pagerule_id,\n    })\n}","import React, { useState, useCallback } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Space, Button, message } from 'antd';\n\nimport { zoneDelete } from '@service/zone';\n\nimport FormattedMessage  from '@components/FormattedMessage';\n\nfunction Operation(props) {\n    const [btnStatus, setBtnState] = useState(false)\n    const [zone_id, [zones, setZones], index] = [props.zone_id, [props.zones.zones, props.zones.setZones], props.index]\n    const deleteZone = useCallback(\n        () => {\n            setBtnState(true)\n            zoneDelete(zone_id)\n                .then((res) => {\n                    setBtnState(false)\n                    if (res.code === 200) {\n                        zones.splice(index, 1);\n                        setZones([...zones])\n                        message.success({ content: '删除成功', key: 'loading' });\n                    } else {\n                        message.error({ content: res.msg, key: 'loading' });\n                    }\n                })\n        },\n        [zone_id, zones, setZones, index],\n    );\n\n    return (\n        < Space size=\"middle\" >\n            <Link to={'/user/zone/control/' + zone_id}><Button type=\"primary\"><FormattedMessage id='Manage'/></Button></Link>\n            <Link to={'/user/zone/' + zone_id + '/dnsrecord'}><Button><FormattedMessage id='Manage DNS'/></Button></Link>\n            <Button type=\"dashed\" loading={btnStatus} onClick={deleteZone} danger><FormattedMessage id='Delete'/></Button>\n        </Space >\n    )\n}\n\nexport default Operation\n","import React, { useState, useEffect, useMemo } from 'react'\n\n\nimport { Table, Tag, message } from 'antd';\n\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { getZonesApi } from '@service/zone';\n\nimport '@css/user/zone/List.scss';\nimport Operation from '@components/zone/Operation';\n\nimport FormattedMessage  from '@components/FormattedMessage';\nconst breadcrumb = [\n    {\n        title: 'Zones'\n    }\n]\nconst List = () => {\n    const [zones, setZones] = useState([]);\n    const [loading, setloading] = useState(true)\n\n    useEffect(() => {\n        getZonesApi()\n            .then((res) => {\n                setloading(false);\n                if (res.code === 200) {\n                    setZones(res.data);\n                } else {\n                    message.error(res.msg)\n                }\n            })\n    }, [])\n    const columns = useMemo(() => {\n        return (\n            [\n                {\n                    title: <FormattedMessage id='Zone' />,\n                    dataIndex: 'name',\n                    key: 'name',\n                    render: text => text,\n                },\n                {\n                    title: <FormattedMessage id='Status' />,\n                    dataIndex: 'status',\n                    key: 'status',\n                    render: (status) => {\n                        let color = 'green';\n                        if (status !== 'active') {\n                            color = 'volcano';\n                        }\n                        return (\n                            <Tag color={color} key={status}>\n                                {status.toUpperCase()}\n                            </Tag>\n                        );\n\n                    },\n                },\n                {\n                    title: <FormattedMessage id='Operation' />,\n                    key: 'operation',\n                    render: (text, zone, index) => (\n                        <Operation zone_id={zone.id} index={index} zones={{ zones, setZones }} />\n                    ),\n                },\n            ]\n        )\n    }, [zones])\n    return (\n        <div>\n            <Mybreadcrumb path={breadcrumb} />\n            <Table columns={columns} dataSource={zones} rowKey={record => record.id} loading={loading} />\n        </div>\n    );\n}\nexport default List\n","import { createContext } from 'react'\n\nconst Context = createContext({})\n\nexport default Context\n","import React, { useState } from 'react'\nimport { Skeleton, Card, Button, Tooltip } from 'antd'\n\nimport FormattedMessage  from '@components/FormattedMessage';\n\nconst SwitchCard = (props) => {\n    const tipsTitle = () => {\n        if (props.setting !== undefined && props.setting.editable === true)\n            return props.setting.value === 'on' ? <FormattedMessage id='Click close' /> : <FormattedMessage id='Click to open' />\n        return <FormattedMessage id='No right to operate' />\n    }\n    const btn = () => {\n        if (props.setting !== undefined && props.setting.editable === true) {\n            return props.setting.value === 'on' ? 'ACTIVE' : 'DISABLED'\n        }\n        return <FormattedMessage id='No right to operate' />\n    };\n    const isActive = () => {\n        if (props.setting === undefined || props.setting.editable === false || props.setting.value !== 'on') {\n            return {}\n        }\n        return {\n            color: '#52c41a',\n            background: '#f6ffed',\n            borderColor: '#b7eb8f'\n        }\n    }\n    const [btnStatus, setBtnStatus] = useState(false)\n\n    const handOnClick = () => {\n        setBtnStatus(true)\n        props.handOnClick()\n            .finally(() => setBtnStatus(false))\n    }\n\n    return (\n        <Skeleton loading={props.loading} active>\n            <Card\n                title={props.title}\n                hoverable\n                actions={[\n                    <Tooltip title={tipsTitle} color='cyan'>\n                        <Button onClick={handOnClick} size='large'\n                            loading={btnStatus}\n                            style={isActive()}>{btn()}</Button>\n                    </Tooltip>\n                ]}\n            >\n                <div style={{ maxWidth: '600px', margin: 'auto' }}>\n                    {props.children}\n                </div>\n            </Card>\n        </Skeleton>\n    )\n}\n\nexport default SwitchCard\n","import React from 'react'\nimport { Skeleton, Card } from 'antd'\n\n\nconst DiyCard = (props) => {\n\n    return (\n        <Skeleton loading={props.loading} active>\n            <Card\n                title={props.title}\n                hoverable\n                actions={[\n                    props.actions\n                ]}\n            >\n                <div style={{ maxWidth: '600px', margin: 'auto' }}>\n                    {props.children}\n                </div>\n            </Card>\n        </Skeleton>\n    )\n}\n\nexport default DiyCard\n","import React, { useContext, useCallback } from 'react'\nimport { Space, Select, message } from 'antd'\nimport SwitchCard from '@components/SwitchCard'\nimport Context from '@utils/context';\nimport DiyCard from '@components/DiyCard'\n\nimport { changeZoneSetting } from '@service/zone'\n\nimport FormattedMessage from '@components/FormattedMessage';\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\nconst { Option } = Select\n\nfunction Overview() {\n\n\n    const { zone_settings, zone_id, exchangeStatus, loading } = useContext(Context)\n\n\n    const changeSecurityLevel = useCallback(\n        (e) => {\n            changeZoneSetting(zone_id, 'security_level', e)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success(ImperativeFormatMessage('Switch successfully'))\n                    } else {\n                        message.info(ImperativeFormatMessage('Switching failed', { msg: res.msg }))\n                    }\n                })\n        },\n        [zone_id],\n    )\n\n    const actions = [\n        {\n            'title': <FormattedMessage id='Development model' />,\n            'setting': 'development_mode',\n            'handOnClick': exchangeStatus('development_mode'),\n            'content': <FormattedMessage id='Temporarily bypass our cache. View changes made to your source server in real time.' />\n        },\n    ]\n    return (\n        <div>\n            <h3><FormattedMessage id='Quick operation' /></h3>\n            <Space direction=\"vertical\"\n                style={{ width: '100%' }}>\n\n                <DiyCard loading={loading} title={<FormattedMessage id='Under Attack Mode' />}\n                    setting={zone_settings.security_level}\n                    actions={[\n                        <Select key='security_level'\n                            defaultValue={() => {\n                                return zone_settings.security_level.value\n                            }}\n                            style={{ width: '20rem', maxWidth: '80%' }} onChange={changeSecurityLevel}>\n                            <Option value=\"off\"><FormattedMessage id='Close (Enterprise)' /></Option>\n                            <Option value=\"essentially_off\"><FormattedMessage id='Basic (essentially off)' /></Option>\n                            <Option value=\"low\"><FormattedMessage id='low' /></Option>\n                            <Option value=\"medium\"><FormattedMessage id='medium' /></Option>\n                            <Option value=\"high\"><FormattedMessage id='high' /></Option>\n                            <Option value=\"under_attack\"><FormattedMessage id='under_attack' /></Option>\n                        </Select>\n                    ]}\n                >\n                    <FormattedMessage id='Display JavaScript challenges when visitors visit your site.' />\n                </DiyCard>\n                {\n                    actions.map((v) => {\n                        return (\n                            <SwitchCard loading={loading} title={v.title}\n                                setting={zone_settings[v.setting]}\n                                handOnClick={v.handOnClick}\n                                key={v.setting}\n                            >\n                                {v.content}\n                            </SwitchCard>\n                        )\n                    })\n                }\n            </Space>\n        </div>\n    )\n}\n\nexport default Overview\n","import React from 'react'\n\nconst Img = (props) => {\n    return (\n        <img src={props.src} alt=\"\" style={{ width:'100%', height:'100%'}} />\n    )\n}\n\nexport default Img\n","\nimport moment from 'moment'\nimport { getCurrentLanguage } from '@/Lang'\n\n\nmoment.locale(getCurrentLanguage().toLowerCase());\n\nconst getLocalUnit = (v) => {\n\n    const units = {\n        'en-US': {\n            'year': 'year',\n            'month': 'month',\n            'week': 'week',\n            'day': 'day',\n            'hour': 'hour',\n            'minute': 'minute',\n            'second': 'second',\n            'millisecond': 'millisecond',\n        },\n        'zh-CN': {\n            'year': '年',\n            'month': '月',\n            'week': '周',\n            'day': '天',\n            'hour': '小时',\n            'minute': '分钟',\n            'second': '秒',\n            'millisecond': '毫秒',\n        },\n        'zh-HK': {\n            'year': '年',\n            'month': '月',\n            'week': '周',\n            'day': '天',\n            'hour': '小時',\n            'minute': '分鐘',\n            'second': '秒',\n            'millisecond': '毫秒',\n        },\n        'zh-TW': {\n            'year': '年',\n            'month': '月',\n            'week': '周',\n            'day': '天',\n            'hour': '小時',\n            'minute': '分鐘',\n            'second': '秒',\n            'millisecond': '毫秒',\n        },\n        'ja-JP': {\n            'year': '年',\n            'month': '月',\n            'week': '週間',\n            'day': '日',\n            'hour': '時間',\n            'minute': '分',\n            'second': '二番目',\n            'millisecond': 'ミリ秒',\n        },\n        'ko-KR': {\n            'year': '년',\n            'month': '달',\n            'week': '주',\n            'day': '일',\n            'hour': '시',\n            'minute': '분',\n            'second': '둘째',\n            'millisecond': '밀리 초',\n        },\n    }\n    return units[getCurrentLanguage()][v] || 'Unknown'\n}\n\n\n//秒数转 年月日时分秒数\nexport const secondTransform = (v) => {\n    let unit = 'second'\n    switch (true) {\n        // 秒数\n        case v < 60:\n            unit = 's'\n            break;\n        // 分钟数\n        case v < 3600:\n            unit = 'm'\n            break;\n        // 小时数\n        case v < 86400:\n            unit = 'h'\n            break;\n        // 天数\n        case v < 604800:\n            unit = 'd'\n            break;\n        // 周数\n        case v < 2592000:\n            unit = 'w'\n            break;\n\n        // 月数\n        case v < 31536000:\n            unit = 'M'\n            break;\n        default:\n            // 年数\n            unit = 'y'\n            break;\n    }\n    const time = Math.round(moment.duration(v, 's').as(unit)) + ' ' + getLocalUnit(moment.normalizeUnits(unit))\n    return time\n}","import React, { useState, useEffect } from 'react'\nimport { Select, Modal, Alert, Row, Col, Switch, message } from 'antd';\n\nimport { secondTransform } from '@utils/time'\n\nimport { changeZoneSetting } from '@service/zone';\n\nimport FormattedMessage from '@components/FormattedMessage';\n\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\n\nconst { Option } = Select;\n\nfunction Hsts(props) {\n\n    const [[visible, setvisible], zone_id] = [props.visibleState, props.zone_id]\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const [modalHSTS, setModalHSTS] = useState(props.modalHSTS)\n    useEffect(() => {\n        setvisible(visible)\n    }, [visible, setvisible])\n    const securityHeaderOnChange = (key, value) => {\n        modalHSTS[key] = value\n        setModalHSTS(Object.assign({}, modalHSTS))\n    }\n    const changeSecurityHeader = () => {\n        setConfirmLoading(true)\n        changeZoneSetting(zone_id, 'security_header', {\n            'strict_transport_security': modalHSTS\n        }).then((res) => {\n            if (res.code === 200) {\n                message.success(ImperativeFormatMessage('Switch successfully'))\n            } else {\n                message.info(ImperativeFormatMessage('Switching failed', { msg: res.msg }))\n            }\n        }).finally(() => {\n            setConfirmLoading(false)\n            setvisible(false)\n        })\n    }\n    const HSTSActions = [\n        {\n            content: (\n                <div>\n                    <strong><FormattedMessage id='Enable HSTS (Strict-Transport-Security)' /></strong>\n                    <p><FormattedMessage id='Provide HSTS headers for all HTTPS requests' /></p>\n                </div>\n            ),\n            action: (\n                <Switch checked={modalHSTS.enabled}\n                    onChange={(e) => securityHeaderOnChange('enabled', e)} />\n            )\n        },\n        {\n            content: (\n                <div>\n                    <strong><FormattedMessage id='Maximum age header (max-age)' /></strong>\n                    <p><FormattedMessage id='Specify the duration of HSTS header caching in the browser' /></p>\n                </div>\n            ),\n            action: (\n                <Select defaultValue={modalHSTS.max_age} style={{ width: '100%' }}>\n                    {\n                        [...Array(13)].map((v, k) => {\n                            return 2592000 * k\n                        }).map((v) => {\n                            if (v === 0) {\n                                return (<Option value={v} key={v}><FormattedMessage id='0 (disabled)' /></Option>)\n                            }\n                            return (\n                                <Option value={v} key={v}>{secondTransform(v)}</Option>\n                            )\n                        })\n                    }\n                </Select>\n            )\n        },\n        {\n            content: (\n                <div>\n\n                    <strong><FormattedMessage id='Apply HSTS policy to subdomains (includeSubDomains)' /></strong>\n\n                    <p>\n                        <FormattedMessage id='Every domain under this domain will inherit the same HSTS header' />\n                        <br />\n                        <strong><FormattedMessage id='Warning' /></strong>\n                        <FormattedMessage id='If any of your subdomains do not support HTTPS, these subdomains will become inaccessible.' />\n                    </p>\n                </div>\n            ),\n            action: (\n\n                <Switch checked={modalHSTS.include_subdomains}\n                    onChange={(e) => securityHeaderOnChange('include_subdomains', e)} />\n            )\n        },\n        {\n            content: (\n                <div>\n                    <strong>\n                        <FormattedMessage id='Preloading' />\n                    </strong>\n                    <p>\n                        <FormattedMessage id='Allow browser to automatically preload HSTS configuration' />\n                        <br />\n                        <strong><FormattedMessage id='Warning' /></strong>\n                        <FormattedMessage id='Preloading may make websites that do not support HTTPS completely inaccessible.' />\n                    </p>\n                </div>\n            ),\n            action: (\n\n                <Switch checked={modalHSTS.preload}\n                    onChange={(e) => securityHeaderOnChange('preload', e)} />\n            )\n        },\n        {\n            content: (\n                <div>\n                    <strong>\n                        <FormattedMessage id='Sniffless header' />\n                    </strong>\n                    <p>\n                        <FormattedMessage id='Send the \"X-Content-Type-Options: nosniff\" header to prevent Internet Explorer and Google Chrome from sniffing around in the declared Content-Type via MIME.' />\n                    </p>\n                </div>\n            ),\n            action: (\n\n                <Switch checked={modalHSTS.nosniff}\n                    onChange={(e) => securityHeaderOnChange('nosniff', e)} />\n            )\n        },\n\n    ]\n    return (\n        <div>\n\n            <Modal\n                title={<FormattedMessage id='HTTP Strict Transport Security (HSTS)' />}\n                visible={visible}\n                onOk={changeSecurityHeader}\n                confirmLoading={confirmLoading}\n                onCancel={() => setvisible(false)}\n                key='modal'\n            >\n                <Alert\n                    message={<FormattedMessage id='You will need to specify the full path of the file.' />}\n                    description={\n                        <FormattedMessage id='<p>HTTP Strict Transport Security (HSTS) can greatly improve the security of a website. However, when enabling HSTS, keep the following important considerations in mind:</p><strong>HTTPS (SSL) must be enabled to use HSTS. </strong><ul><li> If you turn on HSTS, but your website does not support HTTPS, the browser will not accept HSTS settings. </li><li>If you enable HSTS but leave Cloudflare, you need to continue to support HTTPS through a new service provider, otherwise, visitors will not be able to access your site until you support HTTPS. </li><li>If Cloudflare’s HTTPS is turned off after HSTS is enabled and there is no valid SSL certificate on the origin server, visitors will not be able to access your website. </li><li>Note: Cloudflare’s HTTP can be disabled in several ways: masking subdomains in DNS records, \"suspending\" Cloudflare services, or using a custom SSL certificate that is incorrectly configured on your Cloudflare dashboard (e.g. , Invalid SSL certificate, expired certificate, or mismatched hostname). </li></ul><p>If you need to disable HTTPS on your domain, you must first disable HSTS in your Cloudflare dashboard and wait until the maximum period has passed (to ensure that every browser is aware of this change) Before you can disable HTTPS. The average maximum period is six months (you can set the maximum period in the next step). If you delete HTTPS before disabling HSTS, visitors will not be able to access your site until the maximum period is reached or you support HTTPS again. Since disabling HTTPS on HSTS-enabled websites may cause these consequences, we strongly recommend that you deploy the HTTPS service before enabling this feature</p>' />\n                    }\n                    type=\"info\"\n                    closable\n                />\n                <br />\n                <Alert\n                    message={<FormattedMessage id='Warning' />}\n                    description={\n                        <FormattedMessage id='If not configured correctly, HTTP Strict Transport Security (HSTS) may make your website inaccessible for a long time.' />\n                    }\n                    type=\"warning\"\n                />\n                <br />\n                {\n                    HSTSActions.map((v, index) => {\n                        return (\n                            <Row key={index}>\n                                <Col span={18}>\n                                    {v.content}\n                                </Col>\n                                <Col span={6} style={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                }}>\n                                    {v.action}\n                                </Col>\n                            </Row>\n                        )\n                    })\n                }\n            </Modal>\n        </div>\n    )\n}\n\nexport default Hsts\n","import React, { useState, useCallback, useContext } from 'react'\nimport { Radio, Tooltip, Space, message, Select, Button } from 'antd';\nimport Img from '@components/Img'\nimport Img_SSLTLS from '@/assets/images/ssl-tls.jpg'\nimport SwitchCard from '@components/SwitchCard'\nimport DiyCard from '@components/DiyCard'\nimport Context from '@utils/context';\nimport { changeZoneSetting } from '@service/zone';\nimport Hsts from '@components/zone/SslTls/Hsts'\n\nimport FormattedMessage from '@components/FormattedMessage';\n\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\n\nconst { Option } = Select;\n\nfunction SslTls() {\n\n    const { zone_settings, zone_id, exchangeStatus, loading } = useContext(Context)\n\n\n    const [visible, setvisible] = useState(false)\n\n    const changeSSL = useCallback(\n        (e) => {\n            changeZoneSetting(zone_id, 'ssl', e.target.value)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success(ImperativeFormatMessage('Switch successfully'))\n                    } else {\n                        message.info(ImperativeFormatMessage('Switching failed', { msg: res.msg }))\n                    }\n                })\n\n        },\n        [zone_id],\n    )\n    const handleMinTlsVersionChange = (e) => {\n        changeZoneSetting(zone_id, 'min_tls_version', e)\n            .then((res) => {\n                if (res.code === 200) {\n                    message.success(ImperativeFormatMessage('Switch successfully'))\n                } else {\n                    message.info(ImperativeFormatMessage('Switching failed', { msg: res.msg }))\n                }\n            })\n    }\n\n    const actions = [\n        {\n            'title': <FormattedMessage id='Always use HTTPS' />,\n            'setting': 'always_use_https',\n            'handOnClick': exchangeStatus('always_use_https'),\n            'content': <FormattedMessage id='Redirect all requests using the \"http\" scheme to \"https\". This will apply to all http requests in the area.' />,\n        },\n        {\n            'title': <FormattedMessage id='Random encryption' />,\n            'setting': 'opportunistic_encryption',\n            'handOnClick': exchangeStatus('opportunistic_encryption'),\n            'content': <FormattedMessage id='Random encryption allows browsers to know that your site is provided through an encrypted connection, allowing them to benefit from the performance improvements of HTTP/2. The browser will continue to display \"http\" in the address bar instead of \"https\".' />,\n        },\n        {\n            'title': <FormattedMessage id='Automatic HTTPS rewrite' />,\n            'setting': 'automatic_https_rewrites',\n            'handOnClick': exchangeStatus('automatic_https_rewrites'),\n            'content': <FormattedMessage id='Automatic HTTPS rewriting helps correct mixed content by changing \"http\" to \"https\" for all resources or links on websites that can be served by HTTPS.' />,\n        },\n    ]\n    return (\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n            <DiyCard loading={loading} title={<FormattedMessage id='Your SSL/TLS encryption mode is {mode}' values={{ mode: zone_settings.ssl.value }} />}\n                setting={zone_settings.min_tls_version}\n                actions={\n                    <Radio.Group defaultValue={zone_settings.ssl.value} onChange={changeSSL} key='ssl'>\n                        <Tooltip title={<FormattedMessage id='No encryption applied' />} color='cyan'>\n                            <Radio.Button value=\"off\"><FormattedMessage id='Close (unsafe)' /></Radio.Button>\n                        </Tooltip>\n                        <Tooltip title={<FormattedMessage id='Encrypt the traffic between the browser and Cloudflare' />} color='cyan'>\n                            <Radio.Button value=\"flexible\"><FormattedMessage id='Flexible' /></Radio.Button>\n                        </Tooltip>\n                        <Tooltip title={<FormattedMessage id='End-to-end encryption, using self-signed certificate on the server' />} color='cyan'>\n                            <Radio.Button value=\"full\"><FormattedMessage id='Full' /></Radio.Button>\n                        </Tooltip>\n                        <Tooltip title={<FormattedMessage id='End-to-end encryption, but a trusted CA certificate or Cloudflare Origin CA certificate is required on the server' />} color='cyan'>\n                            <Radio.Button value=\"strict\"><FormattedMessage id='Complete (strict)' /></Radio.Button>\n                        </Tooltip>\n\n                    </Radio.Group>\n                }\n            ><Img src={Img_SSLTLS} />\n                <div style={{ padding: '1em 0' }}>\n                    <strong><FormattedMessage id='This setting was last changed' />&nbsp;{zone_settings.ssl.modified_on}</strong>\n                </div>\n            </DiyCard>\n\n            <DiyCard loading={loading} title={<FormattedMessage id='Minimum TLS version' />}\n                setting={zone_settings.min_tls_version}\n                actions={[\n                    <Select key='min_tls_version' defaultValue={zone_settings.min_tls_version.value} style={{ width: '20rem', maxWidth: '80%' }} onChange={handleMinTlsVersionChange}>\n                        <Option value=\"1.0\">1.0</Option>\n                        <Option value=\"1.1\">1.1</Option>\n                        <Option value=\"1.2\">1.2</Option>\n                        <Option value=\"1.3\">1.3</Option>\n                    </Select>\n                ]}\n            >\n                <FormattedMessage id='Only allow HTTPS connections from visitors who support the selected TLS protocol version or higher.' />\n            </DiyCard>\n\n            <DiyCard loading={loading} title={<FormattedMessage id='HTTP Strict Transport Security (HSTS)' />}\n                setting={zone_settings.security_header}\n                actions={[\n\n                    <Tooltip title={<FormattedMessage id='Click to switch' />} color='cyan' key='security_header'>\n                        <Button onClick={() => setvisible(true)}>{\n                            (() => {\n                                if (zone_settings.security_header.enabled === true) {\n\n                                    return <FormattedMessage id='Turn off HTTP Strict Transport Security (HSTS)' />\n                                } else {\n\n                                    return <FormattedMessage id='Enable HTTP Strict Transport Security (HSTS)' />\n                                }\n                            })()\n                        }\n                        </Button>\n                    </Tooltip>,\n                    <Hsts key='Hsts' visibleState={[visible, setvisible]} zone_id={zone_id} modalHSTS={zone_settings.security_header.value.strict_transport_security} />\n\n                ]}\n            >\n                <FormattedMessage id='Enforce web security policies on your website.' />\n            </DiyCard>\n            {\n                actions.map((v) => {\n                    return (\n                        <SwitchCard loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            handOnClick={v.handOnClick}\n                            key={v.setting}\n                        >\n                            {v.content}\n                        </SwitchCard>\n                    )\n                })\n            }\n        </Space>\n    )\n}\n\nexport default SslTls\n","import React, { useContext } from 'react'\nimport SwitchCard from '@components/SwitchCard'\nimport { notification } from 'antd'\nimport Context from '@utils/context';\n\nfunction Firewall() {\n\n    const { loading } = useContext(Context)\n\n    return (\n        <div>\n            <SwitchCard title=\"防火墙规则\" loading={loading} handOnClick={\n\n                () => {\n                    return new Promise((resolve, reject) => {\n                        notification.open({\n                            message: '尚未开发',\n                            description:\n                                '你在叫我做事？',\n                            onClick: () => {\n                                console.log('Notification Clicked!');\n                            },\n                        });\n                        resolve()\n                    })\n                }\n            }>\n                <h1>暂时不可用</h1>\n                通过基于位置、IP 地址、用户代理和 URI 等筛选请求，来控制传入到您的区域的流量。\n                您已使用 0 个活动的防火墙规则（总计 5 个）。\n            </SwitchCard>\n\n        </div>\n    )\n}\n\nexport default Firewall\n","import React, { useState, useContext, useCallback } from 'react'\nimport { Radio, Tooltip, Modal, Space, Select, message, Button, Input, Alert, Popconfirm } from 'antd';\nimport SwitchCard from '@components/SwitchCard'\nimport DiyCard from '@components/DiyCard'\n\nimport Context from '@utils/context';\n\nimport { secondTransform } from '@utils/time'\nimport { changeZoneSetting, doCachePurge } from '@service/zone'\n\n\nimport FormattedMessage  from '@components/FormattedMessage';\n\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\n\nconst { Option } = Select\nconst { TextArea } = Input\n\nfunction Cache() {\n\n    const { zone_settings, zone_id, exchangeStatus, loading } = useContext(Context)\n\n    const [visible, setvisible] = useState(false)\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const [modalText, setModalText] = useState('')\n\n    const changeCacheLevel = useCallback(\n        (e) => {\n            changeZoneSetting(zone_id, 'cache_level', e.target.value)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success(ImperativeFormatMessage('Switch successfully'))\n                    } else {\n                        message.info(ImperativeFormatMessage('Switching failed',{ msg: res.msg }))\n\t\t\t\t\t\t\n                    }\n                })\n        },\n        [zone_id],\n    )\n\n    const purgeEverything = useCallback(\n        () => {\n            const data = {\n                'purge_everything': true,\n            }\n            doCachePurge(zone_id, data)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success(ImperativeFormatMessage('Switch successfully'))\n                    } else {\n                        message.info(ImperativeFormatMessage(\"Switching failed\",{ msg: res.msg }))\n                    }\n                })\n        },\n        [zone_id],\n    )\n    const purgeFilesByUrl = useCallback(() => {\n        setConfirmLoading(true)\n        setModalText(modalText.trim())\n        if (modalText.length === 0) {\n            message.warning(ImperativeFormatMessage('URL must not be empty'))\n            return\n        }\n        const data = {\n            'files': modalText.split('\\n')\n        }\n        doCachePurge(zone_id, data)\n            .then((res) => {\n                if (res.code === 200) {\n                    message.success(ImperativeFormatMessage('Switch successfully'))\n                } else {\n                    message.info(ImperativeFormatMessage('Switching failed',{ msg: res.msg }))\n                }\n            }).finally(() => {\n                setConfirmLoading(false)\n            })\n    },\n        [zone_id, modalText],\n    )\n    const changeBrowserCacheTtl = useCallback(\n        (e) => {\n            console.log(e);\n            changeZoneSetting(zone_id, 'browser_cache_ttl', e)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success(ImperativeFormatMessage('Switch successfully'))\n                    } else {\n                        message.info(ImperativeFormatMessage('Switching failed',{ msg: res.msg }))\n                    }\n                })\n        },\n        [zone_id],\n    )\n\n    const actions = [\n        {\n            'title': 'Always Online™',\n            'setting': 'always_online',\n            'handOnClick': exchangeStatus('always_online'),\n            'content': <FormattedMessage id='If your server is shut down, Cloudflare will use our cache to serve the static pages of your website.' />\n\n        },\n        {\n            'title': <FormattedMessage id='Development Mode™' />,\n            'setting': 'development_mode',\n            'handOnClick': exchangeStatus('development_mode'),\n            'content':\n                // 'content': <FormattedMessage id='Temporarily bypass our cache to see the changes made to your origin server in real time. <br />Note: Enabling this feature can significantly speed up the loading speed of the origin server. The development mode does not clear the cache, so you need to clear the files after the development mode expires.' />\n\n                <FormattedMessage id=\"Temporarily bypass our cache to see the changes made to your origin server in real time. <br />Note: Enabling this feature can significantly speed up the loading speed of the origin server. The development mode does not clear the cache, so you need to clear the files after the development mode expires.\">\n                    {txt => <h1 dangerouslySetInnerHTML={{\n                        __html: txt\n                    }\n                    }></h1>\n                    }\n                </FormattedMessage >\n        },\n    ]\n\n    const divCards = [\n\n        {\n            'title': <FormattedMessage id='Clear cache' />,\n            'setting': 'purge_cache',\n            'actions': [\n                <Tooltip title={<FormattedMessage id='Custom clear' />} color='cyan' key='purge_files_by_url'>\n                    <Button onClick={() => setvisible(true)}><FormattedMessage id='Custom clear' /></Button>\n                </Tooltip>,\n                <Tooltip title={<FormattedMessage id='Clear all caches, use with caution' />} color='cyan' key='purge_everything'>\n                    <Popconfirm\n                        title={<FormattedMessage id='Are you sure you want to clear all caches' />}\n                        onConfirm={purgeEverything}\n                        okText={<FormattedMessage id='Yes' />}\n                        cancelText={<FormattedMessage id='Cancel' />}\n                    >\n                        <Button><FormattedMessage id='Clean up all' /></Button>\n                    </Popconfirm>\n                </Tooltip>,\n                <Modal\n                    title={<FormattedMessage id='Custom clear' />}\n                    visible={visible}\n                    onOk={purgeFilesByUrl}\n                    confirmLoading={confirmLoading}\n                    onCancel={() => setvisible(false)}\n                    key='modal'\n                >\n                    <Alert\n                        message={<FormattedMessage id='You will need to specify the full path of the file.' />}\n                        description={<div>\n                            <FormattedMessage id='Assss' />\n                            <FormattedMessage id='Assss' />\n                            <FormattedMessage id='Assss' />\n                            <p>\n                                <FormattedMessage id='Currently, wildcards are not supported when clearing a single URL. You can clear up to 30 URLs at once. Separate URLs one per line.' />\n                            </p>\n                            <strong>\n                                <FormattedMessage id='Example' />\n                            </strong>\n                            <ul>\n                                <li>https://www.v8cdn.xyz</li>\n                                <li>https://www.v8cdn.xyz/cat.jpg</li>\n                            </ul>\n                        </div>}\n                        type=\"info\"\n                        closable\n                    />\n                    <br />\n                    <TextArea rows={4} value={modalText} onChange={(e) => {\n                        setModalText(e.target.value)\n                    }} />\n                </Modal>\n            ],\n            'content': <FormattedMessage id='Clear the cache files to force Cloudflare to extract the latest versions of these files from your web server. You can erase files selectively, or you can erase all files at the same time. <br /><strong>Note:</strong> Clearing the cache may temporarily degrade the performance of your website and increase the time it takes to load files on your origin server.' />\n        },\n        {\n            'title': <FormattedMessage id='Cache level' />,\n            'setting': 'cache_level',\n            'actions':\n                [\n                    <Radio.Group defaultValue={zone_settings.cache_level.value} key='cache_level' onChange={changeCacheLevel}>\n                        <Tooltip title={\n                            <FormattedMessage id='No query string' />\n                        } color='cyan'>\n                            <Radio.Button value=\"basic\">\n                                <FormattedMessage id='No query string' />\n                            </Radio.Button>\n                        </Tooltip>\n                        <Tooltip title={\n                            <FormattedMessage id='Ignore query string' />\n                        } color='cyan'>\n                            <Radio.Button value=\"simplified\">\n                                <FormattedMessage id='Ignore query string' />\n                            </Radio.Button>\n                        </Tooltip>\n                        <Tooltip title={\n                            <FormattedMessage id='Standard' />\n\n                        } color='cyan'>\n                            <Radio.Button value=\"aggressive\">\n                                <FormattedMessage id='Standard' />\n                            </Radio.Button>\n                        </Tooltip>\n                    </Radio.Group>\n                ],\n            'content': <FormattedMessage id='Determine the amount of static content you want Cloudflare to cache your website. Increasing the cache can shorten the page load time.' />\n        },\n        {\n            'title': <FormattedMessage id='Browser cache TTL' />,\n\n            'setting': 'browser_cache_ttl',\n            'actions':\n                [\n                    <Select\n                        defaultValue={zone_settings.browser_cache_ttl.value}\n                        style={{ width: '20rem', maxWidth: '80%' }} key='browser_cache_ttl'\n                        onChange={changeBrowserCacheTtl}\n                    >\n\n                        {\n                            [0, 30, 60, 300, 1200, 1800, 3600, 7200, 10800, 14400, 18000, 28800, 43200, 57600, 72000, 86400, 172800, 259200, 345600, 432000, 691200, 1382400, 2073600, 2678400, 5356800, 16070400, 31536000]\n                                .map((v) => {\n                                    if (v === 0) {\n                                        return (\n                                            <Option value={v} key={v}>\n                                                <FormattedMessage id='Follow existing headers' />\n                                            </Option>\n                                        )\n                                    }\n                                    return (\n                                        <Option value={v} key={v}>{secondTransform(v)}</Option>\n                                    )\n\n                                })\n                        }\n                    </Select >\n                ],\n            'content':\n                <FormattedMessage id='Determine how long Cloudflare instructs visitors’ browsers to cache files. During this period, the browser will load files from its local cache, thereby improving page loading speed.' />\n        },\n\n    ]\n\n    return (\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n            {\n                divCards.map((v, index) => {\n                    return (\n                        <DiyCard\n                            loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            key={v.setting}\n                            actions={v.actions}\n                        >\n                            {v.content}\n                        </DiyCard>\n                    )\n                })\n            }\n            {\n                actions.map((v, index) => {\n                    return (\n                        <SwitchCard loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            handOnClick={v.handOnClick}\n                            key={v.setting}\n                        >\n                            {v.content}\n                        </SwitchCard>\n                    )\n                })\n            }\n        </Space >\n    )\n}\n\nexport default Cache\n","\r\nimport React, { useState } from 'react'\r\n// import { Link } from 'react-router-dom'\r\nimport { DeleteFilled } from '@ant-design/icons'\r\nimport { Space, Switch, Button, message, Popconfirm, notification } from 'antd'\r\nimport { doZonePageruleUpdate, doZonePageruleDelete } from '@service/zone'\r\n\r\nimport FormattedMessage from '@components/FormattedMessage';\r\n\r\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\r\n\r\nfunction Actions(props) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [btnLoading, setBtnLoading] = useState(false)\r\n    const changeStatus = (v) => {\r\n        setLoading(true)\r\n        let pageRules = JSON.parse(JSON.stringify(props.pageRules.pageRules))\r\n        pageRules[props.index].status = (v === true ? 'active' : 'disabled')\r\n        doZonePageruleUpdate(props.zone_id, pageRules[props.index].id, pageRules[props.index])\r\n            .then((res) => {\r\n                if (res.code === 200) {\r\n                    props.pageRules.setPageRules(pageRules)\r\n                    message.success(ImperativeFormatMessage('Switch successfully'))\r\n                } else {\r\n                    message.info(ImperativeFormatMessage('Switching failed', { msg: res.msg }))\r\n                }\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }\r\n    const deleteRecord = (v) => {\r\n        setBtnLoading(true)\r\n        let pageRules = [...props.pageRules.pageRules]\r\n        doZonePageruleDelete(props.zone_id, pageRules[props.index].id)\r\n            .then((res) => {\r\n                if (res.code === 200) {\r\n                    pageRules.splice(props.index, 1)\r\n                    props.pageRules.setPageRules(pageRules)\r\n                    message.success(ImperativeFormatMessage('Successfully deleted'))\r\n                } else {\r\n                    message.info(res.msg)\r\n                }\r\n            })\r\n            .finally(() => setBtnLoading(false))\r\n\r\n    }\r\n    return (\r\n        <Space>\r\n            <Switch loading={loading} checked={props.record.status === 'active'} onChange={changeStatus} />\r\n            {/* <Link to={'/user/zone/control/' + props.zone_id + '/pagerule/' + props.record.id}>\r\n                <Button type='dashed'><FormattedMessage id='Manage' /></Button>\r\n            </Link> */}\r\n            <Button type='dashed' onClick={\r\n                () => {\r\n                    notification.open({\r\n                        message: '尚未开发',\r\n                        description:\r\n                            '没写',\r\n                        onClick: () => {\r\n                            console.log('Notification Clicked!');\r\n                        },\r\n                    });\r\n                }\r\n            }><FormattedMessage id='Manage' /></Button>\r\n\r\n            <Popconfirm\r\n                title={<FormattedMessage id='You sure you want to delete it' />}\r\n                onConfirm={deleteRecord}\r\n                okText={<FormattedMessage id='Yes' />}\r\n                cancelText={<FormattedMessage id='Cancel' />}\r\n            >\r\n                <Button loading={btnLoading} type='dashed' shape=\"circle\" icon={<DeleteFilled />} danger></Button>\r\n            </Popconfirm>\r\n        </Space>\r\n    )\r\n}\r\n\r\nexport default Actions\r\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Space, message, Table, Tag } from 'antd'\n\nimport SwitchCard from '@components/SwitchCard'\n\nimport Context from '@utils/context';\nimport { getZonePagerules } from '@service/zone'\nimport Actions from '@components/zone/Pagerules/Actions';\n\nimport FormattedMessage  from '@components/FormattedMessage';\n\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\n\nconst Pagerules = (props) => {\n\n\n    const { zone_id } = useContext(Context)\n    const [dataSource, setDataSource] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const columns = [\n        {\n            title: <FormattedMessage id='URL/description' />,\n            dataIndex: 'title',\n            key: 'title',\n            render: (text, record) => {\n                return (\n                    <div>\n                        <h4>\n                            {\n                                record.targets.map((v, index) => <span key={index} color=\"cyan\">{v.constraint.value}</span>)\n                            }\n                        </h4>\n                        <br />\n                        <p>{\n                            record.actions.map((v, index) => {\n                                if (typeof v.value === 'string') {\n                                    return <Tag key={index} color=\"cyan\">{v.id}:{v.value}</Tag>\n                                } else {\n                                    return <Tag key={index} color=\"cyan\">{v.id}:{JSON.stringify(v.value)}</Tag>\n                                }\n                            })\n                        }</p>\n                    </div>\n                )\n            },\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record, index) => {\n                return (\n                    <Actions record={record} zone_id={zone_id} pageRules={{ pageRules: dataSource, setPageRules: setDataSource }} index={index} />\n                )\n            },\n        },\n    ];\n\n    useEffect(() => {\n        getZonePagerules(zone_id)\n            .then((res) => {\n                if (res.code === 200) {\n                    setDataSource(res.data)\n                } else {\n                    message.error(ImperativeFormatMessage('Failed to get page rules'))\n                }\n            }).finally(() => setLoading(false))\n    }, [zone_id])\n\n    return (\n\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n\n            <SwitchCard loading={loading} title={<FormattedMessage id='Page rules' />}>\n                <FormattedMessage id='<div>Page rules are used to control which Cloudflare settings are triggered for a given URL. Only one page rule is triggered for each URL, so if you sort the page rules in order of priority, this is very useful. Please set the URL mode as specific as possible.<br />You have {number} page rules left.</div>' values={{ number: 99999 }} />\n            </SwitchCard>\n            <Table\n                loading={loading}\n                columns={columns}\n                dataSource={dataSource}\n                rowKey={record => record.id}\n            />\n        </Space>\n\n    )\n}\nexport default Pagerules\n","import React, { useContext } from 'react'\nimport { Space } from 'antd'\nimport SwitchCard from '@components/SwitchCard'\nimport Context from '@utils/context';\n\nimport FormattedMessage  from '@components/FormattedMessage';\n\nfunction Network() {\n\n    const { zone_settings, exchangeStatus, loading } = useContext(Context)\n\n    // <FormattedMessage id='aaa'/>\n    const actions = [\n        {\n            'title': 'HTTP/2',\n            'setting': 'http2',\n            'handOnClick': exchangeStatus('http2'),\n            'content': <FormattedMessage id='Speed up your website with HTTP/2'/>\n        },\n        {\n            'title':  <FormattedMessage id='HTTP/3 (using QUIC)'/>,\n            'setting': 'http3',\n            'handOnClick': exchangeStatus('http3'),\n            'content': <FormattedMessage id='Use QUIC to accelerate HTTP requests. QUIC provides higher encryption and performance than TCP and TLS.'/>\n        },\n        {\n            'title':  <FormattedMessage id='0-RTT connection recovery'/>,\n            'setting': '0rtt',\n            'handOnClick': exchangeStatus('0rtt'),\n            'content': <FormattedMessage id='Improve the performance of clients that have previously connected to your website.'/>\n        },\n        {\n            'title': 'WebSocket',\n            'setting': 'websockets',\n            'handOnClick': exchangeStatus('websockets'),\n            'content': <FormattedMessage id='Allow a WebSocket connection with your origin server. <br />Concurrent connection criteria applicable to your plan: low'/>\n        },\n        {\n            'title':  <FormattedMessage id='Onion routing'/>,\n            'setting': 'opportunistic_onion',\n            'handOnClick': exchangeStatus('opportunistic_onion'),\n            'content': <FormattedMessage id=\"Onion routing allows traffic from legitimate users on the Tor network to be routed through Cloudflare's onion service instead of exit nodes, thereby improving user privacy and achieving more detailed protection.\"/>\n        },\n        {\n            'title':  <FormattedMessage id='IP geolocation'/>,\n            'setting': 'ip_geolocation',\n            'handOnClick': exchangeStatus('ip_geolocation'),\n            'content': <FormattedMessage id='Contains the country code of the visitor’s location and all requests sent to your website. <br /><strong>Note:</strong> You must retrieve the IP geolocation information from the CF-IPCountry HTTP header.'/>\n\n        },\n    ]\n    return (\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n\n            {\n                actions.map((v) => {\n                    return (\n                        <SwitchCard loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            handOnClick={v.handOnClick}\n                            key={v.setting}\n                        >\n                            {v.content}\n                        </SwitchCard>\n                    )\n                })\n            }\n        </Space>\n    )\n}\n\nexport default Network\n","import React, { useContext } from 'react'\nimport { Space } from 'antd'\nimport SwitchCard from '@components/SwitchCard'\n\nimport Context from '@utils/context';\n\nimport FormattedMessage  from '@components/FormattedMessage';\n\nfunction ScrapeShield() {\n\n    const { zone_settings, exchangeStatus, loading } = useContext(Context)\n\n\n    const actions = [\n        {\n            'title': <FormattedMessage id='Email address obfuscation technique'/>,\n            'setting': 'email_obfuscation',\n            'handOnClick': exchangeStatus('email_obfuscation'),\n            'content': <FormattedMessage id='Display an obfuscated email address on your website to prevent automated programs and spammers from obtaining it, while for human visitors, no visible changes will be made to the address.'/>,\n        },\n        {\n            'title': <FormattedMessage id='Server side exclusion'/>,\n            'setting': 'server_side_exclude',\n            'handOnClick': exchangeStatus('server_side_exclude'),\n            'content': <FormattedMessage id='Automatically hide specific content to prevent visitors with a bad reputation from viewing'/>,\n        },\n        {\n            'title': <FormattedMessage id='Hotlink protection'/>,\n            'setting': 'hotlink_protection',\n            'handOnClick': exchangeStatus('hotlink_protection'),\n            'content': <FormattedMessage id='Prevent offsite links pointing to your images.'/>,\n        },\n    ]\n    return (\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n\n            {\n                actions.map((v) => {\n                    return (\n                        <SwitchCard loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            handOnClick={v.handOnClick}\n                            key={v.setting}\n                        >\n                            {v.content}\n                        </SwitchCard>\n                    )\n                })\n            }\n        </Space>\n    )\n}\n\nexport default ScrapeShield\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Tabs, message, Spin } from 'antd';\n\nimport Context from '@utils/context'\n\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { getAllZoneSettings, changeZoneSetting } from '@service/zone'\n\nimport Overview from '@components/zone/Overview'\nimport SslTls from '@components/zone/SslTls'\nimport Firewall from '@components/zone/Firewall'\nimport Cache from '@components/zone/Cache'\nimport Pagerules from '@components/zone/Pagerules'\nimport Network from '@components/zone/Network'\nimport ScrapeShield from '@components/zone/ScrapeShield'\n\nimport FormattedMessage from '@components/FormattedMessage';\n\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\n\nconst { TabPane } = Tabs;\n\nconst breadcrumb = [\n    {\n        title: 'Zones',\n        link: '/user/zones'\n    },\n    {\n        title: 'Control'\n    }\n]\n\nconst Control = (props) => {\n    const components = [\n        {\n            'title': <FormattedMessage id='Overview'\n                defaultMessage='Overview'\n                description='概览'\n            />,\n\n            'key': 'Overview',\n            'content': <Overview />\n        },\n        {\n            'title': <FormattedMessage id='SSL-TLS'\n                defaultMessage='SSL-TLS'\n                description='SSL-TLS'\n            />,\n            'key': 'SslTls',\n            'content': <SslTls />\n        },\n        {\n            'title': <FormattedMessage id='Firewall'\n                defaultMessage='Firewall'\n                description='防火墙'\n            />,\n            'key': 'firewall',\n            'content': <Firewall />\n        },\n        {\n            'title': <FormattedMessage id='Cache'\n                defaultMessage='Cache'\n                description='缓存'\n            />,\n            'key': 'Cache',\n            'content': <Cache />\n        },\n        {\n            'title': <FormattedMessage id='Page Rules'\n                defaultMessage='Page Rules'\n                description='页面规则'\n            />,\n            'key': 'Pagerules',\n            'content': <Pagerules />\n        },\n        {\n            'title': <FormattedMessage id='Network'\n                defaultMessage='Network'\n                description='网络'\n            />,\n            'key': 'Network',\n            'content': <Network />\n        },\n        {\n            'title': <FormattedMessage id='Scrape Shield'\n                defaultMessage='Scrape Shield'\n                description='内容保护'\n            />,\n            'key': 'ScrapeShield',\n            'content': <ScrapeShield />\n        },\n    ]\n\n    const [zone_settings, setZone_settings] = useState({})\n    const [loading, setloading] = useState(true)\n\n    const zone_id = props.match.params.zone_id;\n\n\n    useEffect(() => {\n        getAllZoneSettings(zone_id)\n            .then((res) => {\n                if (res.code === 200) {\n                    let tmp = {}\n                    res.data.map((v) => {\n                        return tmp[v.id] = v\n                    })\n                    setZone_settings(tmp)\n                    setloading(false)\n\n                } else {\n                    message.error(res.msg)\n                }\n            })\n    }, [zone_id])\n\n\n    const exchangeStatus = useCallback(\n        (id) => {\n            return async () => {\n                let value = (zone_settings[id].value === 'on') ? 'off' : 'on';\n                await changeZoneSetting(zone_id, id, value)\n                    .then((res) => {\n                        if (res.code === 200) {\n                            message.success(ImperativeFormatMessage('Switch successfully'))\n                            zone_settings[id].value = value\n                            setZone_settings(Object.assign({}, zone_settings))\n                        } else {\n                            message.info(res.msg)\n                        }\n                    })\n            }\n        },\n        [zone_settings, zone_id],\n    )\n    const contextValue = {\n        'zone_id': zone_id,\n        'zone_settings': zone_settings,\n        exchangeStatus,\n        loading\n    }\n    console.log(loading);\n    return (\n        <Context.Provider value={contextValue}>\n            <Spin tip=\"Loading...\" spinning={loading} delay={100}>\n\n                <Mybreadcrumb path={breadcrumb} />\n                <Tabs defaultActiveKey=\"Overview\" centered>\n                    {components.map((v) => {\n                        return <TabPane tab={v.title} key={v.key}>\n                            <div style={{ paddingBottom: '2rem' }}>\n                                {v.content}\n                            </div>\n                        </TabPane>\n                    })}\n                </Tabs>\n            </Spin>\n\n        </Context.Provider>\n    );\n};\nexport default Control;\n","import React from 'react'\nimport { Form, Input, Button, message } from 'antd';\n\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { zoneCreate } from '@service/zone';\n\nimport FormattedMessage  from '@components/FormattedMessage';\n\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\n\nconst layout = {\n    labelCol: {\n        span: 3,\n        sm: {\n            span: 5,\n        },\n        lg: {\n            span: 3,\n        }\n    },\n    wrapperCol: {\n        span: 12,\n        sm: {\n            span: 15,\n        },\n        lg: {\n            span: 12,\n        }\n    },\n};\nconst submitTailLayout = {\n    wrapperCol: {\n        offset: 3,\n        span: 12,\n        xs: {\n            offset: 0,\n            span: 15,\n        },\n        sm: {\n            offset: 5,\n            span: 15,\n        },\n        lg: {\n            offset: 3,\n            span: 12,\n        }\n    },\n};\nconst breadcrumb = [\n    {\n        title: 'Zones',\n        link: '/user/zones'\n    },\n    {\n        title: 'Create'\n    }\n]\n\nconst Edit = (props) => {\n    const onFinish = values => {\n        message.loading({ content: 'loading...', key: 'loading', duration: 0 });\n        zoneCreate(values.zone_name)\n            .then((res) => {\n                if (res.code === 200) {\n                    message.success({content: ImperativeFormatMessage('Add domain name successfully'), key:'loading' });\n                    props.history.push('/user/zones');\n                } else {\n                    message.error({ content: ImperativeFormatMessage('Failed to add domain',{ msg: res.msg }), key: 'loading' });\n                }\n            });\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <div>\n            <Mybreadcrumb path={breadcrumb} />\n            <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label={<FormattedMessage id='Zone Name' />}\n                    name=\"zone_name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: <FormattedMessage id='Please input your Zone Name' />,\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item  {...submitTailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" block>\n                        <FormattedMessage id='Submit' />\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\nexport default Edit;\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Space, Button, message } from 'antd'\nimport {\n    SafetyCertificateOutlined\n} from '@ant-design/icons';\n\nimport { dnsRecordUpdate, dnsRecordDelete } from '@service/zone';\n\nimport FormattedMessage from '@components/FormattedMessage';\n\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\nimport copy from 'copy-to-clipboard';\n\nfunction Operation(props) {\n\n    const [btnState, setBtnState] = useState(false)\n\n    const [\n        zone_id, record, index, [\n            dnsrecords, setDnsrecords\n        ]\n    ] = [props.zone_id, props.record, props.index, [props.dnsrecords.dnsrecords, props.dnsrecords.setDnsrecords]]\n\n    return (\n        <Space size=\"middle\">\n            <Button type=\"dashed\" className={'cdn ' + (record.proxied === true ? 'active' : '')} icon={<SafetyCertificateOutlined />} onClick={\n                () => {\n                    record.proxied = !record.proxied;\n                    message.loading({ content: 'Loading...', key: 'loading', duration: 0 });\n                    dnsRecordUpdate(zone_id, record.id, record)\n                        .then((res) => {\n                            if (res.code === 200) {\n\n                                setDnsrecords([...dnsrecords])\n\n                                message.success({ content: ImperativeFormatMessage('Update completed'), key: 'loading' });\n                            } else {\n                                message.error({ content: res.msg, key: 'loading' });\n                            }\n                        })\n                }\n            }></Button>\n            <Button type='primary' onClick={\n                () => {\n                    copy(record.name + '.cdn.cloudflare.net');\n                    message.success(ImperativeFormatMessage('Copy successfully'))\n                }\n            }><FormattedMessage id='Copy cname record' /></Button>\n            <Link to={'/user/zone/' + record.zone_id + '/dnsrecord/' + record.id + '/edit'}><Button><FormattedMessage id='Manage' /></Button></Link>\n            <Button type=\"dashed\" danger\n                loading={btnState}\n                onClick={\n                    () => {\n                        setBtnState(true)\n                        message.loading({ content: 'Loading...', key: 'loading', duration: 0 });\n                        dnsRecordDelete(zone_id, record.id)\n                            .then((res) => {\n                                setBtnState(false)\n                                if (res.code === 200) {\n                                    dnsrecords.splice(index, 1);\n                                    setDnsrecords([...dnsrecords])\n                                    message.success({ content: ImperativeFormatMessage('Successfully deleted'), key: 'loading' });\n                                } else {\n                                    message.error({ content: res.msg, key: 'loading' });\n                                }\n                            })\n                    }\n                }>Delete</Button>\n        </Space>\n\n    )\n}\n\nexport default Operation\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { Table, Button, message, Divider } from 'antd';\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { getZoneDnsrecordsApi } from '@service/zone';\nimport '@css/user/dnsrecord/List.scss';\nimport Operation from '@components/dnsrecord/Operation';\n\nimport FormattedMessage  from '@components/FormattedMessage';\n\nconst breadcrumb = [\n    {\n        title: 'Zones',\n        link: '/user/zones'\n    },\n    {\n        title: 'DNSRecords'\n    }\n]\nconst List = (props) => {\n    const [dnsrecords, setDnsrecords] = useState([]);\n    const params = props.match.params\n    const [loading, setloading] = useState(true)\n    const columns = useMemo(() => {\n        return [\n            {\n                title: <FormattedMessage id='Record Type' />,\n                dataIndex: 'type',\n                key: 'type',\n            },\n            {\n                title: <FormattedMessage id='Host Name' />,\n                dataIndex: 'name',\n                key: 'name',\n            },\n            {\n                title: <FormattedMessage id='Content' />,\n                dataIndex: 'content',\n                key: 'content',\n            },\n            {\n                title: <FormattedMessage id='TTL' />,\n                dataIndex: 'ttl',\n                key: 'ttl',\n            },\n            {\n                title: <FormattedMessage id='Operation' />,\n                key: 'operation',\n                render: (text, record, index) => {\n                    return (\n                        <Operation\n                            zone_id={params.zone_id}\n                            record={record}\n                            dnsrecords={{ dnsrecords, setDnsrecords }}\n                            index={index}\n                        />\n                    )\n                },\n            },\n        ];\n    }, [dnsrecords, params.zone_id])\n    useEffect(() => {\n        getZoneDnsrecordsApi(params.zone_id)\n            .then((res) => {\n                setloading(false);\n                if (res.code === 200) {\n                    setDnsrecords(res.data);\n                } else {\n                    message.error(res.msg)\n                }\n            })\n    }, [params.zone_id])\n\n    return (\n        <div>\n            <Mybreadcrumb path={breadcrumb} />\n            <Button\n                onClick={() => {\n                    props.history.push('/user/zone/' + params.zone_id + '/dnsrecord/create')\n                }}\n                type=\"primary\"\n            >\n                <FormattedMessage id='Add a Dnsrecord' />\n            </Button>\n            <Divider />\n            <Table\n                columns={columns}\n                dataSource={dnsrecords}\n                loading={loading}\n                rowKey={record => record.id} />\n        </div>\n    );\n}\nexport default List;\n","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { Form, Input, Button, Select, Switch, message, Spin } from 'antd';\n\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { getDnsRecordInfoApi, dnsRecordUpdate, dnsRecordCreate } from '@service/zone';\n\nimport FormattedMessage from '@components/FormattedMessage';\n\nimport ImperativeFormatMessage from '@utils/ImperativeFormatMessage'\n\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: {\n    span: 3,\n    sm: {\n      span: 5,\n    },\n    lg: {\n      span: 3,\n    }\n  },\n  wrapperCol: {\n    span: 12,\n    sm: {\n      span: 15,\n    },\n    lg: {\n      span: 12,\n    }\n  },\n};\nconst submitTailLayout = {\n  wrapperCol: {\n    offset: 3,\n    span: 12,\n    xs: {\n      offset: 0,\n      span: 15,\n    },\n    sm: {\n      offset: 5,\n      span: 15,\n    },\n    lg: {\n      offset: 3,\n      span: 12,\n    }\n  },\n};\n\nconst initialValues = {\n  type: 'CNAME',\n  ttl: 1,\n  proxied: true\n}\n\nconst Edit = (props) => {\n\n  const params = props.match.params\n  const [loading, setLoading] = useState(true)\n\n  const isCreate = useCallback(\n    () => {\n      return params.dns_record_id === undefined\n    },\n    [params],\n  )\n  const formRef = useMemo(() => React.createRef(), []);\n\n  useEffect(() => {\n    if (!isCreate()) {\n      message.loading('loading...', 0);\n      getDnsRecordInfoApi(params.zone_id, params.dns_record_id)\n        .then((res) => {\n          if (res.code === 200) {\n            const data = res.data;\n            formRef.current.setFieldsValue(data)\n          } else {\n            message.error(ImperativeFormatMessage('Failed to load dns record', { msg: res.msg }));\n          }\n        }).finally(() => {\n          message.destroy()\n          setLoading(false)\n        })\n    } else {\n      setLoading(false)\n    }\n  }, [params, formRef, isCreate])\n  const onFinish = values => {\n    message.loading({ content: 'loading...', key: 'loading', duration: 0 });\n\n    setLoading(true)\n    if (isCreate()) {\n      //新增\n      dnsRecordCreate(params.zone_id, values)\n        .then((res) => {\n          message.destroy()\n          if (res.code === 200) {\n            message.success({ content: ImperativeFormatMessage('Added record successfully'), key: 'loading' });\n            props.history.push('/user/zone/' + params.zone_id + '/dnsrecord');\n          } else {\n            message.warning({ content: res.msg, key: 'loading' });\n          }\n        }).finally(() => {\n          setLoading(false)\n        })\n\n    } else {\n      // 更新\n      dnsRecordUpdate(params.zone_id, params.dns_record_id, values)\n        .then((res) => {\n          if (res.code === 200) {\n            message.success({ content: ImperativeFormatMessage('Update record successfully'), key: 'loading' });\n            props.history.push('/user/zone/' + params.zone_id + '/dnsrecord');\n          } else {\n            message.warning({ content: res.msg, key: 'loading' });\n          }\n        }).finally(() => {\n          setLoading(false)\n        })\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const breadcrumb = [\n    {\n      title: 'Zones',\n      link: '/user/zones'\n    },\n    {\n      title: 'DNSRecord',\n      link: '/user/zone/' + params.zone_id + '/dnsrecord'\n    },\n    {\n      title: isCreate() ? 'Create' : 'Edit'\n    }\n  ]\n  return (\n    <div>\n      <Mybreadcrumb path={breadcrumb} />\n      <Spin delay={100} spinning={loading} tip=\"Loading...\">\n        <Form\n          {...layout}\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          initialValues={initialValues}\n          ref={formRef}\n        >\n\n          <Form.Item\n            label={<FormattedMessage id='Record Name' />}\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: <FormattedMessage id='Please input your Record Name' />\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label={<FormattedMessage id='Record Type' />}\n            name=\"type\"\n            rules={[\n              {\n                required: true,\n                message: <FormattedMessage id='Please input your Record Type' />\n              },\n            ]}\n          >\n            <Select style={{ width: 170 }}>\n              <Option value=\"A\">A</Option>\n              <Option value=\"AAAA\">AAAA</Option>\n              <Option value=\"CNAME\">CNAME</Option>\n              <Option value=\"TXT\">TXT</Option>\n              <Option value=\"SRV\">SRV</Option>\n              <Option value=\"LOC\">LOC</Option>\n              <Option value=\"MX\">MX</Option>\n              <Option value=\"NS\">NS</Option>\n              <Option value=\"SPF\">SPF</Option>\n              <Option value=\"CERT\">CERT</Option>\n              <Option value=\"DNSKEY\">DNSKEY</Option>\n              <Option value=\"DS\">DS</Option>\n              <Option value=\"NAPTR\">NAPTR</Option>\n              <Option value=\"SMIMEA\">SMIMEA</Option>\n              <Option value=\"SSHFP\">SSHFP</Option>\n              <Option value=\"TLSA\">TLSA</Option>\n              <Option value=\"URI\">URI</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label={<FormattedMessage id='Record Content' />}\n            name=\"content\"\n            rules={[\n              {\n                required: true,\n                message: <FormattedMessage id='Please input your Record Content' />\n              },\n            ]}\n          >\n            <Input.TextArea />\n          </Form.Item>\n          <Form.Item\n            label={<FormattedMessage id='TTL' />}\n            name=\"ttl\"\n            rules={[\n              {\n                required: true,\n                message: <FormattedMessage id='Please input your TTL' />\n              },\n            ]}\n            valuePropName='value'\n          >\n            <Select style={{ width: 170 }}>\n              <Option value={1}>Automatic</Option>\n              <Option value={120}>2 mins</Option>\n              <Option value={300}>5 mins</Option>\n              <Option value={600}>10 mins</Option>\n              <Option value={900}>15 mins</Option>\n              <Option value={1800}>30 mins</Option>\n              <Option value={3600}>1 hour</Option>\n              <Option value={7200}>2 hours</Option>\n              <Option value={18000}>5 hours</Option>\n              <Option value={43200}>12 hours</Option>\n              <Option value={86400}>1 day</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label={<FormattedMessage id='CDN' />}\n            name=\"proxied\"\n            rules={[\n              {\n                required: true,\n                message: <FormattedMessage id='Please input your CDN' />\n              },\n            ]}\n            valuePropName='checked'\n          >\n            <Switch />\n          </Form.Item>\n\n          <Form.Item  {...submitTailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              <FormattedMessage id='Submit' />\n            </Button>\n          </Form.Item>\n        </Form>\n      </Spin>\n    </div>\n  );\n};\nexport default Edit;\n","\nimport Login from \"@pages/Login\";\nimport PageNotFound from \"@pages/PageNotFound\";\nimport Dashboard from \"@pages/user/Dashboard\";\nimport ZoneList from \"@pages/user/zone/List\";\nimport ZoneControl from \"@pages/user/zone/Control\";\nimport ZoneCreate from \"@pages/user/zone/Create\";\n\nimport DnsrecordList from \"@pages/user/dnsrecord/List\";\nimport DnsrecordEdit from \"@pages/user/dnsrecord/Edit\";\n\nexport const mainRoutes = [\n  {\n    path: \"/login\",\n    component: Login\n  },\n  {\n    path: \"/404\",\n    component: PageNotFound\n  }\n];\n\nexport const userRoutes = [\n  {\n    path: \"/user/dashboard\",\n    component: Dashboard,\n    exact:true,\n    title: \"控制台\",\n  },\n  {\n    path: \"/user/zones\",\n    component: ZoneList,\n    exact:true,\n    title: \"域名管理\",\n  },\n  {\n    path: \"/user/zone/control/:zone_id\",\n    component: ZoneControl,\n    exact:true,\n    title: \"域名控制\",\n  },\n  {\n    path: \"/user/zone/create\",\n    component: ZoneCreate,\n    exact:true,\n    title: \"域名添加\",\n  },\n  {\n    path: \"/user/zone/:zone_id/dnsrecord\",\n    component: DnsrecordList,\n    exact:true,\n    title: \"DNS记录管理\",\n  },\n  {\n    path: \"/user/zone/:zone_id/dnsrecord/:dns_record_id/edit\",\n    component: DnsrecordEdit,\n    exact:true,\n    title: \"DNS记录修改\",\n  },\n  {\n    path: \"/user/zone/:zone_id/dnsrecord/create\",\n    component: DnsrecordEdit,\n    title: \"DNS记录添加\",\n    exact:true,\n  }\n];","import React, { useState, useContext } from 'react';\nimport { Layout, Menu, Dropdown, Space } from 'antd';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    HomeOutlined,\n    AntCloudOutlined,\n    LinkOutlined,\n    DownOutlined,\n} from '@ant-design/icons';\nimport { clearToken, clearUsername, getUsername } from '@utils/auth'\nimport { FormattedDisplayName } from 'react-intl'\nimport '@css/Frame.scss';\n\nimport FormattedMessage from '@components/FormattedMessage';\nimport { langs, LangContext } from '@/Lang'\n\nconst { Header, Sider, Content } = Layout;\n\nconst { SubMenu } = Menu;\n\nconst menu = [\n    {\n        icon: <HomeOutlined />,\n        title: <FormattedMessage id='Console' />,\n        link: '/user/dashboard',\n    }, {\n        icon: <AntCloudOutlined />,\n        title: <FormattedMessage id='Domain management' />,\n        data: [\n            {\n                title: <FormattedMessage id='Domain list' />,\n                link: '/user/zones',\n            },\n            {\n                title: <FormattedMessage id='Add domain' />,\n                link: '/user/zone/create',\n            }\n        ]\n    }\n\n    , {\n        icon: <LinkOutlined />,\n        title: <FormattedMessage id='Visit Author' />,\n        link: 'https://www.hidove.cn',\n        isUrl: true,\n    }, {\n        icon: <LinkOutlined />,\n        title: <FormattedMessage id='Visit Cloudflare' />,\n        link: 'https://www.cloudflare.com',\n        isUrl: true,\n    }\n]\nconst Frame = (props) => {\n\n    const history = useHistory()\n    const [collapsed, setCollapsed] = useState(false);\n\n    const toggle = () => {\n        setCollapsed(!collapsed)\n    }\n    const logOut = () => {\n        clearToken()\n        clearUsername()\n        history.push('/login')\n    }\n    const { currentLanguage, setCurrentLanguage } = useContext(LangContext)\n    return (\n        <Layout className=\"frame-container\">\n            <Sider\n                className=\"frame-nav\"\n                trigger={null}\n                collapsible\n                collapsed={collapsed}\n                breakpoint=\"md\"\n                collapsedWidth=\"0\"\n                onBreakpoint={(broken) => {\n                    if (broken) {\n                        setCollapsed(true)\n                    }\n                }}\n            >\n                <div className=\"logo\" ><Link to=\"/\">Hidove</Link></div>\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                    {menu.map((v, k) => {\n                        if (Array.isArray(v.data) && v.data.length !== 0) {\n\n                            return (<SubMenu key={k} icon={v.icon} title={v.title}>\n                                {\n                                    v.data.map((vo, ke) => {\n                                        if (vo.isUrl === true) {\n                                            return <Menu.Item key={vo.link}>\n                                                <a target='_blank' href={vo.link} rel=\"noopener noreferrer\">{vo.title}</a>\n                                            </Menu.Item>;\n                                        }\n                                        return <Menu.Item key={vo.link}>\n                                            <Link to={vo.link}>{vo.title}</Link>\n                                        </Menu.Item>;\n                                    })\n                                }\n                            </SubMenu>)\n                        }\n                        if (v.isUrl === true) {\n                            return <Menu.Item key={k} icon={v.icon}>\n                                <a target='_blank' href={v.link} rel=\"noopener noreferrer\">{v.title}</a>\n                            </Menu.Item>;\n                        }\n                        return (<Menu.Item key={k} icon={v.icon}>\n                            <Link to={v.link}>{v.title}</Link>\n                        </Menu.Item>)\n                    })}\n                </Menu>\n            </Sider>\n            <Layout className=\"frame-layout\">\n                <Header className=\"frame-layout-header\" style={{ padding: 0 }}>\n                    {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                        className: 'frame-layout-header-trigger',\n                        onClick: toggle,\n                    })}\n                    <div className=\"frame-layout-header-user-dropdown\" >\n                        <Space size='large'>\n                            <Dropdown overlay={\n                                <Menu>\n                                    {\n                                        Object.keys(langs).map((v) => {\n\n                                            return <Menu.Item onClick={() => setCurrentLanguage(v)} key={v}>\n                                                <FormattedDisplayName type=\"language\" value={v} />\n                                            </Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                <span>\n                                    <FormattedDisplayName type=\"language\" value={currentLanguage} />\n                                    <DownOutlined />\n                                </span>\n                            </Dropdown>\n\n                            <Dropdown overlay={\n                                <Menu>\n                                    <Menu.Item onClick={logOut}><FormattedMessage id='Sign out' /></Menu.Item>\n                                </Menu>}>\n                                <span>{getUsername()} <DownOutlined /></span>\n                            </Dropdown>\n                        </Space>\n                    </div>\n                </Header>\n                <Content\n                    className=\"frame-layout-content\"\n                >\n                    {props.children}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n\n}\n\nexport default Frame;","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { userRoutes } from \"./routes\";\nimport Frame from \"./components/Frame\";\nimport { isLogined } from \"./utils/auth\";\nimport \"./css/App.scss\";\n\nfunction App() {\n  return isLogined() ? (\n\n    <Frame>\n      <Switch>\n        {userRoutes.map(route => {\n          return (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact={route.exact}\n              render={routeProps => {\n                console.log(routeProps)\n                return <route.component {...routeProps} />;\n              }}\n            />\n          );\n        })}\n        <Redirect to={userRoutes[0].path} from=\"/user\" />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Frame>\n\n\n  ) : (\n      <Redirect to=\"/login\" />\n    );\n}\n\nexport default App;\n","import React from \"react\"\nimport ReactDom from \"react-dom\"\n\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport App from './App'\nimport { mainRoutes } from './routes'\nimport Lang from '@/Lang'\n\nReactDom.render(\n  <Lang>\n    <Router>\n      <Switch>\n        <Route path=\"/user\" render={(routeProps) => <App {...routeProps} />} />\n        {mainRoutes.map((route) => {\n          return <Route key={route.path} {...route} />;\n        })}\n        <Redirect to=\"/user\" from=\"/\" />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Router>\n  </Lang>\n  ,\n  document.getElementById('root')\n)"],"sourceRoot":""}