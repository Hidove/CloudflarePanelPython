{"version":3,"sources":["assets/images/ssl-tls.jpg","utils/auth.js","Config.js","utils/requests.js","pages/Login.js","service/auth.js","pages/PageNotFound.js","components/Mybreadcrumb.js","pages/user/Dashboard.js","service/zone.js","components/zone/Operation.js","pages/user/zone/List.js","utils/context.js","components/SwitchCard.js","components/DiyCard.js","components/zone/Overview.js","components/Img.js","utils/time.js","components/zone/SslTls/Hsts.js","components/zone/SslTls.js","components/zone/Firewall.js","components/zone/Cache.js","components/zone/Pagerules/Actions.js","components/zone/Pagerules.js","components/zone/Network.js","components/zone/ScrapeShield.js","pages/user/zone/Control.js","pages/user/zone/Create.js","components/dnsrecord/Operation.js","pages/user/dnsrecord/List.js","pages/user/dnsrecord/Edit.js","routes/index.js","components/Frame.js","App.js","index.js"],"names":["module","exports","getToken","localStorage","getItem","GLOBAL_CONFIG","window","history","createHashHistory","console","log","instance","axios","create","BASE_URL","interceptors","request","use","config","headers","error","Promise","reject","response","data","code","removeItem","push","requests","get","url","params","post","put","patch","del","delete","Login","useHistory","className","title","name","initialValues","remember","onFinish","values","message","loading","content","key","duration","user","formData","FormData","append","username","password","loginApi","then","res","undefined","access_token","setItem","success","setTimeout","msg","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","htmlType","PageNotFound","Mybreadcrumb","props","items","path","style","marginBottom","to","map","item","k","link","Dashboard","dnsRecordUpdate","zone_id","dns_record_id","body","proxied","ttl","changeZoneSetting","doCachePurge","purge_everything","files","Operation","useState","btnStatus","setBtnState","zones","setZones","index","deleteZone","useCallback","zoneDelete","splice","size","onClick","danger","breadcrumb","List","setloading","useEffect","columns","useMemo","dataIndex","render","text","status","color","toUpperCase","zone","id","dataSource","rowKey","record","Context","createContext","SwitchCard","setBtnStatus","active","hoverable","actions","setting","editable","value","handOnClick","finally","background","borderColor","maxWidth","margin","dangerouslySetInnerHTML","__html","children","DiyCard","Option","Overview","useContext","zone_settings","exchangeStatus","changeSecurityLevel","e","info","direction","width","security_level","defaultValue","onChange","v","Img","src","alt","height","moment","locale","zhcn","secondTransform","unit","Math","round","as","getLocalUnit","normalizeUnits","Hsts","visibleState","visible","setvisible","confirmLoading","setConfirmLoading","modalHSTS","setModalHSTS","securityHeaderOnChange","Object","assign","HSTSActions","action","checked","enabled","max_age","Array","include_subdomains","preload","nosniff","onOk","onCancel","description","closable","span","display","justifyContent","alignItems","SslTls","changeSSL","target","ssl","min_tls_version","Group","Button","Img_SSLTLS","padding","modified_on","security_header","strict_transport_security","Firewall","TextArea","Cache","modalText","setModalText","changeCacheLevel","purgeEverything","purgeFilesByUrl","trim","length","split","warning","changeBrowserCacheTtl","divCards","onConfirm","okText","cancelText","rows","cache_level","browser_cache_ttl","Actions","setLoading","btnLoading","setBtnLoading","pagerule_id","pageRules","JSON","parse","stringify","targets","priority","setPageRules","shape","icon","DeleteFilled","Pagerules","constraint","getZonePagerules","Network","ScrapeShield","TabPane","Control","components","setZone_settings","match","getAllZoneSettings","tmp","a","contextValue","Provider","defaultActiveKey","centered","tab","paddingBottom","layout","labelCol","sm","lg","wrapperCol","submitTailLayout","offset","xs","Edit","zone_name","onFinishFailed","errorInfo","label","block","btnState","dnsrecords","setDnsrecords","SafetyCertificateOutlined","dnsRecordDelete","isCreate","formRef","React","createRef","current","setFieldsValue","destroy","delay","spinning","tip","ref","mainRoutes","component","userRoutes","exact","ZoneList","ZoneControl","ZoneCreate","DnsrecordList","DnsrecordEdit","Header","Sider","Content","SubMenu","menu","HomeOutlined","AntCloudOutlined","LinkOutlined","isUrl","Frame","collapsed","setCollapsed","trigger","collapsible","breakpoint","collapsedWidth","onBreakpoint","broken","theme","mode","defaultSelectedKeys","isArray","vo","ke","href","rel","createElement","MenuUnfoldOutlined","MenuFoldOutlined","overlay","clear","DownOutlined","minHeight","App","route","routeProps","from","ReactDom","document","getElementById"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,qC,gYCM9BC,EAAW,WACpB,OAAOC,aAAaC,QAAQ,iBCLjBC,EAFOC,OAAOD,cCQvBE,EAAUC,cAGhBC,QAAQC,IAAIL,GAEZ,IAAMM,EAAWC,IAAMC,OAAO,CAC1B,QAAWR,EAAcS,WAK7BH,EAASI,aAAaC,QAAQC,KAAI,SAACC,GAG/B,OADAA,EAAOC,QAAP,cAAkC,UAAYjB,IACvCgB,KACR,SAAUE,GAET,OAAOC,QAAQC,OAAOF,MAG1BT,EAASI,aAAaQ,SAASN,KAAI,SAACM,GAOhC,OALAd,QAAQC,IAAIa,GACe,MAAvBA,EAASC,KAAKC,OFpBXtB,aAAauB,WAAW,gBEsB3BnB,EAAQoB,KAAK,WAEVJ,EAASC,QACjB,SAAUJ,GAET,OAAOC,QAAQC,OAAOF,MAG1B,IAsBeQ,EAtBE,CACbC,IAAK,SAACC,EAAKC,GACP,OAAOpB,EAASkB,IAAIC,EAAK,CAAE,OAAUC,KAEzCC,KAAM,SAACF,EAAKN,GAAuB,IAAjBO,EAAgB,uDAAP,GACvB,OAAOpB,EAASqB,KAAKF,EAAKN,EAAM,CAAE,OAAUO,KAEhDE,IAAK,SAACH,EAAKN,GAAuB,IAAjBO,EAAgB,uDAAP,GAEtB,OAAOpB,EAASsB,IAAIH,EAAKN,EAAM,CAAE,OAAUO,KAE/CG,MAAO,SAACJ,EAAKN,GAAuB,IAAjBO,EAAgB,uDAAP,GAExB,OAAOpB,EAASuB,MAAMJ,EAAKN,EAAM,CAAE,OAAUO,KAGjDI,IAAK,SAACL,EAAKC,GAEP,OAAOpB,EAASyB,OAAON,EAAK,CAAE,OAAUC,MC8BjCM,G,OAhFD,WACV,IAAM9B,EAAU+B,cAuBhB,OACI,yBAAKC,UAAU,iCACX,uBAAMA,UAAU,OAAOC,MAAM,SAEzB,uBACIC,KAAK,eACLF,UAAU,aACVG,cAAe,CACXC,UAAU,GAEdC,SA/BC,SAAAC,GACbC,EAAA,EAAQC,QAAQ,CAAEC,QAAS,oCAAYC,IAAK,UAAWC,SAAU,ICVjD,SAACC,GACrB,IAAIC,EAAW,IAAIC,SAGnB,OAFAD,EAASE,OAAO,WAAYH,EAAKI,UACjCH,EAASE,OAAO,WAAYH,EAAKK,UAC1B5B,EAASI,KAAK,SAAUoB,GDO3BK,CAASZ,GACJa,MAAK,SAACC,GACH,QAAyBC,IAArBD,EAAIE,aAOJ,OHTKA,EGGIF,EAAIE,aHF7B1D,aAAa2D,QAAQ,eAAgBD,GAUbN,EGPIV,EAAOU,SHQnCpD,aAAa2D,QAAQ,WAAYP,GGPjBT,EAAA,EAAQiB,QAAQ,CAAEf,QAAS,2BAAQC,IAAK,UAAWC,SAAU,SAC7Dc,YAAW,WACPzD,EAAQoB,KAAK,WACd,KHGI,IAAC4B,EAXHM,OGWOD,IAAZD,EAAIM,IACJnB,EAAA,EAAQ1B,MAAM,CAAE4B,QAASW,EAAIM,IAAKhB,IAAK,UAAWC,SAAU,IAE5DJ,EAAA,EAAQ1B,MAAM,CAAE4B,QAAS,2BAAQC,IAAK,UAAWC,SAAU,SAiB3D,sBAAMgB,KAAN,CACIzB,KAAK,WACL0B,MAAO,CACH,CACIC,UAAU,EACVtB,QAAS,iCAIjB,uBAAOuB,OAAQ,kBAACC,EAAA,EAAD,CAAc/B,UAAU,wBAA0BgC,YAAY,cAEjF,sBAAML,KAAN,CACIzB,KAAK,WACL0B,MAAO,CACH,CACIC,UAAU,EACVtB,QAAS,iCAIjB,uBACIuB,OAAQ,kBAACG,EAAA,EAAD,CAAcjC,UAAU,wBAChCkC,KAAK,WACLF,YAAY,cAGpB,sBAAML,KAAN,KACI,sBAAMA,KAAN,CAAWzB,KAAK,WAAWiC,cAAc,UAAUC,SAAO,GACtD,4CAIR,sBAAMT,KAAN,KACI,uBAAQO,KAAK,UAAUG,SAAS,SAASrC,UAAU,qBAAnD,gBEpETsC,MARf,WACI,OACI,kD,kBCuBOC,EAvBM,SAACC,GAClB,IAAIC,EAAQD,EAAME,KAClB,OACI,uBAAYC,MAAO,CAAEC,aAAc,QAC/B,sBAAYjB,KAAZ,CAAiBjB,IAAI,QACjB,kBAAC,IAAD,CAAMmC,GAAG,KAAT,SAGAJ,EAAMK,KAAI,SAACC,EAAMC,GACb,YAAkB3B,IAAd0B,EAAKE,MAAoC,KAAdF,EAAKE,KACzB,sBAAYtB,KAAZ,CAAiBjB,IAAKsC,GACzB,kBAAC,IAAD,CAAMH,GAAIE,EAAKE,MAAOF,EAAK9C,QAG5B,sBAAY0B,KAAZ,CAAiBjB,IAAKsC,GACxBD,EAAK9C,YCNfiD,EAVG,WAEd,OACI,6BACI,kBAAC,EAAD,CAAcR,KAAM,CAAC,CAAEzC,MAAO,gBADlC,qD,0CCkDKkD,EAAkB,SAACC,EAASC,EAAeC,GACpD,OAAOjE,EAASK,IAAI,wBAAyB,CACzC,KAAQ4D,EAAKpD,KACb,KAAQoD,EAAKpB,KACb,QAAWoB,EAAK7C,QAChB,QAAW6C,EAAKC,QAChB,IAAOD,EAAKE,KACb,CACC,QAAWJ,EACX,cAAiBC,KA8CZI,EAAoB,SAACL,EAASlB,EAAMoB,GAC7C,OAAOjE,EAASM,MAAM,0BAA2B,CAC7C,MAAS2D,GACV,CACC,QAAWF,EACX,KAAQlB,KAQHwB,EAAe,SAACN,EAASE,GAClC,OAAOjE,EAASI,KAAK,kBAAmB,CACpC,iBAAoB6D,EAAKK,mBAAoB,EAC7C,MAASL,EAAKM,OAAS,IACxB,CACC,QAAWR,K,8BC3FJS,MA9Bf,SAAmBrB,GAAQ,IAAD,EACWsB,oBAAS,GADpB,mBACfC,EADe,KACJC,EADI,OAEsB,CAACxB,EAAMY,QAAS,CAACZ,EAAMyB,MAAMA,MAAOzB,EAAMyB,MAAMC,UAAW1B,EAAM2B,OAAtGf,EAFe,2BAELa,EAFK,KAEEC,EAFF,KAEaC,EAFb,KAGhBC,EAAaC,uBACf,WACIL,GAAY,GDUE,SAACZ,GACvB,OAAO/D,EAASO,IAAI,kBAAmB,CACnC,QAAWwD,ICXPkB,CAAWlB,GACNjC,MAAK,SAACC,GACH4C,GAAY,GACK,MAAb5C,EAAIlC,MACJ+E,EAAMM,OAAOJ,EAAO,GACpBD,EAAS,YAAID,IACb1D,EAAA,EAAQiB,QAAQ,CAAEf,QAAS,2BAAQC,IAAK,aAExCH,EAAA,EAAQ1B,MAAM,CAAE4B,QAASW,EAAIM,IAAKhB,IAAK,iBAIvD,CAAC0C,EAASa,EAAOC,EAAUC,IAG/B,OACI,uBAAQK,KAAK,UACT,kBAAC,IAAD,CAAM3B,GAAI,sBAAwBO,GAAS,uBAAQlB,KAAK,WAAb,WAC3C,kBAAC,IAAD,CAAMW,GAAI,cAAgBO,EAAU,cAAc,0CAClD,uBAAQlB,KAAK,SAAS1B,QAASuD,EAAWU,QAASL,EAAYM,QAAM,GAArE,YCtBNC,EAAa,CACf,CACI1E,MAAO,UA6DA2E,EA1DF,WAAO,IAAD,EACWd,mBAAS,IADpB,mBACRG,EADQ,KACDC,EADC,OAEeJ,oBAAS,GAFxB,mBAERtD,EAFQ,KAECqE,EAFD,KAIfC,qBAAU,WFbHzF,EAASC,IAAI,cEeX6B,MAAK,SAACC,GACHyD,GAAW,GACM,MAAbzD,EAAIlC,KACJgF,EAAS9C,EAAInC,MAEbsB,EAAA,EAAQ1B,MAAMuC,EAAIM,UAG/B,IACH,IAAMqD,EAAUC,mBAAQ,WACpB,MACI,CACI,CACI/E,MAAO,OACPgF,UAAW,OACXvE,IAAK,OACLwE,OAAQ,SAAAC,GAAI,OAAIA,IAEpB,CACIlF,MAAO,SACPgF,UAAW,SACXvE,IAAK,SACLwE,OAAQ,SAACE,GACL,IAAIC,EAAQ,QAIZ,MAHe,WAAXD,IACAC,EAAQ,WAGR,uBAAKA,MAAOA,EAAO3E,IAAK0E,GACnBA,EAAOE,iBAMxB,CACIrF,MAAO,YACPS,IAAK,YACLwE,OAAQ,SAACC,EAAMI,EAAMpB,GAAb,OACJ,kBAAC,EAAD,CAAWf,QAASmC,EAAKC,GAAIrB,MAAOA,EAAOF,MAAO,CAAEA,QAAOC,mBAK5E,CAACD,IACJ,OACI,6BACI,kBAAC,EAAD,CAAcvB,KAAMiC,IACpB,uBAAOI,QAASA,EAASU,WAAYxB,EAAOyB,OAAQ,SAAAC,GAAM,OAAIA,EAAOH,IAAIhF,QAASA,M,2CClE/EoF,EAFCC,wBAAc,I,mDCsDfC,EApDI,SAACtD,GAChB,IAD0B,EAsBQsB,oBAAS,GAtBjB,mBAsBnBC,EAtBmB,KAsBRgC,EAtBQ,KA8B1B,OACI,uBAAUvF,QAASgC,EAAMhC,QAASwF,QAAM,GACpC,uBACI/F,MAAOuC,EAAMvC,MACbgG,WAAS,EACTC,QAAS,CACL,uBAASjG,MAnCP,WACd,YAAsBoB,IAAlBmB,EAAM2D,UAAoD,IAA3B3D,EAAM2D,QAAQC,SACd,OAAxB5D,EAAM2D,QAAQE,MAAiB,2BAAS,2BAC5C,4BAgCgChB,MAAM,QAC7B,uBAAQZ,QAbR,WAChBsB,GAAa,GACbvD,EAAM8D,cACDC,SAAQ,kBAAMR,GAAa,OAUcvB,KAAK,QAC/BhE,QAASuD,EACTpB,WA1BEtB,IAAlBmB,EAAM2D,UAAoD,IAA3B3D,EAAM2D,QAAQC,UAA8C,OAAxB5D,EAAM2D,QAAQE,MAC1E,GAEJ,CACHhB,MAAO,UACPmB,WAAY,UACZC,YAAa,iBAZKpF,IAAlBmB,EAAM2D,UAAoD,IAA3B3D,EAAM2D,QAAQC,SACd,OAAxB5D,EAAM2D,QAAQE,MAAiB,SAAW,WAE9C,+BAiCC,yBAAK1D,MAAO,CAAE+D,SAAU,QAASC,OAAQ,QAAUC,wBAAyB,CACxEC,OAAQrE,EAAMsE,eCzBnBC,EAnBC,SAACvE,GAEb,OACI,uBAAUhC,QAASgC,EAAMhC,QAASwF,QAAM,GACpC,uBACI/F,MAAOuC,EAAMvC,MACbgG,WAAS,EACTC,QAAS,CACL1D,EAAM0D,UAGV,yBAAKvD,MAAO,CAAE+D,SAAU,QAASC,OAAQ,QAAUC,wBAAyB,CACxEC,OAAQrE,EAAMsE,eCR1BE,E,IAAAA,OAyEOC,MAvEf,WAAqB,IAAD,EAG4CC,qBAAWtB,GAA/DuB,EAHQ,EAGRA,cAAe/D,EAHP,EAGOA,QAASgE,EAHhB,EAGgBA,eAAgB5G,EAHhC,EAGgCA,QAG1C6G,EAAsBhD,uBACxB,SAACiD,GACG7D,EAAkBL,EAAS,iBAAkBkE,GACxCnG,MAAK,SAACC,GACc,MAAbA,EAAIlC,KACJqB,EAAA,EAAQiB,QAAQ,4BAEhBjB,EAAA,EAAQgH,KAAK,4BAAUnG,EAAIM,UAI3C,CAAC0B,IAGC8C,EAAU,CACZ,CACI,MAAS,2BACT,QAAW,mBACX,YAAekB,EAAe,oBAC9B,QAAW,uKAGnB,OACI,6BACI,wDACA,uBAAOI,UAAU,WACb7E,MAAO,CAAE8E,MAAO,SAEhB,kBAAC,EAAD,CAASjH,QAASA,EAASP,MAAM,4BAC7BkG,QAASgB,EAAcO,eACvBxB,QAAS,CACL,uBAAQxF,IAAI,iBACRiH,aAAc,WACV,OAAOR,EAAcO,eAAerB,OAExC1D,MAAO,CAAE8E,MAAO,QAASf,SAAU,OAASkB,SAAUP,GACtD,kBAACL,EAAD,CAAQX,MAAM,OAAd,sCACA,kBAACW,EAAD,CAAQX,MAAM,mBAAd,0DACA,kBAACW,EAAD,CAAQX,MAAM,OAAd,UACA,kBAACW,EAAD,CAAQX,MAAM,UAAd,UACA,kBAACW,EAAD,CAAQX,MAAM,QAAd,UACA,kBAACW,EAAD,CAAQX,MAAM,gBAAd,mBAbZ,gHAoBIH,EAAQpD,KAAI,SAAC+E,GACT,OACI,kBAAC,EAAD,CAAYrH,QAASA,EAASP,MAAO4H,EAAE5H,MACnCkG,QAASgB,EAAcU,EAAE1B,SACzBG,YAAauB,EAAEvB,YACf5F,IAAKmH,EAAE1B,SAEN0B,EAAEpH,e,iBC/DpBqH,GANH,SAACtF,GACT,OACI,yBAAKuF,IAAKvF,EAAMuF,IAAKC,IAAI,GAAGrF,MAAO,CAAE8E,MAAM,OAAQQ,OAAO,W,2JCAlEC,KAAOC,OAAO,QAASC,MAEvB,IAgBaC,GAAkB,SAACR,GAC5B,IAAIS,EAAO,SACX,QAAQ,GAEJ,KAAKT,EAAI,GACLS,EAAO,IACP,MAEJ,KAAKT,EAAI,KACLS,EAAO,IACP,MAEJ,KAAKT,EAAI,MACLS,EAAO,IACP,MAEJ,KAAKT,EAAI,OACLS,EAAO,IACP,MAEJ,KAAKT,EAAI,OACLS,EAAO,IACP,MAGJ,KAAKT,EAAI,QACLS,EAAO,IACP,MACJ,QAEIA,EAAO,IAIf,OADaC,KAAKC,MAAMN,KAAOvH,SAASkH,EAAG,KAAKY,GAAGH,IAAS,IAjD3C,SAACT,GAWlB,MAVc,CACV,KAAQ,SACR,MAAS,SACT,KAAQ,SACR,IAAO,SACP,KAAQ,eACR,OAAU,eACV,OAAU,SACV,YAAe,gBAENA,IAAM,eAsC+Ca,CAAaR,KAAOS,eAAeL,KCjDjGtB,G,IAAAA,OAmLO4B,OAjLf,SAAcpG,GAAQ,IAAD,EAEwB,CAACA,EAAMqG,aAAcrG,EAAMY,SAFnD,sBAET0F,EAFS,KAEAC,EAFA,KAEa3F,EAFb,OAG2BU,oBAAS,GAHpC,mBAGVkF,EAHU,KAGMC,EAHN,OAIiBnF,mBAAStB,EAAM0G,WAJhC,mBAIVA,EAJU,KAICC,EAJD,KAKjBrE,qBAAU,WACNiE,EAAWD,KACZ,CAACA,EAASC,IACb,IAAMK,EAAyB,SAAC1I,EAAK2F,GACjC6C,EAAUxI,GAAO2F,EACjB8C,EAAaE,OAAOC,OAAO,GAAIJ,KAc7BK,EAAc,CAChB,CACI9I,QACI,6BACI,iFACA,mGAGR+I,OACI,wBAAQC,QAASP,EAAUQ,QACvB9B,SAAU,SAACN,GAAD,OAAO8B,EAAuB,UAAW9B,OAG/D,CACI7G,QACI,6BACI,kFACA,sIAGR+I,OACI,uBAAQ7B,aAAcuB,EAAUS,QAAShH,MAAO,CAAE8E,MAAO,SAEjD,YAAImC,MAAM,KAAK9G,KAAI,SAAC+E,EAAG7E,GACnB,OAAO,OAAUA,KAClBF,KAAI,SAAC+E,GACJ,OAAU,IAANA,EACQ,kBAAC,GAAD,CAAQxB,MAAOwB,EAAGnH,IAAKmH,GAAvB,6BAGR,kBAAC,GAAD,CAAQxB,MAAOwB,EAAGnH,IAAKmH,GAAIQ,GAAgBR,SAOnE,CACIpH,QACI,6BACI,8GACA,8HAEJ,6BACQ,sDAHJ,2JAOR+I,OAEI,wBAAQC,QAASP,EAAUW,mBACvBjC,SAAU,SAACN,GAAD,OAAO8B,EAAuB,qBAAsB9B,OAG1E,CACI7G,QACI,6BACI,sDACA,4GAEI,6BACA,sDAHJ,oIAOR+I,OAEI,wBAAQC,QAASP,EAAUY,QACvBlC,SAAU,SAACN,GAAD,OAAO8B,EAAuB,UAAW9B,OAG/D,CACI7G,QACI,6BACI,kEACA,mRAKR+I,OAEI,wBAAQC,QAASP,EAAUa,QACvBnC,SAAU,SAACN,GAAD,OAAO8B,EAAuB,UAAW9B,QAKnE,OACI,6BACI,wBACIrH,MAAM,mDACN6I,QAASA,EACTkB,KAzGiB,WACzBf,GAAkB,GAClBxF,EAAkBL,EAAS,kBAAmB,CAC1C,0BAA6B8F,IAC9B/H,MAAK,SAACC,GACY,MAAbA,EAAIlC,KACJqB,EAAA,EAAQiB,QAAQ,4BAEhBjB,EAAA,EAAQgH,KAAK,4BAAUnG,EAAIM,QAEhC6E,SAAQ,kBAAM0C,GAAkB,OAgG3BD,eAAgBA,EAChBiB,SAAU,kBAAMlB,GAAW,IAC3BrI,IAAI,SAEJ,wBACIH,QAAQ,uFACR2J,YACI,6BACI,sTACA,4GACA,4BACI,uMAGA,gXAGA,uSAGA,2hBAIJ,ikCAERhI,KAAK,OACLiI,UAAQ,IAEZ,6BACA,wBACI5J,QAAQ,qBACR2J,YAAa,qOACbhI,KAAK,YAET,6BAEIqH,EAAYzG,KAAI,SAAC+E,EAAG1D,GAChB,OACI,wBAAKzD,IAAKyD,GACN,wBAAKiG,KAAM,IACNvC,EAAEpH,SAEP,wBAAK2J,KAAM,EAAGzH,MAAO,CACjB0H,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEX1C,EAAE2B,eCpK/BxC,G,IAAAA,OAwIOwD,OAtIf,WAAmB,IAAD,EAE8CtD,qBAAWtB,GAA/DuB,EAFM,EAENA,cAAe/D,EAFT,EAESA,QAASgE,EAFlB,EAEkBA,eAAgB5G,EAFlC,EAEkCA,QAFlC,EAKgBsD,oBAAS,GALzB,mBAKPgF,EALO,KAKEC,EALF,KAOR0B,EAAYpG,uBACd,SAACiD,GACG7D,EAAkBL,EAAS,MAAOkE,EAAEoD,OAAOrE,OACtClF,MAAK,SAACC,GACc,MAAbA,EAAIlC,KACJqB,EAAA,EAAQiB,QAAQ,4BAEhBjB,EAAA,EAAQgH,KAAK,4BAAUnG,EAAIM,UAK3C,CAAC0B,IAaC8C,EAAU,CACZ,CACI,MAAS,iCACT,QAAW,mBACX,YAAekB,EAAe,oBAC9B,QAAW,4NAEf,CACI,MAAS,2BACT,QAAW,2BACX,YAAeA,EAAe,4BAC9B,QAAW,2YAEf,CACI,MAAS,kCACT,QAAW,2BACX,YAAeA,EAAe,4BAC9B,QAAW,wSAGnB,OACI,uBAAOI,UAAU,WACb7E,MAAO,CAAE8E,MAAO,SAChB,kBAAC,EAAD,CAASjH,QAASA,EAASP,MAAK,8DAAsBkH,EAAcwD,IAAItE,OACpEF,QAASgB,EAAcyD,gBACvB1E,QACI,sBAAO2E,MAAP,CAAalD,aAAcR,EAAcwD,IAAItE,MAAOuB,SAAU6C,EAAW/J,IAAI,OACzE,uBAAST,MAAM,iCAAQoF,MAAM,QACzB,sBAAOyF,OAAP,CAAczE,MAAM,OAApB,+CAEJ,uBAASpG,MAAM,iFAA0BoF,MAAM,QAC3C,sBAAOyF,OAAP,CAAczE,MAAM,YAApB,iBAEJ,uBAASpG,MAAM,+GAAqBoF,MAAM,QACtC,sBAAOyF,OAAP,CAAczE,MAAM,QAApB,iBAEJ,uBAASpG,MAAM,uKAAoDoF,MAAM,QACrE,sBAAOyF,OAAP,CAAczE,MAAM,UAApB,2CAKf,kBAAC,GAAD,CAAK0B,IAAKgD,OACP,yBAAKpI,MAAO,CAAEqI,QAAS,UACnB,gGAAoB7D,EAAcwD,IAAIM,eAI9C,kBAAC,EAAD,CAASzK,QAASA,EAASP,MAAM,gCAC7BkG,QAASgB,EAAcyD,gBACvB1E,QAAS,CACL,uBAAQxF,IAAI,kBAAkBiH,aAAcR,EAAcyD,gBAAgBvE,MAAO1D,MAAO,CAAE8E,MAAO,QAASf,SAAU,OAASkB,SA9D3G,SAACN,GAC/B7D,EAAkBL,EAAS,kBAAmBkE,GACzCnG,MAAK,SAACC,GACc,MAAbA,EAAIlC,KACJqB,EAAA,EAAQiB,QAAQ,4BAEhBjB,EAAA,EAAQgH,KAAK,4BAAUnG,EAAIM,UAyDvB,kBAAC,GAAD,CAAQ2E,MAAM,OAAd,OACA,kBAAC,GAAD,CAAQA,MAAM,OAAd,OACA,kBAAC,GAAD,CAAQA,MAAM,OAAd,OACA,kBAAC,GAAD,CAAQA,MAAM,OAAd,UAPZ,4KAaA,kBAAC,EAAD,CAAS7F,QAASA,EAASP,MAAM,mDAC7BkG,QAASgB,EAAc+D,gBACvBhF,QAAS,CAEL,uBAASjG,MAAM,2BAAOoF,MAAM,OAAO3E,IAAI,mBACnC,uBAAQ+D,QAAS,kBAAMsE,GAAW,MAEoB,IAA1C5B,EAAc+D,gBAAgBxB,QAEvB,+DAGA,iEAMvB,kBAAC,GAAD,CAAMhJ,IAAI,OAAOmI,aAAc,CAACC,EAASC,GAAa3F,QAASA,EAAS8F,UAAW/B,EAAc+D,gBAAgB7E,MAAM8E,8BAlB/H,6FAyBIjF,EAAQpD,KAAI,SAAC+E,GACT,OACI,kBAAC,EAAD,CAAYrH,QAASA,EAASP,MAAO4H,EAAE5H,MACnCkG,QAASgB,EAAcU,EAAE1B,SACzBG,YAAauB,EAAEvB,YACf5F,IAAKmH,EAAE1B,SAEN0B,EAAEpH,cCpHhB2K,OAhBf,WAAqB,IAET5K,EAAY0G,qBAAWtB,GAAvBpF,QAER,OACI,6BACI,kBAAC,EAAD,CAAYP,MAAM,iCAAQO,QAASA,GAC/B,8DADJ,yV,mBCAJwG,G,IAAAA,OACAqE,G,IAAAA,SAmOOC,OAjOf,WAAkB,IAAD,EAE+CpE,qBAAWtB,GAA/DuB,EAFK,EAELA,cAAe/D,EAFV,EAEUA,QAASgE,EAFnB,EAEmBA,eAAgB5G,EAFnC,EAEmCA,QAFnC,EAIiBsD,oBAAS,GAJ1B,mBAINgF,EAJM,KAIGC,EAJH,OAK+BjF,oBAAS,GALxC,mBAKNkF,EALM,KAKUC,EALV,OAMqBnF,mBAAS,IAN9B,mBAMNyH,EANM,KAMKC,EANL,KAQPC,EAAmBpH,uBACrB,SAACiD,GACG7D,EAAkBL,EAAS,cAAekE,EAAEoD,OAAOrE,OAC9ClF,MAAK,SAACC,GACc,MAAbA,EAAIlC,KACJqB,EAAA,EAAQiB,QAAQ,4BAEhBjB,EAAA,EAAQgH,KAAK,4BAAUnG,EAAIM,UAI3C,CAAC0B,IAGCsI,EAAkBrH,uBACpB,WAIIX,EAAaN,EAHA,CACT,kBAAoB,IAGnBjC,MAAK,SAACC,GACc,MAAbA,EAAIlC,KACJqB,EAAA,EAAQiB,QAAQ,4BAEhBjB,EAAA,EAAQgH,KAAK,4BAAUnG,EAAIM,UAI3C,CAAC0B,IAECuI,EAAkBtH,uBAAY,WAGhC,GAFA4E,GAAkB,GAClBuC,EAAaD,EAAUK,QACE,IAArBL,EAAUM,OAAd,CAIA,IAAM5M,EAAO,CACT,MAASsM,EAAUO,MAAM,OAE7BpI,EAAaN,EAASnE,GACjBkC,MAAK,SAACC,GACc,MAAbA,EAAIlC,KACJqB,EAAA,EAAQiB,QAAQ,4BAEhBjB,EAAA,EAAQgH,KAAK,4BAAUnG,EAAIM,QAEhC6E,SAAQ,WACP0C,GAAkB,WAdtB1I,EAAA,EAAQwL,QAAQ,iCAiBpB,CAAC3I,EAASmI,IAERS,EAAwB3H,uBAC1B,SAACiD,GACGpJ,QAAQC,IAAImJ,GACZ7D,EAAkBL,EAAS,oBAAqBkE,GAC3CnG,MAAK,SAACC,GACc,MAAbA,EAAIlC,KACJqB,EAAA,EAAQiB,QAAQ,4BAEhBjB,EAAA,EAAQgH,KAAK,4BAAUnG,EAAIM,UAI3C,CAAC0B,IAGC8C,EAAU,CACZ,CACI,MAAS,sBACT,QAAW,gBACX,YAAekB,EAAe,iBAC9B,QAAW,qNAEf,CACI,MAAS,iCACT,QAAW,mBACX,YAAeA,EAAe,oBAC9B,QAAW,qeAIb6E,EAAW,CAEb,CACI,MAAS,2BACT,QAAW,cACX,QAAW,CACP,uBAAShM,MAAM,iCAAQoF,MAAM,OAAO3E,IAAI,sBACpC,uBAAQ+D,QAAS,kBAAMsE,GAAW,KAAlC,mCAEJ,uBAAS9I,MAAM,yDAAYoF,MAAM,OAAO3E,IAAI,oBACxC,wBACIT,MAAM,2EACNiM,UAAWR,EACXS,OAAO,eACPC,WAAW,gBAEX,yDAGR,wBACInM,MAAM,iCACN6I,QAASA,EACTkB,KAAM2B,EACN3C,eAAgBA,EAChBiB,SAAU,kBAAMlB,GAAW,IAC3BrI,IAAI,SAEJ,wBACIH,QAAQ,uFACR2J,YAAa,6BACT,2RAEA,sDACA,4BACI,qDACA,+DAGRhI,KAAK,OACLiI,UAAQ,IAEZ,6BACA,kBAACkB,GAAD,CAAUgB,KAAM,EAAGhG,MAAOkF,EAAW3D,SAAU,SAACN,GAC5CkE,EAAalE,EAAEoD,OAAOrE,YAIlC,QAAW,0lBAEf,CACI,MAAS,2BACT,QAAW,cACX,QACI,CACI,sBAAOwE,MAAP,CAAalD,aAAcR,EAAcmF,YAAYjG,MAAO3F,IAAI,cAAckH,SAAU6D,GACpF,uBAASxL,MAAM,6CAAUoF,MAAM,QAC3B,sBAAOyF,OAAP,CAAczE,MAAM,SAApB,+CAEJ,uBAASpG,MAAM,6CAAUoF,MAAM,QAC3B,sBAAOyF,OAAP,CAAczE,MAAM,cAApB,+CAEJ,uBAASpG,MAAM,eAAKoF,MAAM,QACtB,sBAAOyF,OAAP,CAAczE,MAAM,cAApB,mBAIhB,QAAW,wOAEf,CACI,MAAS,qCACT,QAAW,oBACX,QACI,CACI,uBACIsB,aAAcR,EAAcoF,kBAAkBlG,MAC9C1D,MAAO,CAAE8E,MAAO,QAASf,SAAU,OAAShG,IAAI,oBAChDkH,SAAUoE,GAIN,CAAC,EAAG,GAAI,GAAI,IAAK,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,KAAO,MAAO,MAAO,MAAO,KAAO,MAAO,OAAQ,OAAQ,OAAQ,MAAQ,OAAQ,QAAS,QAAS,QAAS,QAAS,SAAU,SAClLlJ,KAAI,SAAC+E,GACF,OAAU,IAANA,EAEI,kBAAC,GAAD,CAAQxB,MAAOwB,EAAGnH,IAAKmH,GAAvB,wCAIJ,kBAAC,GAAD,CAAQxB,MAAOwB,EAAGnH,IAAKmH,GAAIQ,GAAgBR,SAOvE,QAAW,mUAKnB,OACI,uBAAOL,UAAU,WACb7E,MAAO,CAAE8E,MAAO,SAEZwE,EAASnJ,KAAI,SAAC+E,EAAG1D,GACb,OACI,kBAAC,EAAD,CACI3D,QAASA,EAASP,MAAO4H,EAAE5H,MAC3BkG,QAASgB,EAAcU,EAAE1B,SACzBzF,IAAKmH,EAAE1B,QACPD,QAAS2B,EAAE3B,SAEV2B,EAAEpH,YAMfyF,EAAQpD,KAAI,SAAC+E,EAAG1D,GACZ,OACI,kBAAC,EAAD,CAAY3D,QAASA,EAASP,MAAO4H,EAAE5H,MACnCkG,QAASgB,EAAcU,EAAE1B,SACzBG,YAAauB,EAAEvB,YACf5F,IAAKmH,EAAE1B,SAEN0B,EAAEpH,c,UC1KhB+L,OArDf,SAAiBhK,GAAQ,IAAD,EACUsB,oBAAS,GADnB,mBACbtD,EADa,KACJiM,EADI,OAEgB3I,oBAAS,GAFzB,mBAEb4I,EAFa,KAEDC,EAFC,KAmCpB,OACI,2BACI,wBAAQnM,QAASA,EAASiJ,QAAiC,WAAxBjH,EAAMmD,OAAOP,OAAqBwC,SAlCxD,SAACC,GAClB4E,GAAW,GACX,IbgL6BrJ,EAASwJ,EAAatJ,EahL/CuJ,EAAYC,KAAKC,MAAMD,KAAKE,UAAUxK,EAAMqK,UAAUA,YAC1DA,EAAUrK,EAAM2B,OAAOiB,QAAgB,IAANyC,EAAa,SAAW,Yb+K5BzE,Ea9KRZ,EAAMY,Qb8KWwJ,Ea9KFC,EAAUrK,EAAM2B,OAAOqB,Gb8KRlC,Ea9KYuJ,EAAUrK,EAAM2B,Ob+K5E9E,EAASK,IAAI,2BAA4B,CAC5C,QAAW4D,EAAK2J,SAAW,GAC3B,QAAW3J,EAAK4C,SAAW,GAC3B,SAAY5C,EAAK4J,UAAY,EAC7B,OAAU5J,EAAK8B,QAAU,UAC1B,CACC,QAAWhC,EACX,YAAewJ,KarLVzL,MAAK,SAACC,GACc,MAAbA,EAAIlC,MACJsD,EAAMqK,UAAUM,aAAaN,GAC7BtM,EAAA,EAAQiB,QAAQ,6BAEhBjB,EAAA,EAAQgH,KAAK,4BAAUnG,EAAIM,QAGlC6E,SAAQ,kBAAMkG,GAAW,SAsB1B,kBAAC,IAAD,CAAM5J,GAAI,sBAAwBL,EAAMY,QAAU,aAAeZ,EAAMmD,OAAOH,IAC1E,uBAAQtD,KAAK,UAAb,WAEJ,wBACIjC,MAAM,6CACNiM,UAxBS,SAACrE,GAClB8E,GAAc,GACd,IbwH6BvJ,EAASwJ,EaxHlCC,EAAS,YAAOrK,EAAMqK,UAAUA,YbwHPzJ,EavHRZ,EAAMY,QbuHWwJ,EavHFC,EAAUrK,EAAM2B,OAAOqB,GbwHxDnG,EAASO,IAAI,2BAA4B,CAC5C,QAAWwD,EACX,YAAewJ,KazHVzL,MAAK,SAACC,GACc,MAAbA,EAAIlC,MACJ2N,EAAUtI,OAAO/B,EAAM2B,MAAO,GAC9B3B,EAAMqK,UAAUM,aAAaN,GAC7BtM,EAAA,EAAQiB,QAAQ,6BAEhBjB,EAAA,EAAQgH,KAAKnG,EAAIM,QAGxB6E,SAAQ,kBAAMoG,GAAc,OAYzBR,OAAO,eACPC,WAAW,gBAEX,uBAAQ5L,QAASkM,EAAYxK,KAAK,SAASkL,MAAM,SAASC,KAAM,kBAACC,GAAA,EAAD,MAAkB5I,QAAM,OCyBzF6I,GAtEG,SAAC/K,GAAW,IAGlBY,EAAY8D,qBAAWtB,GAAvBxC,QAHiB,EAISU,mBAAS,IAJlB,mBAIlB+I,EAJkB,KAIPM,EAJO,OAKKrJ,oBAAS,GALd,mBAKlBtD,EALkB,KAKTiM,EALS,KAOnB1H,EAAU,CACZ,CACI9E,MAAO,mBACPgF,UAAW,QACXvE,IAAK,QACLwE,OAAQ,SAACC,EAAMQ,GACX,OACI,6BACI,4BAEQA,EAAOsH,QAAQnK,KAAI,SAAC+E,EAAG1D,GAAJ,OAAc,0BAAMzD,IAAKyD,EAAOkB,MAAM,QAAQwC,EAAE2F,WAAWnH,WAGtF,6BACA,2BACIV,EAAOO,QAAQpD,KAAI,SAAC+E,EAAG1D,GAAJ,OAAc,uBAAKzD,IAAKyD,EAAOkB,MAAM,QAAQwC,EAAErC,GAAjC,IAAsCqC,EAAExB,cAM7F,CACIpG,MAAO,SACPS,IAAK,SACLwE,OAAQ,SAACC,EAAMQ,EAAOxB,GAClB,OACI,kBAAC,GAAD,CAASwB,OAAQA,EAAQvC,QAASA,EAASyJ,UAAW,CAAEA,YAAWM,gBAAgBhJ,MAAOA,OAkB1G,OAZAW,qBAAU,YdyFkB,SAAC1B,GAC7B,OAAO/D,EAASC,IAAI,sBAAuB,CACvC,QAAW8D,Kc1FXqK,CAAiBrK,GACZjC,MAAK,SAACC,GACHlD,QAAQC,IAAIiD,GACK,MAAbA,EAAIlC,KACJiO,EAAa/L,EAAInC,MAEjBsB,EAAA,EAAQ1B,MAAM,uDAEnB0H,SAAQ,kBAAMkG,GAAW,QACjC,CAACrJ,IAIA,uBAAOoE,UAAU,WACb7E,MAAO,CAAE8E,MAAO,SAEhB,kBAAC,EAAD,CAAYjH,QAASA,EAASP,MAAM,4BAApC,ojBAIA,uBACIO,QAASA,EACTuE,QAASA,EACTU,WAAYoH,EACZnH,OAAQ,SAAAC,GAAM,OAAIA,EAAOH,QCH1BkI,OAjEf,WAAoB,IAAD,EAEoCxG,qBAAWtB,GAAtDuB,EAFO,EAEPA,cAAeC,EAFR,EAEQA,eAAgB5G,EAFxB,EAEwBA,QAGjC0F,EAAU,CACZ,CACI,MAAS,SACT,QAAW,QACX,YAAekB,EAAe,SAC9B,QAAW,4DAEf,CACI,MAAS,sCACT,QAAW,QACX,YAAeA,EAAe,SAC9B,QAAW,uJAEf,CACI,MAAS,iCACT,QAAW,OACX,YAAeA,EAAe,QAC9B,QAAW,sHAEf,CACI,MAAS,YACT,QAAW,aACX,YAAeA,EAAe,cAC9B,QAAW,4MAEf,CACI,MAAS,2BACT,QAAW,sBACX,YAAeA,EAAe,uBAC9B,QAAW,yVAEf,CACI,MAAS,8BACT,QAAW,iBACX,YAAeA,EAAe,kBAC9B,QAAW,wUAInB,OACI,uBAAOI,UAAU,WACb7E,MAAO,CAAE8E,MAAO,SAGZvB,EAAQpD,KAAI,SAAC+E,GACT,OACI,kBAAC,EAAD,CAAYrH,QAASA,EAASP,MAAO4H,EAAE5H,MACnCkG,QAASgB,EAAcU,EAAE1B,SACzBG,YAAauB,EAAEvB,YACf5F,IAAKmH,EAAE1B,SAEN0B,EAAEpH,cCThBkN,OA9Cf,WAAyB,IAAD,EAE+BzG,qBAAWtB,GAAtDuB,EAFY,EAEZA,cAAeC,EAFH,EAEGA,eAAgB5G,EAFnB,EAEmBA,QAGjC0F,EAAU,CACZ,CACI,MAAS,+DACT,QAAW,oBACX,YAAekB,EAAe,qBAC9B,QAAW,4ZAEf,CACI,MAAS,uCACT,QAAW,sBACX,YAAeA,EAAe,uBAC9B,QAAW,4HAEf,CACI,MAAS,uBACT,QAAW,qBACX,YAAeA,EAAe,sBAC9B,QAAW,mFAGnB,OACI,uBAAOI,UAAU,WACb7E,MAAO,CAAE8E,MAAO,SAGZvB,EAAQpD,KAAI,SAAC+E,GACT,OACI,kBAAC,EAAD,CAAYrH,QAASA,EAASP,MAAO4H,EAAE5H,MACnCkG,QAASgB,EAAcU,EAAE1B,SACzBG,YAAauB,EAAEvB,YACf5F,IAAKmH,EAAE1B,SAEN0B,EAAEpH,cC3BvBmN,G,IAAAA,QAEFjJ,GAAa,CACf,CACI1E,MAAO,QACPgD,KAAM,eAEV,CACIhD,MAAO,YA2GA4N,GAvGC,SAACrL,GACb,IAAMsL,EAAa,CACf,CACI,MAAS,eACT,IAAO,WACP,QAAW,kBAAC,EAAD,OAEf,CACI,MAAS,UACT,IAAO,SACP,QAAW,kBAAC,GAAD,OAEf,CACI,MAAS,qBACT,IAAO,WACP,QAAW,kBAAC,GAAD,OAEf,CACI,MAAS,eACT,IAAO,QACP,QAAW,kBAAC,GAAD,OAEf,CACI,MAAS,2BACT,IAAO,YACP,QAAW,kBAAC,GAAD,OAEf,CACI,MAAS,eACT,IAAO,UACP,QAAW,kBAAC,GAAD,OAEf,CACI,MAAS,2BACT,IAAO,eACP,QAAW,kBAAC,GAAD,QAnCI,EAuCmBhK,mBAAS,IAvC5B,mBAuChBqD,EAvCgB,KAuCD4G,EAvCC,OAwCOjK,oBAAS,GAxChB,mBAwChBtD,EAxCgB,KAwCPqE,EAxCO,KA0CjBzB,EAAUZ,EAAMwL,MAAMxO,OAAO4D,QAGnC0B,qBAAU,YjB2BoB,SAAC1B,GAC/B,OAAO/D,EAASC,IAAI,yBAA0B,CAC1C,QAAW8D,KiB5BX6K,CAAmB7K,GACdjC,MAAK,SAACC,GACH,GAAiB,MAAbA,EAAIlC,KAAc,CAClB,IAAIgP,EAAM,GACV9M,EAAInC,KAAK6D,KAAI,SAAC+E,GACV,OAAOqG,EAAIrG,EAAErC,IAAMqC,KAEvBkG,EAAiBG,GACjBrJ,GAAW,QAGXtE,EAAA,EAAQ1B,MAAMuC,EAAIM,UAG/B,CAAC0B,IAGJ,IAAMgE,EAAiB/C,uBACnB,SAACmB,GACG,6BAAO,4BAAA2I,EAAA,6DACC9H,EAAqC,OAA5Bc,EAAc3B,GAAIa,MAAkB,MAAQ,KADtD,SAEG5C,EAAkBL,EAASoC,EAAIa,GAChClF,MAAK,SAACC,GACc,MAAbA,EAAIlC,MACJqB,EAAA,EAAQiB,QAAQ,4BAChB2F,EAAc3B,GAAIa,MAASA,EAC3B0H,EAAiB1E,OAAOC,OAAO,GAAInC,KAEnC5G,EAAA,EAAQgH,KAAKnG,EAAIM,QAT1B,6CAcX,CAACyF,EAAe/D,IAEdgL,EAAe,CACjB,QAAWhL,EACX,cAAiB+D,EACjBC,iBACA5G,WAGJ,OACI,kBAAC,EAAQ6N,SAAT,CAAkBhI,MAAO+H,GACrB,kBAAC,EAAD,CAAc1L,KAAMiC,KACpB,uBAAM2J,iBAAiB,WAAWC,UAAQ,GACrCT,EAAWhL,KAAI,SAAC+E,GACb,OAAO,kBAAC+F,GAAD,CAASY,IAAK3G,EAAE5H,MAAOS,IAAKmH,EAAEnH,KACjC,yBAAKiC,MAAO,CAAE8L,cAAe,SACxB5G,EAAEpH,gBCrHzBiO,GAAS,CACXC,SAAU,CACNvE,KAAM,EACNwE,GAAI,CACAxE,KAAM,GAEVyE,GAAI,CACAzE,KAAM,IAGd0E,WAAY,CACR1E,KAAM,GACNwE,GAAI,CACAxE,KAAM,IAEVyE,GAAI,CACAzE,KAAM,MAIZ2E,GAAmB,CACrBD,WAAY,CACRE,OAAQ,EACR5E,KAAM,GACN6E,GAAI,CACAD,OAAQ,EACR5E,KAAM,IAEVwE,GAAI,CACAI,OAAQ,EACR5E,KAAM,IAEVyE,GAAI,CACAG,OAAQ,EACR5E,KAAM,MAIZzF,GAAa,CACf,CACI1E,MAAO,QACPgD,KAAM,eAEV,CACIhD,MAAO,WAqDAiP,GAjDF,SAAC1M,GAkBV,OACI,6BACI,kBAAC,EAAD,CAAcE,KAAMiC,KACpB,uCACQ+J,GADR,CAEIxO,KAAK,QACLG,SAvBK,SAAAC,GlBzCK,IAAC6O,EkB0CnB5O,EAAA,EAAQC,QAAQ,CAAEC,QAAS,aAAcC,IAAK,UAAWC,SAAU,KlB1ChDwO,EkB2CR7O,EAAO6O,UlB1Cf9P,EAASI,KAAK,kBAAmB,CACpC,UAAa0P,KkB0CRhO,MAAK,SAACC,GACc,MAAbA,EAAIlC,MACJqB,EAAA,EAAQiB,QAAQ,CAAEf,QAAS,uCAAUC,IAAK,YAC1C8B,EAAMxE,QAAQoB,KAAK,gBAEnBmB,EAAA,EAAQ1B,MAAM,CAAE4B,QAAS,uCAAUC,IAAK,gBAgB5C0O,eAXW,SAAAC,GACnBnR,QAAQC,IAAI,UAAWkR,MAYf,sBAAM1N,KAAN,CACI2N,MAAM,YACNpP,KAAK,YACL0B,MAAO,CACH,CACIC,UAAU,EACVtB,QAAS,kCAIjB,6BAGJ,sBAAMoB,KAAUoN,GACZ,uBAAQ7M,KAAK,UAAUG,SAAS,SAASkN,OAAK,GAA9C,c,sCC/BL1L,OAtDf,SAAmBrB,GAAQ,IAAD,EAEUsB,oBAAS,GAFnB,mBAEf0L,EAFe,KAELxL,EAFK,OAQlB,CAACxB,EAAMY,QAASZ,EAAMmD,OAAQnD,EAAM2B,MAAO,CAAC3B,EAAMiN,WAAWA,WAAYjN,EAAMiN,WAAWC,gBAH1FtM,EALkB,KAKTuC,EALS,KAKDxB,EALC,2BAMdsL,EANc,KAMFC,EANE,KAUtB,OACI,uBAAOlL,KAAK,UACR,uBAAQtC,KAAK,SAASlC,UAAW,SAA6B,IAAnB2F,EAAOpC,QAAmB,SAAW,IAAK8J,KAAM,kBAACsC,GAAA,EAAD,MAA+BlL,QACtH,WACIkB,EAAOpC,SAAWoC,EAAOpC,QACzBhD,EAAA,EAAQC,QAAQ,CAAEC,QAAS,aAAcC,IAAK,UAAWC,SAAU,IACnEwC,EAAgBC,EAASuC,EAAOH,GAAIG,GAC/BxE,MAAK,SAACC,GACc,MAAbA,EAAIlC,MAEJwQ,EAAc,YAAID,IAElBlP,EAAA,EAAQiB,QAAQ,CAAEf,QAAS,2BAAQC,IAAK,aAExCH,EAAA,EAAQ1B,MAAM,CAAE4B,QAASW,EAAIM,IAAKhB,IAAK,kBAK3D,kBAAC,IAAD,CAAMmC,GAAI,cAAgB8C,EAAOvC,QAAU,cAAgBuC,EAAOH,GAAK,SAAS,sCAChF,uBAAQtD,KAAK,SAASwC,QAAM,EACxBlE,QAASgP,EACT/K,QACI,WACIT,GAAY,GACZzD,EAAA,EAAQC,QAAQ,CAAEC,QAAS,aAAcC,IAAK,UAAWC,SAAU,InB6B5D,SAACyC,EAASC,GACrC,OAAOhE,EAASO,IAAI,wBAAyB,CACzC,QAAWwD,EACX,cAAiBC,ImB/BDuM,CAAgBxM,EAASuC,EAAOH,IAC3BrE,MAAK,SAACC,GACH4C,GAAY,GACK,MAAb5C,EAAIlC,MACJuQ,EAAWlL,OAAOJ,EAAO,GACzBuL,EAAc,YAAID,IAClBlP,EAAA,EAAQiB,QAAQ,CAAEf,QAAS,2BAAQC,IAAK,aAExCH,EAAA,EAAQ1B,MAAM,CAAE4B,QAASW,EAAIM,IAAKhB,IAAK,iBAd/D,YC3BNiE,GAAa,CACf,CACI1E,MAAO,QACPgD,KAAM,eAEV,CACIhD,MAAO,eA6EA2E,GA1EF,SAACpC,GAAW,IAAD,EACgBsB,mBAAS,IADzB,mBACb2L,EADa,KACDC,EADC,KAEdlQ,EAASgD,EAAMwL,MAAMxO,OAFP,EAGUsE,oBAAS,GAHnB,mBAGbtD,EAHa,KAGJqE,EAHI,KAIdE,EAAUC,mBAAQ,WACpB,MAAO,CACH,CACI/E,MAAO,cACPgF,UAAW,OACXvE,IAAK,QAET,CACIT,MAAO,YACPgF,UAAW,OACXvE,IAAK,QAET,CACIT,MAAO,UACPgF,UAAW,UACXvE,IAAK,WAET,CACIT,MAAO,MACPgF,UAAW,MACXvE,IAAK,OAET,CACIT,MAAO,YACPS,IAAK,YACLwE,OAAQ,SAACC,EAAMQ,EAAQxB,GACnB,OACI,kBAAC,GAAD,CACIf,QAAS5D,EAAO4D,QAChBuC,OAAQA,EACR8J,WAAY,CAAEA,aAAYC,iBAC1BvL,MAAOA,SAM5B,CAACsL,EAAYjQ,EAAO4D,UAavB,OAZA0B,qBAAU,WpB9BsB,IAAC1B,KoB+BR5D,EAAO4D,QpB9BzB/D,EAASC,IAAI,mBAAoB,CACpC,QAAW8D,KoB8BNjC,MAAK,SAACC,GACHyD,GAAW,GACM,MAAbzD,EAAIlC,KACJwQ,EAActO,EAAInC,MAElBsB,EAAA,EAAQ1B,MAAMuC,EAAIM,UAG/B,CAAClC,EAAO4D,UAGP,6BACI,kBAAC,EAAD,CAAcV,KAAMiC,KACpB,uBACIF,QAAS,WACLjC,EAAMxE,QAAQoB,KAAK,cAAgBI,EAAO4D,QAAU,sBAExDlB,KAAK,WAJT,mBAQA,6BACA,uBACI6C,QAASA,EACTU,WAAYgK,EACZjP,QAASA,EACTkF,OAAQ,SAAAC,GAAM,OAAIA,EAAOH,Q,mBCrFjCwB,G,IAAAA,OAEF0H,GAAS,CACbC,SAAU,CACRvE,KAAM,EACNwE,GAAI,CACFxE,KAAM,GAERyE,GAAI,CACFzE,KAAM,IAGV0E,WAAY,CACV1E,KAAM,GACNwE,GAAI,CACFxE,KAAM,IAERyE,GAAI,CACFzE,KAAM,MAIN2E,GAAmB,CACvBD,WAAY,CACVE,OAAQ,EACR5E,KAAM,GACN6E,GAAI,CACFD,OAAQ,EACR5E,KAAM,IAERwE,GAAI,CACFI,OAAQ,EACR5E,KAAM,IAERyE,GAAI,CACFG,OAAQ,EACR5E,KAAM,MAKNjK,GAAgB,CACpB+B,KAAM,QACNsB,IAAK,EACLD,SAAS,GA4MI2L,GAzMF,SAAC1M,GAEZ,IAAMhD,EAASgD,EAAMwL,MAAMxO,OAFL,EAGQsE,oBAAS,GAHjB,mBAGftD,EAHe,KAGNiM,EAHM,KAKhBoD,EAAWxL,uBACf,WACE,YAAgChD,IAAzB7B,EAAO6D,gBAEhB,CAAC7D,IAEGsQ,EAAU9K,mBAAQ,kBAAM+K,IAAMC,cAAa,IAEjDlL,qBAAU,WrBvBuB,IAAC1B,EAASC,EqBwBpCwM,IAeHpD,GAAW,IAdXlM,EAAA,EAAQC,QAAQ,aAAc,IrBzBA4C,EqB0BV5D,EAAO4D,QrB1BYC,EqB0BH7D,EAAO6D,crBzBtChE,EAASC,IAAI,uBAAwB,CACxC,QAAW8D,EACX,cAAiBC,KqBwBhBlC,MAAK,SAACC,GACL,GAAiB,MAAbA,EAAIlC,KAAc,CACpB,IAAMD,EAAOmC,EAAInC,KACjB6Q,EAAQG,QAAQC,eAAejR,QAE/BsB,EAAA,EAAQ1B,MAAM,8CAEf0H,SAAQ,WACThG,EAAA,EAAQ4P,UACR1D,GAAW,SAKhB,CAACjN,EAAQsQ,EAASD,IACrB,IAwCMlL,EAAa,CACjB,CACE1E,MAAO,QACPgD,KAAM,eAER,CACEhD,MAAO,YACPgD,KAAM,cAAgBzD,EAAO4D,QAAU,cAEzC,CACEnD,MAAO4P,IAAa,SAAW,SAGnC,OACE,6BACE,kBAAC,EAAD,CAAcnN,KAAMiC,IACpB,wBAAMyL,MAAO,IAAKC,SAAU7P,EAAS8P,IAAI,cACvC,uCACM5B,GADN,CAEExO,KAAK,QACLG,SA5DS,SAAAC,GrBDY,IAAC8C,EAASE,EqBErC/C,EAAA,EAAQC,QAAQ,aAAc,GAE9BiM,GAAW,GACPoD,KrBLwBzM,EqBOV5D,EAAO4D,QrBPYE,EqBOHhD,ErBN3BjB,EAASI,KAAK,wBAAyB,CAC1C,KAAQ6D,EAAKpD,KACb,KAAQoD,EAAKpB,KACb,QAAWoB,EAAK7C,QAChB,QAAW6C,EAAKC,QAChB,IAAOD,EAAKE,KACb,CACC,QAAWJ,KqBAVjC,MAAK,SAACC,GACLb,EAAA,EAAQ4P,UACS,MAAb/O,EAAIlC,MACNqB,EAAA,EAAQiB,QAAQ,wCAChBgB,EAAMxE,QAAQoB,KAAK,cAAgBI,EAAO4D,QAAU,eAEpD7C,EAAA,EAAQ1B,MAAMuC,EAAIM,QAEnB6E,SAAQ,WACThG,EAAA,EAAQ4P,UACR1D,GAAW,MAKftJ,EAAgB3D,EAAO4D,QAAS5D,EAAO6D,cAAe/C,GACnDa,MAAK,SAACC,GACY,MAAbA,EAAIlC,KACNqB,EAAA,EAAQiB,QAAQ,wCAEhBjB,EAAA,EAAQ1B,MAAMuC,EAAIM,QAEnB6E,SAAQ,WACThG,EAAA,EAAQ4P,UACR1D,GAAW,OA8BX2C,eAzBe,SAAAC,GACrBnR,QAAQC,IAAI,UAAWkR,IAyBjBlP,cAAeA,GACfoQ,IAAKT,IAGL,sBAAMnO,KAAN,CACE2N,MAAM,cACNpP,KAAK,OACL0B,MAAO,CACL,CACEC,UAAU,EACVtB,QAAS,oCAIb,6BAEF,sBAAMoB,KAAN,CACE2N,MAAM,cACNpP,KAAK,OACL0B,MAAO,CACL,CACEC,UAAU,EACVtB,QAAS,oCAIb,uBAAQoC,MAAO,CAAE8E,MAAO,MACtB,kBAAC,GAAD,CAAQpB,MAAM,KAAd,KACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,OAAd,OACA,kBAAC,GAAD,CAAQA,MAAM,OAAd,OACA,kBAAC,GAAD,CAAQA,MAAM,OAAd,OACA,kBAAC,GAAD,CAAQA,MAAM,MAAd,MACA,kBAAC,GAAD,CAAQA,MAAM,MAAd,MACA,kBAAC,GAAD,CAAQA,MAAM,OAAd,OACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,UAAd,UACA,kBAAC,GAAD,CAAQA,MAAM,MAAd,MACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,UAAd,UACA,kBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,OAAd,SAGJ,sBAAM1E,KAAN,CACE2N,MAAM,iBACNpP,KAAK,UACL0B,MAAO,CACL,CACEC,UAAU,EACVtB,QAAS,uCAIb,sBAAO8K,SAAP,OAEF,sBAAM1J,KAAN,CACE2N,MAAM,MACNpP,KAAK,MACL0B,MAAO,CACL,CACEC,UAAU,EACVtB,QAAS,2BAGb4B,cAAc,SAEd,uBAAQQ,MAAO,CAAE8E,MAAO,MACtB,kBAAC,GAAD,CAAQpB,MAAO,GAAf,aACA,kBAAC,GAAD,CAAQA,MAAO,KAAf,UACA,kBAAC,GAAD,CAAQA,MAAO,KAAf,UACA,kBAAC,GAAD,CAAQA,MAAO,KAAf,WACA,kBAAC,GAAD,CAAQA,MAAO,KAAf,WACA,kBAAC,GAAD,CAAQA,MAAO,MAAf,WACA,kBAAC,GAAD,CAAQA,MAAO,MAAf,UACA,kBAAC,GAAD,CAAQA,MAAO,MAAf,WACA,kBAAC,GAAD,CAAQA,MAAO,MAAf,WACA,kBAAC,GAAD,CAAQA,MAAO,OAAf,YACA,kBAAC,GAAD,CAAQA,MAAO,OAAf,WAGJ,sBAAM1E,KAAN,CACE2N,MAAM,MACNpP,KAAK,UACL0B,MAAO,CACL,CACEC,UAAU,EACVtB,QAAS,2BAGb4B,cAAc,WAEd,8BAGF,sBAAMR,KAAUoN,GACd,uBAAQ7M,KAAK,UAAUG,SAAS,SAASkN,OAAK,GAA9C,eC3OCiB,GAAa,CACxB,CACE9N,KAAM,SACN+N,UAAW3Q,GAEb,CACE4C,KAAM,OACN+N,UAAWnO,IAIFoO,GAAa,CACxB,CACEhO,KAAM,kBACN+N,UAAWvN,EACXyN,OAAM,EACN1Q,MAAO,sBAET,CACEyC,KAAM,cACN+N,UAAWG,EACXD,OAAM,EACN1Q,MAAO,4BAET,CACEyC,KAAM,8BACN+N,UAAWI,GACXF,OAAM,EACN1Q,MAAO,4BAET,CACEyC,KAAM,oBACN+N,UAAWK,GACXH,OAAM,EACN1Q,MAAO,4BAET,CACEyC,KAAM,gCACN+N,UAAWM,GACXJ,OAAM,EACN1Q,MAAO,+BAET,CACEyC,KAAM,oDACN+N,UAAWO,GACXL,OAAM,EACN1Q,MAAO,+BAET,CACEyC,KAAM,uCACN+N,UAAWO,GACX/Q,MAAO,8BACP0Q,OAAM,I,mHChDFM,I,YAAAA,QAAQC,G,KAAAA,MAAOC,G,KAAAA,QAEfC,G,KAAAA,QAEFC,GAAO,CACT,CACIhE,KAAM,kBAACiE,GAAA,EAAD,MACNrR,MAAO,qBACPgD,KAAM,mBACP,CACCoK,KAAM,kBAACkE,GAAA,EAAD,MACNtR,MAAO,2BACPhB,KAAM,CACF,CACIgB,MAAO,2BACPgD,KAAM,eAEV,CACIhD,MAAO,2BACPgD,KAAM,uBAKhB,CACEoK,KAAM,kBAACmE,GAAA,EAAD,MACNvR,MAAO,qBACPgD,KAAM,wBACNwO,OAAO,GACR,CACCpE,KAAM,kBAACmE,GAAA,EAAD,MACNvR,MAAO,yBACPgD,KAAM,6BACNwO,OAAO,IAyFAC,GAtFD,SAAClP,GAEX,IAAMxE,EAAU+B,cAFK,EAGa+D,oBAAS,GAHtB,mBAGd6N,EAHc,KAGHC,EAHG,KAYrB,OACI,4BACI,kBAACV,GAAD,CACIW,QAAS,KACTC,aAAW,EACXH,UAAWA,EACXI,WAAW,KACXC,eAAe,IACfC,aAAc,SAACC,GACPA,GACAN,GAAa,KAIrB,yBAAK5R,UAAU,QAAQ,kBAAC,IAAD,CAAM6C,GAAG,KAAT,WACvB,wBAAMsP,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,MAClDhB,GAAKvO,KAAI,SAAC+E,EAAG7E,GACV,OAAI4G,MAAM0I,QAAQzK,EAAE5I,OAA2B,IAAlB4I,EAAE5I,KAAK4M,OAExB,kBAACuF,GAAD,CAAS1Q,IAAKsC,EAAGqK,KAAMxF,EAAEwF,KAAMpN,MAAO4H,EAAE5H,OAExC4H,EAAE5I,KAAK6D,KAAI,SAACyP,EAAIC,GACZ,OAAiB,IAAbD,EAAGd,MACI,uBAAM9P,KAAN,CAAWjB,IAAK6R,EAAGtP,MACtB,uBAAGyH,OAAO,SAAS+H,KAAMF,EAAGtP,KAAMyP,IAAI,uBAAuBH,EAAGtS,QAGjE,uBAAM0B,KAAN,CAAWjB,IAAK6R,EAAGtP,MACtB,kBAAC,IAAD,CAAMJ,GAAI0P,EAAGtP,MAAOsP,EAAGtS,aAM3B,IAAZ4H,EAAE4J,MACK,uBAAM9P,KAAN,CAAWjB,IAAKsC,EAAGqK,KAAMxF,EAAEwF,MAC9B,uBAAG3C,OAAO,SAAS+H,KAAM5K,EAAE5E,KAAMyP,IAAI,uBAAuB7K,EAAE5H,QAG9D,uBAAM0B,KAAN,CAAWjB,IAAKsC,EAAGqK,KAAMxF,EAAEwF,MAC/B,kBAAC,IAAD,CAAMxK,GAAIgF,EAAE5E,MAAO4E,EAAE5H,aAKrC,wBAAQD,UAAU,eACd,kBAACiR,GAAD,CAAQjR,UAAU,yBAAyB2C,MAAO,CAAEqI,QAAS,IACxD+E,IAAM4C,cAAchB,EAAYiB,KAAqBC,KAAkB,CACpE7S,UAAW,UACXyE,QAxDL,WACXmN,GAAcD,MAyDF,wBAAU3R,UAAU,eAAe8S,QAC/B,4BACI,uBAAMnR,KAAN,CAAW8C,QAzDpB,W/B7BR7G,aAAamV,Q+B+BhB/U,EAAQoB,KAAK,YAuDO,8BAEJ,8B/BpGbxB,aAAaC,QAAQ,Y+BoGR,IAAsB,kBAACmV,GAAA,EAAD,SAG9B,kBAAC7B,GAAD,CACInR,UAAU,yBACV2C,MAAO,CACHgE,OAAQ,YACRqE,QAAS,GACTiI,UAAW,QAGdzQ,EAAMsE,a,OC7FZoM,OA7Bf,WACE,OhCJSvV,IgCMP,kBAAC,GAAD,KACE,kBAAC,IAAD,KACG+S,GAAW5N,KAAI,SAAAqQ,GACd,OACE,kBAAC,IAAD,CACEzS,IAAKyS,EAAMzQ,KACXA,KAAMyQ,EAAMzQ,KACZiO,MAAOwC,EAAMxC,MACbzL,OAAQ,SAAAkO,GAEN,OADAlV,QAAQC,IAAIiV,GACL,kBAACD,EAAM1C,UAAc2C,SAKpC,kBAAC,IAAD,CAAUvQ,GAAI6N,GAAW,GAAGhO,KAAM2Q,KAAK,UACvC,kBAAC,IAAD,CAAUxQ,GAAG,WAMf,kBAAC,IAAD,CAAUA,GAAG,YCxBnByQ,IAASpO,OACL,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOxC,KAAK,QAAQwC,OAAQ,SAACkO,GAAD,OAAgB,kBAAC,GAAQA,MACpD5C,GAAW1N,KAAI,SAACqQ,GACf,OAAO,kBAAC,IAAD,eAAOzS,IAAKyS,EAAMzQ,MAAUyQ,OAErC,kBAAC,IAAD,CAAUtQ,GAAG,QAAQwQ,KAAK,MAC1B,kBAAC,IAAD,CAAUxQ,GAAG,WAGjB0Q,SAASC,eAAe,W","file":"static/js/main.405e745c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ssl-tls.0ef27a92.jpg\";","\n\nexport const isLogined = () => {\n\n    return getToken();\n}\nexport const getToken = () => {\n    return localStorage.getItem('access_token');\n}\n\nexport const clearToken = () => {\n    return localStorage.removeItem('access_token');\n}\n\nexport const setToken = (access_token) => {\n    localStorage.setItem('access_token', access_token);\n}\nexport const getUsername = () => {\n    return localStorage.getItem('username');\n}\n\nexport const clearUsername = () => {\n    return localStorage.removeItem('username');\n}\n\nexport const setUsername = (username) => {\n    localStorage.setItem('username', username);\n}\n\nexport const clearAll = () => {\n    return localStorage.clear()\n}\n\n","const GLOBAL_CONFIG = window.GLOBAL_CONFIG\r\n\r\nexport default GLOBAL_CONFIG","import axios from 'axios'\n\nimport { createHashHistory } from 'history';\n\nimport { getToken, clearToken } from '@utils/auth'\n\nimport GLOBAL_CONFIG from '@/Config'\n\nconst history = createHashHistory()\n\n\nconsole.log(GLOBAL_CONFIG);\n\nconst instance = axios.create({\n    'baseURL': GLOBAL_CONFIG.BASE_URL\n    // 'baseURL': 'http://120.78.8.80:8000/'\n    // 'baseURL': 'http://127.0.0.1:8000/'\n})\n// 添加请求拦截器\ninstance.interceptors.request.use((config) => {\n    // 在发送请求之前做些什么\n    config.headers['Authorization'] = 'Bearer ' + getToken()\n    return config;\n}, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n// 添加响应拦截器\ninstance.interceptors.response.use((response) => {\n    // 对响应数据做点什么\n    console.log(response);\n    if (response.data.code === 401) {\n        clearToken();\n        history.push('/login')\n    }\n    return response.data;\n}, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nconst requests = {\n    get: (url, params) => {\n        return instance.get(url, { 'params': params })\n    },\n    post: (url, data, params = {}) => {\n        return instance.post(url, data, { 'params': params })\n    },\n    put: (url, data, params = {}) => {\n\n        return instance.put(url, data, { 'params': params })\n    },\n    patch: (url, data, params = {}) => {\n\n        return instance.patch(url, data, { 'params': params })\n    },\n\n    del: (url, params) => {\n\n        return instance.delete(url, { 'params': params })\n    }\n}\n\nexport default requests;","import React from 'react';\nimport { Form, Input, Button, Checkbox, Card, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport { loginApi } from '@service/auth'\nimport { setToken } from '@utils/auth';\nimport '../css/Login.scss';\nimport { setUsername } from '../utils/auth';\n\nconst Login = () => {\n    const history = useHistory();\n\n    const onFinish = values => {\n        message.loading({ content: '正在提交中...', key: 'loading', duration: 0 });\n        loginApi(values)\n            .then((res) => {\n                if (res.access_token !== undefined) {\n                    setToken(res.access_token)\n                    setUsername(values.username)\n                    message.success({ content: '登录成功', key: 'loading', duration: 2 });\n                    setTimeout(() => {\n                        history.push('/user');\n                    }, 1000)\n                    return;\n                }\n                if (res.msg !== undefined) {\n                    message.error({ content: res.msg, key: 'loading', duration: 2 });\n                }else{\n                    message.error({ content: '登录失败', key: 'loading', duration: 2 });\n                }\n            })\n    };\n\n    return (\n        <div className=\"site-card-border-less-wrapper\">\n            <Card className=\"card\" title=\"Login\">\n\n                <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Username!',\n                            },\n                        ]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Password!',\n                            },\n                        ]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                            <Checkbox>Remember me</Checkbox>\n                        </Form.Item>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n        </Button>\n                    </Form.Item>\n                </Form>\n\n            </Card>\n        </div>\n    );\n};\n\nexport default Login;","\nimport requests from '@utils/requests'\n\nexport const loginApi = (user) => {\n    let formData = new FormData();\n    formData.append('username', user.username);\n    formData.append('password', user.password);\n    return requests.post('/login', formData)\n}","import React from 'react'\n\nfunction PageNotFound() {\n    return (\n        <div>\n            404 PageNotFound\n        </div>\n    )\n}\n\nexport default PageNotFound\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Breadcrumb } from 'antd';\n\nconst Mybreadcrumb = (props) => {\n    let items = props.path;\n    return (\n        <Breadcrumb style={{ marginBottom: '2em' }}>\n            <Breadcrumb.Item key='home'>\n                <Link to=\"/\">Home</Link>\n            </Breadcrumb.Item>\n            {\n                items.map((item, k) => {\n                    if (item.link !== undefined && item.link !== '') {\n                        return <Breadcrumb.Item key={k}>\n                            <Link to={item.link}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                    }\n                    return <Breadcrumb.Item key={k}>\n                        {item.title}\n                    </Breadcrumb.Item>\n                })\n            }\n        </Breadcrumb>\n    )\n}\n\nexport default Mybreadcrumb\n","import React from 'react'\nimport Mybreadcrumb from '@components/Mybreadcrumb'\n\nconst Dashboard = () => {\n\n    return (\n        <div>\n            <Mybreadcrumb path={[{ title: 'Dashborad' }]} />\n            啥也没有的控制台\n        </div>\n    )\n}\n\nexport default Dashboard\n","\nimport requests from '@utils/requests'\n\n/**\n * 获取域名列表\n */\nexport const getZonesApi = () => {\n    return requests.get('/zone_list')\n}\n\n/**\n * 添加域名\n * @param {string} zone_name \n */\nexport const zoneCreate = (zone_name) => {\n    return requests.post('/do_zone_create', {\n        'zone_name': zone_name,\n    })\n}\n/**\n * 删除域名\n * @param {string} zone_id \n */\nexport const zoneDelete = (zone_id) => {\n    return requests.del('/do_zone_delete', {\n        'zone_id': zone_id,\n    })\n}\n\n\n/**\n * 获取目标域名的dns记录\n * @param {string} zone_id \n */\nexport const getZoneDnsrecordsApi = (zone_id) => {\n    return requests.get('/get_dns_records', {\n        'zone_id': zone_id\n    })\n}\n/**\n * 获取目标域名目标dns记录的详细信息\n * @param {string} zone_id \n * @param {string} dns_record_id \n */\nexport const getDnsRecordInfoApi = (zone_id, dns_record_id) => {\n    return requests.get('/get_dns_record_info', {\n        'zone_id': zone_id,\n        'dns_record_id': dns_record_id,\n    })\n}\n/**\n * 更新目标域名的目标dns记录\n * @param {string} zone_id \n * @param {string} dns_record_id \n * @param {object} body \n */\nexport const dnsRecordUpdate = (zone_id, dns_record_id, body) => {\n    return requests.put('/do_dns_record_update', {\n        'name': body.name,\n        'type': body.type,\n        'content': body.content,\n        'proxied': body.proxied,\n        'ttl': body.ttl,\n    }, {\n        'zone_id': zone_id,\n        'dns_record_id': dns_record_id,\n    })\n}\n\n/**\n * 删除目标域名的目标dns记录\n * @param {string} zone_id \n * @param {string} dns_record_id \n */\nexport const dnsRecordDelete = (zone_id, dns_record_id) => {\n    return requests.del('/do_dns_record_delete', {\n        'zone_id': zone_id,\n        'dns_record_id': dns_record_id,\n    })\n}\n/**\n * 添加dns记录至目标域名\n * @param {string} zone_id \n * @param {object} body \n */\nexport const dnsRecordCreate = (zone_id, body) => {\n    return requests.post('/do_dns_record_create', {\n        'name': body.name,\n        'type': body.type,\n        'content': body.content,\n        'proxied': body.proxied,\n        'ttl': body.ttl,\n    }, {\n        'zone_id': zone_id,\n    })\n}\n/**\n * 获取域名全部设置\n * @param {string} zone_id \n */\nexport const getAllZoneSettings = (zone_id) => {\n    return requests.get('/get_all_zone_settings', {\n        'zone_id': zone_id\n    })\n}\n/**\n * 更新域名设置\n * @param {string} zone_id \n * @param {string} type \n * @param {object} body \n */\nexport const changeZoneSetting = (zone_id, type, body) => {\n    return requests.patch('/do_zone_setting_update', {\n        'value': body\n    }, {\n        'zone_id': zone_id,\n        'type': type,\n    })\n}\n/**\n * 清理缓存\n * @param {string} zone_id \n * @param {object} body \n */\nexport const doCachePurge = (zone_id, body) => {\n    return requests.post('/do_cache_purge', {\n        'purge_everything': body.purge_everything || false,\n        'files': body.files || [],\n    }, {\n        'zone_id': zone_id,\n    })\n}\n\n/**\n * 获取域名全部页面规则\n * @param {string} zone_id \n */\nexport const getZonePagerules = (zone_id) => {\n    return requests.get('/get_zone_pagerules', {\n        'zone_id': zone_id\n    })\n}\n\n/**\n * 删除域名页面规则\n * @param {string} zone_id \n * @param {string} pagerule_id \n */\nexport const doZonePageruleDelete = (zone_id, pagerule_id) => {\n    return requests.del('/do_zone_pagerule_delete', {\n        'zone_id': zone_id,\n        'pagerule_id': pagerule_id,\n    })\n}\n\n/**\n * 获取域名指定页面规则详细信息\n * @param {string} zone_id \n * @param {string} pagerule_id \n */\nexport const getZonePageruleDetails = (zone_id, pagerule_id) => {\n    return requests.get('/get_zone_pagerule_details', {\n        'zone_id': zone_id,\n        'pagerule_id': pagerule_id,\n    })\n}\n\n/**\n * 创建页面规则\n * @param {string} zone_id \n * @param {object} body \n */\nexport const doZonePageruleCreate = (zone_id, body) => {\n    return requests.post('/do_zone_pagerule_create', {\n        'targets': body.targets || [],\n        'actions': body.actions || [],\n        'priority': body.priority || 1,\n        'status': body.status || 'active',\n    }, {\n        'zone_id': zone_id,\n    })\n}\n\n/**\n * 更新页面规则\n * @param {string} zone_id \n * @param {object} body \n */\nexport const doZonePageruleUpdate = (zone_id, pagerule_id, body) => {\n    return requests.put('/do_zone_pagerule_update', {\n        'targets': body.targets || [],\n        'actions': body.actions || [],\n        'priority': body.priority || 1,\n        'status': body.status || 'active',\n    }, {\n        'zone_id': zone_id,\n        'pagerule_id': pagerule_id,\n    })\n}","import React, { useState, useCallback } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Space, Button, message } from 'antd';\n\nimport { zoneDelete } from '@service/zone';\n\nfunction Operation(props) {\n    const [btnStatus, setBtnState] = useState(false)\n    const [zone_id, [zones, setZones], index] = [props.zone_id, [props.zones.zones, props.zones.setZones], props.index]\n    const deleteZone = useCallback(\n        () => {\n            setBtnState(true)\n            zoneDelete(zone_id)\n                .then((res) => {\n                    setBtnState(false)\n                    if (res.code === 200) {\n                        zones.splice(index, 1);\n                        setZones([...zones])\n                        message.success({ content: '删除成功', key: 'loading' });\n                    } else {\n                        message.error({ content: res.msg, key: 'loading' });\n                    }\n                })\n        },\n        [zone_id, zones, setZones, index],\n    );\n\n    return (\n        < Space size=\"middle\" >\n            <Link to={'/user/zone/control/' + zone_id}><Button type=\"primary\">Manage</Button></Link>\n            <Link to={'/user/zone/' + zone_id + '/dnsrecord'}><Button>Manage DNS</Button></Link>\n            <Button type=\"dashed\" loading={btnStatus} onClick={deleteZone} danger>Delete</Button>\n        </Space >\n    )\n}\n\nexport default Operation\n","import React, { useState, useEffect, useMemo } from 'react'\n\n\nimport { Table, Tag, message } from 'antd';\n\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { getZonesApi } from '@service/zone';\n\nimport '@css/user/zone/List.scss';\nimport Operation from '@components/zone/Operation';\n\nconst breadcrumb = [\n    {\n        title: 'Zones'\n    }\n]\nconst List = () => {\n    const [zones, setZones] = useState([]);\n    const [loading, setloading] = useState(true)\n\n    useEffect(() => {\n        getZonesApi()\n            .then((res) => {\n                setloading(false);\n                if (res.code === 200) {\n                    setZones(res.data);\n                } else {\n                    message.error(res.msg)\n                }\n            })\n    }, [])\n    const columns = useMemo(() => {\n        return (\n            [\n                {\n                    title: 'Zone',\n                    dataIndex: 'name',\n                    key: 'name',\n                    render: text => text,\n                },\n                {\n                    title: 'Status',\n                    dataIndex: 'status',\n                    key: 'status',\n                    render: (status) => {\n                        let color = 'green';\n                        if (status !== 'active') {\n                            color = 'volcano';\n                        }\n                        return (\n                            <Tag color={color} key={status}>\n                                {status.toUpperCase()}\n                            </Tag>\n                        );\n\n                    },\n                },\n                {\n                    title: 'Operation',\n                    key: 'operation',\n                    render: (text, zone, index) => (\n                        <Operation zone_id={zone.id} index={index} zones={{ zones, setZones }} />\n                    ),\n                },\n            ]\n        )\n    }, [zones])\n    return (\n        <div>\n            <Mybreadcrumb path={breadcrumb} />\n            <Table columns={columns} dataSource={zones} rowKey={record => record.id} loading={loading} />\n        </div>\n    );\n}\nexport default List\n","import { createContext } from 'react'\n\nconst Context = createContext({})\n\nexport default Context\n","import React, { useState } from 'react'\nimport { Skeleton, Card, Button, Tooltip } from 'antd'\n\n\nconst SwitchCard = (props) => {\n    const tipsTitle = () => {\n        if (props.setting !== undefined && props.setting.editable === true)\n            return props.setting.value === 'on' ? '点击关闭' : '点击开启'\n        return '无权操作'\n    }\n    const btn = () => {\n        if (props.setting !== undefined && props.setting.editable === true) {\n            return props.setting.value === 'on' ? 'ACTIVE' : 'DISABLED'\n        }\n        return '无权操作'\n    };\n    const isActive = () => {\n        if (props.setting === undefined || props.setting.editable === false || props.setting.value !== 'on') {\n            return {}\n        }\n        return {\n            color: '#52c41a',\n            background: '#f6ffed',\n            borderColor: '#b7eb8f'\n        }\n    }\n    const [btnStatus, setBtnStatus] = useState(false)\n\n    const handOnClick = () => {\n        setBtnStatus(true)\n        props.handOnClick()\n            .finally(() => setBtnStatus(false))\n    }\n\n    return (\n        <Skeleton loading={props.loading} active>\n            <Card\n                title={props.title}\n                hoverable\n                actions={[\n                    <Tooltip title={tipsTitle} color='cyan'>\n                        <Button onClick={handOnClick} size='large'\n                            loading={btnStatus}\n                            style={isActive()}>{btn()}</Button>\n                    </Tooltip>\n                ]}\n            >\n                <div style={{ maxWidth: '600px', margin: 'auto' }} dangerouslySetInnerHTML={{\n                    __html: props.children\n                }}>\n                </div>\n            </Card>\n        </Skeleton>\n    )\n}\n\nexport default SwitchCard\n","import React from 'react'\nimport { Skeleton, Card } from 'antd'\n\n\nconst DiyCard = (props) => {\n\n    return (\n        <Skeleton loading={props.loading} active>\n            <Card\n                title={props.title}\n                hoverable\n                actions={[\n                    props.actions\n                ]}\n            >\n                <div style={{ maxWidth: '600px', margin: 'auto' }} dangerouslySetInnerHTML={{\n                    __html: props.children\n                }}></div>\n            </Card>\n        </Skeleton>\n    )\n}\n\nexport default DiyCard\n","import React, { useContext, useCallback } from 'react'\nimport { Space, Select, message } from 'antd'\nimport SwitchCard from '@components/SwitchCard'\nimport Context from '@utils/context';\nimport DiyCard from '@components/DiyCard'\n\nimport { changeZoneSetting } from '@service/zone'\n\nconst { Option } = Select\n\nfunction Overview() {\n\n\n    const { zone_settings, zone_id, exchangeStatus, loading } = useContext(Context)\n\n\n    const changeSecurityLevel = useCallback(\n        (e) => {\n            changeZoneSetting(zone_id, 'security_level', e)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success('切换成功')\n                    } else {\n                        message.info('切换失败:' + res.msg)\n                    }\n                })\n        },\n        [zone_id],\n    )\n\n    const actions = [\n        {\n            'title': '开发模式',\n            'setting': 'development_mode',\n            'handOnClick': exchangeStatus('development_mode'),\n            'content': '暂时绕过我们的缓存。实时查看对您的源服务器进行的更改。'\n        },\n    ]\n    return (\n        <div>\n            <h3>快速操作</h3>\n            <Space direction=\"vertical\"\n                style={{ width: '100%' }}>\n\n                <DiyCard loading={loading} title='Under Attack 模式'\n                    setting={zone_settings.security_level}\n                    actions={[\n                        <Select key='security_level'\n                            defaultValue={() => {\n                                return zone_settings.security_level.value\n                            }}\n                            style={{ width: '20rem', maxWidth: '80%' }} onChange={changeSecurityLevel}>\n                            <Option value=\"off\">关闭（Enterprise）</Option>\n                            <Option value=\"essentially_off\">基本（本质上为关）</Option>\n                            <Option value=\"low\">低</Option>\n                            <Option value=\"medium\">中</Option>\n                            <Option value=\"high\">高</Option>\n                            <Option value=\"under_attack\">无敌</Option>\n                        </Select>\n                    ]}\n                >\n                    在访问者访问您的站点时显示 JavaScript 质询。\n                </DiyCard>\n                {\n                    actions.map((v) => {\n                        return (\n                            <SwitchCard loading={loading} title={v.title}\n                                setting={zone_settings[v.setting]}\n                                handOnClick={v.handOnClick}\n                                key={v.setting}\n                            >\n                                {v.content}\n                            </SwitchCard>\n                        )\n                    })\n                }\n            </Space>\n        </div>\n    )\n}\n\nexport default Overview\n","import React from 'react'\n\nconst Img = (props) => {\n    return (\n        <img src={props.src} alt=\"\" style={{ width:'100%', height:'100%'}} />\n    )\n}\n\nexport default Img\n","\nimport moment from 'moment'\nimport zhcn from 'moment/locale/zh-cn'\n\nmoment.locale('zh-cn', zhcn);\n\nconst getLocalUnit = (v) => {\n    const units = {\n        'year': '年',\n        'month': '月',\n        'week': '周',\n        'day': '天',\n        'hour': '小时',\n        'minute': '分钟',\n        'second': '秒',\n        'millisecond': '毫秒',\n    }\n    return units[v] || '未知'\n}\n\n\n//秒数转 年月日时分秒数\nexport const secondTransform = (v) => {\n    let unit = 'second'\n    switch (true) {\n        // 秒数\n        case v < 60:\n            unit = 's'\n            break;\n        // 分钟数\n        case v < 3600:\n            unit = 'm'\n            break;\n        // 小时数\n        case v < 86400:\n            unit = 'h'\n            break;\n        // 天数\n        case v < 604800:\n            unit = 'd'\n            break;\n        // 周数\n        case v < 2592000:\n            unit = 'w'\n            break;\n\n        // 月数\n        case v < 31536000:\n            unit = 'M'\n            break;\n        default:\n            // 年数\n            unit = 'y'\n            break;\n    }\n    const time = Math.round(moment.duration(v, 's').as(unit)) + ' ' + getLocalUnit(moment.normalizeUnits(unit))\n    return time\n}","import React, { useState, useEffect } from 'react'\nimport { Select, Modal, Alert, Row, Col, Switch ,message} from 'antd';\n\nimport { secondTransform } from '@utils/time'\n\nimport { changeZoneSetting } from '@service/zone';\nconst { Option } = Select;\n\nfunction Hsts(props) {\n\n    const [[visible, setvisible], zone_id] = [props.visibleState, props.zone_id]\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const [modalHSTS, setModalHSTS] = useState(props.modalHSTS)\n    useEffect(() => {\n        setvisible(visible)\n    }, [visible, setvisible])\n    const securityHeaderOnChange = (key, value) => {\n        modalHSTS[key] = value\n        setModalHSTS(Object.assign({}, modalHSTS))\n    }\n    const changeSecurityHeader = () => {\n        setConfirmLoading(true)\n        changeZoneSetting(zone_id, 'security_header', {\n            'strict_transport_security': modalHSTS\n        }).then((res) => {\n            if (res.code === 200) {\n                message.success('切换成功')\n            } else {\n                message.info('切换失败:' + res.msg)\n            }\n        }).finally(() => setConfirmLoading(false))\n    }\n    const HSTSActions = [\n        {\n            content: (\n                <div>\n                    <strong>启用 HSTS (Strict-Transport-Security)</strong>\n                    <p>为所有 HTTPS 请求提供 HSTS 标头</p>\n                </div>\n            ),\n            action: (\n                <Switch checked={modalHSTS.enabled}\n                    onChange={(e) => securityHeaderOnChange('enabled', e)} />\n            )\n        },\n        {\n            content: (\n                <div>\n                    <strong>最长期限标头 (max-age)</strong>\n                    <p>指定 HSTS 标头在浏览器中缓存的持续时间</p>\n                </div>\n            ),\n            action: (\n                <Select defaultValue={modalHSTS.max_age} style={{ width: '100%' }}>\n                    {\n                        [...Array(13)].map((v, k) => {\n                            return 2592000 * k\n                        }).map((v) => {\n                            if (v === 0) {\n                                return (<Option value={v} key={v}>0（禁用）</Option>)\n                            }\n                            return (\n                                <Option value={v} key={v}>{secondTransform(v)}</Option>\n                            )\n                        })\n                    }\n                </Select>\n            )\n        },\n        {\n            content: (\n                <div>\n                    <strong>将 HSTS 策略应用于子域 (includeSubDomains)</strong>\n                    <p>\n                        此域下的每个域将继承相同的 HSTS 标头\n                <br />\n                        <strong>警告：</strong>如果您的任何子域不支持 HTTPS，这些子域将变为不可访问。\n                </p>\n                </div>\n            ),\n            action: (\n\n                <Switch checked={modalHSTS.include_subdomains}\n                    onChange={(e) => securityHeaderOnChange('include_subdomains', e)} />\n            )\n        },\n        {\n            content: (\n                <div>\n                    <strong>预加载</strong>\n                    <p>\n                        允许浏览器自动预加载 HSTS 配置\n                        <br />\n                        <strong>警告：</strong>预加载可能会使不支持 HTTPS 的网站完全不可访问。\n                    </p>\n                </div>\n            ),\n            action: (\n\n                <Switch checked={modalHSTS.preload}\n                    onChange={(e) => securityHeaderOnChange('preload', e)} />\n            )\n        },\n        {\n            content: (\n                <div>\n                    <strong>无嗅探标头</strong>\n                    <p>\n                        发送 “X-Content-Type-Options: nosniff” 标头，来防止 Internet Explorer 和 Google Chrome 浏览器通过 MIME 在声明的 Content-Type 中四处嗅探。\n                    </p>\n                </div>\n            ),\n            action: (\n\n                <Switch checked={modalHSTS.nosniff}\n                    onChange={(e) => securityHeaderOnChange('nosniff', e)} />\n            )\n        },\n\n    ]\n    return (\n        <div>\n            <Modal\n                title=\"HTTP 严格传输安全 (HSTS)\"\n                visible={visible}\n                onOk={changeSecurityHeader}\n                confirmLoading={confirmLoading}\n                onCancel={() => setvisible(false)}\n                key='modal'\n            >\n                <Alert\n                    message=\"您将需要指定文件的完整路径。\"\n                    description={\n                        <div>\n                            <p>HTTP 严格传输安全 (HTTP Strict Transport Security, HSTS) 可以大幅提高网站的安全性。但是，启用 HSTS 时，请谨记以下重要注意事项：</p>\n                            <strong>必须启用 HTTPS (SSL) 才能使用 HSTS。</strong>\n                            <ul>\n                                <li>\n                                    如果您打开 HSTS，但您的网站不支持 HTTPS，浏览器将不接受 HSTS 设置。\n                                                </li>\n                                <li>\n                                    如果您启用了 HSTS 但离开了 Cloudflare，您需要通过新的服务提供商继续支持 HTTPS，否则，在您支持 HTTPS 之前，访问者将无法访问您的站点。\n                                            </li>\n                                <li>\n                                    如果在启用 HSTS 后关闭了 Cloudflare 的 HTTPS，并且源服务器上没有有效的 SSL 证书，访问者将无法访问您的网站。\n                                            </li>\n                                <li>\n                                    注意：可以通过以下几种方法禁用 Cloudflare 的 HTTP：在 DNS 记录中遮蔽子域，“暂停” Cloudflare 服务，或通过您的 Cloudflare 仪表板配置错误的自定义 SSL 证书（例如，无效的 SSL 证书、过期证书或不匹配的主机名）。\n                                            </li>\n                            </ul>\n                            <p>如果您需要在域上禁用 HTTPS，必须先在您的 Cloudflare 仪表板中禁用 HSTS，并等到最长期限过去（以确保每个浏览器都知道此更改），然后才能禁用 HTTPS。平均最长期限为六个月（您可以在下一步中设置最长期限）。如果您在禁用 HSTS 之前删除了 HTTPS，访问者将无法访问您的网站，直至达到最长期限或您再次支持 HTTPS。由于在启用 HSTS 的网站上禁用 HTTPS 可能会导致这些后果，因此我们强烈建议您先部署 HTTPS 服务再启用此功能</p>\n                        </div>}\n                    type=\"info\"\n                    closable\n                />\n                <br />\n                <Alert\n                    message=\"警告：\"\n                    description={<strong>如果配置不正确，HTTP 严格传输安全 (HSTS) 可能会使您的网站长时间不可访问。</strong>}\n                    type=\"warning\"\n                />\n                <br />\n                {\n                    HSTSActions.map((v, index) => {\n                        return (\n                            <Row key={index}>\n                                <Col span={18}>\n                                    {v.content}\n                                </Col>\n                                <Col span={6} style={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                }}>\n                                    {v.action}\n                                </Col>\n                            </Row>\n                        )\n                    })\n                }\n            </Modal>\n        </div>\n    )\n}\n\nexport default Hsts\n","import React, { useState, useCallback, useContext } from 'react'\nimport { Radio, Tooltip, Space, message, Select, Button } from 'antd';\nimport Img from '@components/Img'\nimport Img_SSLTLS from '@/assets/images/ssl-tls.jpg'\nimport SwitchCard from '@components/SwitchCard'\nimport DiyCard from '@components/DiyCard'\nimport Context from '@utils/context';\nimport { changeZoneSetting } from '@service/zone';\nimport Hsts from '@components/zone/SslTls/Hsts'\n\nconst { Option } = Select;\n\nfunction SslTls() {\n\n    const { zone_settings, zone_id, exchangeStatus, loading } = useContext(Context)\n\n\n    const [visible, setvisible] = useState(false)\n\n    const changeSSL = useCallback(\n        (e) => {\n            changeZoneSetting(zone_id, 'ssl', e.target.value)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success('切换成功')\n                    } else {\n                        message.info('切换失败:' + res.msg)\n                    }\n                })\n\n        },\n        [zone_id],\n    )\n    const handleMinTlsVersionChange = (e) => {\n        changeZoneSetting(zone_id, 'min_tls_version', e)\n            .then((res) => {\n                if (res.code === 200) {\n                    message.success('切换成功')\n                } else {\n                    message.info('切换失败:' + res.msg)\n                }\n            })\n    }\n\n    const actions = [\n        {\n            'title': '始终使用 HTTPS',\n            'setting': 'always_use_https',\n            'handOnClick': exchangeStatus('always_use_https'),\n            'content': '将所有使用方案 “http” 的请求重定向到 “https”。这将应用于该区域的所有 http 请求。'\n        },\n        {\n            'title': '随机加密',\n            'setting': 'opportunistic_encryption',\n            'handOnClick': exchangeStatus('opportunistic_encryption'),\n            'content': '随机加密可以让浏览器知道您的站点通过加密连接提供，从而让它们从 HTTP/2 的性能改进中受益。浏览器将继续在地址栏中显示 “http”，而不是 “https”。'\n        },\n        {\n            'title': '自动 HTTPS 重写',\n            'setting': 'automatic_https_rewrites',\n            'handOnClick': exchangeStatus('automatic_https_rewrites'),\n            'content': '自动 HTTPS 重写通过将可以使用 HTTPS 提供服务的网站上所有资源或链接的 “http” 更改为 “https” 来帮助修正混合内容。'\n        },\n    ]\n    return (\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n            <DiyCard loading={loading} title={`您的 SSL/TLS 加密模式为 ${zone_settings.ssl.value}`}\n                setting={zone_settings.min_tls_version}\n                actions={\n                    <Radio.Group defaultValue={zone_settings.ssl.value} onChange={changeSSL} key='ssl'>\n                        <Tooltip title=\"未应用加密\" color='cyan'>\n                            <Radio.Button value=\"off\">关闭（不安全）</Radio.Button>\n                        </Tooltip>\n                        <Tooltip title=\"加密浏览器与 Cloudflare 之间的流量\" color='cyan'>\n                            <Radio.Button value=\"flexible\">灵活</Radio.Button>\n                        </Tooltip>\n                        <Tooltip title=\"端到端加密，使用服务器上的自签名证书\" color='cyan'>\n                            <Radio.Button value=\"full\">完全</Radio.Button>\n                        </Tooltip>\n                        <Tooltip title=\"端到端加密，但服务器上需要有受信任的 CA 证书或 Cloudflare Origin CA 证书\" color='cyan'>\n                            <Radio.Button value=\"strict\">完全（严格）</Radio.Button>\n                        </Tooltip>\n\n                    </Radio.Group>\n                }\n            ><Img src={Img_SSLTLS} />\n                <div style={{ padding: '1em 0' }}>\n                    <strong>此设置上次更改时间为 {zone_settings.ssl.modified_on}</strong>\n                </div>\n            </DiyCard>\n\n            <DiyCard loading={loading} title='最低 TLS 版本'\n                setting={zone_settings.min_tls_version}\n                actions={[\n                    <Select key='min_tls_version' defaultValue={zone_settings.min_tls_version.value} style={{ width: '20rem', maxWidth: '80%' }} onChange={handleMinTlsVersionChange}>\n                        <Option value=\"1.0\">1.0</Option>\n                        <Option value=\"1.1\">1.1</Option>\n                        <Option value=\"1.2\">1.2</Option>\n                        <Option value=\"1.3\">1.3</Option>\n                    </Select>\n                ]}\n            >仅允许来自支持所选 TLS 协议版本或更高版本的访问者的 HTTPS 连接。\n            </DiyCard>\n\n            <DiyCard loading={loading} title='HTTP 严格传输安全 (HSTS)'\n                setting={zone_settings.security_header}\n                actions={[\n\n                    <Tooltip title=\"点击切换\" color='cyan' key='security_header'>\n                        <Button onClick={() => setvisible(true)}>{\n                            (() => {\n                                if (zone_settings.security_header.enabled === true) {\n\n                                    return '关闭HTTP 严格传输安全 (HSTS)'\n                                } else {\n\n                                    return '启用HTTP 严格传输安全 (HSTS)'\n                                }\n                            })()\n                        }\n                        </Button>\n                    </Tooltip>,\n                    <Hsts key='Hsts' visibleState={[visible, setvisible]} zone_id={zone_id} modalHSTS={zone_settings.security_header.value.strict_transport_security} />\n\n                ]}\n            >\n                对您的网站强制执行 Web 安全策略。\n            </DiyCard>\n            {\n                actions.map((v) => {\n                    return (\n                        <SwitchCard loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            handOnClick={v.handOnClick}\n                            key={v.setting}\n                        >\n                            {v.content}\n                        </SwitchCard>\n                    )\n                })\n            }\n        </Space>\n    )\n}\n\nexport default SslTls\n","import React, { useContext } from 'react'\nimport SwitchCard from '@components/SwitchCard'\n\nimport Context from '@utils/context';\n\nfunction Firewall() {\n\n    const { loading } = useContext(Context)\n\n    return (\n        <div>\n            <SwitchCard title=\"防火墙规则\" loading={loading}>\n                <h1>暂时不可用</h1>\n                通过基于位置、IP 地址、用户代理和 URI 等筛选请求，来控制传入到您的区域的流量。\n                您已使用 0 个活动的防火墙规则（总计 5 个）。\n            </SwitchCard>\n\n        </div>\n    )\n}\n\nexport default Firewall\n","import React, { useState, useContext, useCallback } from 'react'\nimport { Radio, Tooltip, Modal, Space, Select, message, Button, Input, Alert, Popconfirm } from 'antd';\nimport SwitchCard from '@components/SwitchCard'\nimport DiyCard from '@components/DiyCard'\n\nimport Context from '@utils/context';\n\nimport { secondTransform } from '@utils/time'\nimport { changeZoneSetting, doCachePurge } from '@service/zone'\n\n\nconst { Option } = Select\nconst { TextArea } = Input\n\nfunction Cache() {\n\n    const { zone_settings, zone_id, exchangeStatus, loading } = useContext(Context)\n\n    const [visible, setvisible] = useState(false)\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const [modalText, setModalText] = useState('')\n\n    const changeCacheLevel = useCallback(\n        (e) => {\n            changeZoneSetting(zone_id, 'cache_level', e.target.value)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success('切换成功')\n                    } else {\n                        message.info('切换失败:' + res.msg)\n                    }\n                })\n        },\n        [zone_id],\n    )\n\n    const purgeEverything = useCallback(\n        () => {\n            const data = {\n                'purge_everything': true,\n            }\n            doCachePurge(zone_id, data)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success('切换成功')\n                    } else {\n                        message.info('切换失败:' + res.msg)\n                    }\n                })\n        },\n        [zone_id],\n    )\n    const purgeFilesByUrl = useCallback(() => {\n        setConfirmLoading(true)\n        setModalText(modalText.trim())\n        if (modalText.length === 0) {\n            message.warning('URL不得为空')\n            return\n        }\n        const data = {\n            'files': modalText.split('\\n')\n        }\n        doCachePurge(zone_id, data)\n            .then((res) => {\n                if (res.code === 200) {\n                    message.success('切换成功')\n                } else {\n                    message.info('切换失败:' + res.msg)\n                }\n            }).finally(() => {\n                setConfirmLoading(false)\n            })\n    },\n        [zone_id, modalText],\n    )\n    const changeBrowserCacheTtl = useCallback(\n        (e) => {\n            console.log(e);\n            changeZoneSetting(zone_id, 'browser_cache_ttl', e)\n                .then((res) => {\n                    if (res.code === 200) {\n                        message.success('切换成功')\n                    } else {\n                        message.info('切换失败:' + res.msg)\n                    }\n                })\n        },\n        [zone_id],\n    )\n\n    const actions = [\n        {\n            'title': 'Always Online™',\n            'setting': 'always_online',\n            'handOnClick': exchangeStatus('always_online'),\n            'content': '如果您的服务器关闭，Cloudflare 将使用我们的缓存为您的网站的静态页面提供服务。'\n        },\n        {\n            'title': '开发模式™',\n            'setting': 'development_mode',\n            'handOnClick': exchangeStatus('development_mode'),\n            'content': '暂时绕过我们的缓存可以实时查看对您的源服务器进行的更改。<br />注意：启用此功能可显著加快源服务器的加载速度。开发模式不会清除缓存，因此需要在开发模式过期后清除文件。'\n        },\n    ]\n\n    const divCards = [\n\n        {\n            'title': '清除缓存',\n            'setting': 'purge_cache',\n            'actions': [\n                <Tooltip title=\"自定义清除\" color='cyan' key='purge_files_by_url'>\n                    <Button onClick={() => setvisible(true)}>自定义清除</Button>\n                </Tooltip>,\n                <Tooltip title=\"清理全部缓存，慎用\" color='cyan' key='purge_everything'>\n                    <Popconfirm\n                        title=\"您确定要清理全部缓存吗？\"\n                        onConfirm={purgeEverything}\n                        okText=\"确定\"\n                        cancelText=\"取消\"\n                    >\n                        <Button>清理全部</Button>\n                    </Popconfirm>\n                </Tooltip>,\n                <Modal\n                    title=\"自定义清除\"\n                    visible={visible}\n                    onOk={purgeFilesByUrl}\n                    confirmLoading={confirmLoading}\n                    onCancel={() => setvisible(false)}\n                    key='modal'\n                >\n                    <Alert\n                        message=\"您将需要指定文件的完整路径。\"\n                        description={<div>\n                            <p>目前进行单个 URL 清除时不支持通配符。您一次最多可以清除 30 个 URL。\n                            按照每行一个的方式分隔 URL。</p>\n                            <strong>示例：</strong>\n                            <ul>\n                                <li>https://www.v8cdn.xyz</li>\n                                <li>https://www.v8cdn.xyz/cat.jpg</li>\n                            </ul>\n                        </div>}\n                        type=\"info\"\n                        closable\n                    />\n                    <br />\n                    <TextArea rows={4} value={modalText} onChange={(e) => {\n                        setModalText(e.target.value)\n                    }} />\n                </Modal>\n            ],\n            'content': '清除缓存文件以强制 Cloudflare 从您的 Web 服务器中提取这些文件的最新版本。您可以选择性地清除文件，也可以同时清除所有文件。<br /><strong>注意：</strong>清除缓存可能会使您的网站性能暂时降级，并延长在您的源服务器上加载文件的时间。'\n        },\n        {\n            'title': '缓存级别',\n            'setting': 'cache_level',\n            'actions':\n                [\n                    <Radio.Group defaultValue={zone_settings.cache_level.value} key='cache_level' onChange={changeCacheLevel}>\n                        <Tooltip title=\"没有查询字符串\" color='cyan'>\n                            <Radio.Button value=\"basic\">没有查询字符串</Radio.Button>\n                        </Tooltip>\n                        <Tooltip title=\"忽略查询字符串\" color='cyan'>\n                            <Radio.Button value=\"simplified\">忽略查询字符串</Radio.Button>\n                        </Tooltip>\n                        <Tooltip title=\"标准\" color='cyan'>\n                            <Radio.Button value=\"aggressive\">标准</Radio.Button>\n                        </Tooltip>\n                    </Radio.Group>\n                ],\n            'content': '确定您希望 Cloudflare 对您的网站进行缓存的静态内容量。增加缓存可以缩短页面加载时间。'\n        },\n        {\n            'title': '浏览器缓存 TTL',\n            'setting': 'browser_cache_ttl',\n            'actions':\n                [\n                    <Select\n                        defaultValue={zone_settings.browser_cache_ttl.value}\n                        style={{ width: '20rem', maxWidth: '80%' }} key='browser_cache_ttl'\n                        onChange={changeBrowserCacheTtl}\n                    >\n\n                        {\n                            [0, 30, 60, 300, 1200, 1800, 3600, 7200, 10800, 14400, 18000, 28800, 43200, 57600, 72000, 86400, 172800, 259200, 345600, 432000, 691200, 1382400, 2073600, 2678400, 5356800, 16070400, 31536000]\n                                .map((v) => {\n                                    if (v === 0) {\n                                        return (\n                                            <Option value={v} key={v}>遵循现有标头</Option>\n                                        )\n                                    }\n                                    return (\n                                        <Option value={v} key={v}>{secondTransform(v)}</Option>\n                                    )\n\n                                })\n                        }\n                    </Select >\n                ],\n            'content': '确定 Cloudflare 指示访问者的浏览器缓存文件的时长。在此期间，浏览器会从其本地缓存中加载文件，从而提高页面加载速度。'\n        },\n\n    ]\n\n    return (\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n            {\n                divCards.map((v, index) => {\n                    return (\n                        <DiyCard\n                            loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            key={v.setting}\n                            actions={v.actions}\n                        >\n                            {v.content}\n                        </DiyCard>\n                    )\n                })\n            }\n            {\n                actions.map((v, index) => {\n                    return (\n                        <SwitchCard loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            handOnClick={v.handOnClick}\n                            key={v.setting}\n                        >\n                            {v.content}\n                        </SwitchCard>\n                    )\n                })\n            }\n        </Space >\n    )\n}\n\nexport default Cache\n","\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { DeleteFilled } from '@ant-design/icons'\r\nimport { Space, Switch, Button, message, Popconfirm } from 'antd'\r\nimport { doZonePageruleUpdate, doZonePageruleDelete } from '@service/zone'\r\n\r\nfunction Actions(props) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [btnLoading, setBtnLoading] = useState(false)\r\n    const changeStatus = (v) => {\r\n        setLoading(true)\r\n        let pageRules = JSON.parse(JSON.stringify(props.pageRules.pageRules))\r\n        pageRules[props.index].status = (v === true ? 'active' : 'disabled')\r\n        doZonePageruleUpdate(props.zone_id, pageRules[props.index].id, pageRules[props.index])\r\n            .then((res) => {\r\n                if (res.code === 200) {\r\n                    props.pageRules.setPageRules(pageRules)\r\n                    message.success('切换成功')\r\n                } else {\r\n                    message.info('切换失败:' + res.msg)\r\n                }\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }\r\n    const deleteRecord = (v) => {\r\n        setBtnLoading(true)\r\n        let pageRules = [...props.pageRules.pageRules]\r\n        doZonePageruleDelete(props.zone_id, pageRules[props.index].id)\r\n            .then((res) => {\r\n                if (res.code === 200) {\r\n                    pageRules.splice(props.index, 1)\r\n                    props.pageRules.setPageRules(pageRules)\r\n                    message.success('删除成功')\r\n                } else {\r\n                    message.info(res.msg)\r\n                }\r\n            })\r\n            .finally(() => setBtnLoading(false))\r\n\r\n    }\r\n    return (\r\n        <Space>\r\n            <Switch loading={loading} checked={props.record.status === 'active'} onChange={changeStatus} />\r\n            <Link to={'/user/zone/control/' + props.zone_id + '/pagerule/' + props.record.id}>\r\n                <Button type='dashed'>Manage</Button>\r\n            </Link>\r\n            <Popconfirm\r\n                title=\"确定要删除吗？\"\r\n                onConfirm={deleteRecord}\r\n                okText=\"确定\"\r\n                cancelText=\"取消\"\r\n            >\r\n                <Button loading={btnLoading} type='dashed' shape=\"circle\" icon={<DeleteFilled />} danger></Button>\r\n            </Popconfirm>\r\n        </Space>\r\n    )\r\n}\r\n\r\nexport default Actions\r\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Space, message, Table, Tag } from 'antd'\n\nimport SwitchCard from '@components/SwitchCard'\n\nimport Context from '@utils/context';\nimport { getZonePagerules } from '@service/zone'\nimport Actions from '@components/zone/Pagerules/Actions';\n\nconst Pagerules = (props) => {\n\n\n    const { zone_id } = useContext(Context)\n    const [pageRules, setPageRules] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const columns = [\n        {\n            title: 'URL/说明',\n            dataIndex: 'title',\n            key: 'title',\n            render: (text, record) => {\n                return (\n                    <div>\n                        <h4>\n                            {\n                                record.targets.map((v, index) => <span key={index} color=\"cyan\">{v.constraint.value}</span>)\n                            }\n                        </h4>\n                        <br />\n                        <p>{\n                            record.actions.map((v, index) => <Tag key={index} color=\"cyan\">{v.id}:{v.value}</Tag>)\n                        }</p>\n                    </div>\n                )\n            },\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record,index) => {\n                return (\n                    <Actions record={record} zone_id={zone_id} pageRules={{ pageRules, setPageRules }} index={index} />\n                )\n            },\n        },\n    ];\n\n    useEffect(() => {\n        getZonePagerules(zone_id)\n            .then((res) => {\n                console.log(res);\n                if (res.code === 200) {\n                    setPageRules(res.data)\n                } else {\n                    message.error('获取页面规则失败')\n                }\n            }).finally(() => setLoading(false))\n    }, [zone_id])\n\n    return (\n\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n\n            <SwitchCard loading={loading} title=\"页面规则\">\n                页面规则用于控制针对给定的 URL 触发哪些 Cloudflare 设置。针对每个 URL 仅触发一个页面规则，因此，如果您按照优先级顺序对页面规则进行排序，则这非常有用，请尽可能将 URL 模式设置得具体些。\n                您剩下 2 个页面规则 个。\n            </SwitchCard>\n            <Table\n                loading={loading}\n                columns={columns}\n                dataSource={pageRules}\n                rowKey={record => record.id}\n            />\n        </Space>\n\n    )\n}\nexport default Pagerules\n","import React, { useContext } from 'react'\nimport { Space } from 'antd'\nimport SwitchCard from '@components/SwitchCard'\nimport Context from '@utils/context';\n\nfunction Network() {\n\n    const { zone_settings, exchangeStatus, loading } = useContext(Context)\n\n\n    const actions = [\n        {\n            'title': 'HTTP/2',\n            'setting': 'http2',\n            'handOnClick': exchangeStatus('http2'),\n            'content': '使用 HTTP/2 加速您的网站'\n        },\n        {\n            'title': 'HTTP/3（使用 QUIC）',\n            'setting': 'http3',\n            'handOnClick': exchangeStatus('http3'),\n            'content': '使用 QUIC 加速 HTTP 请求，QUIC 提供比 TCP 和 TLS 更高的加密和性能。'\n        },\n        {\n            'title': '0-RTT 连接恢复',\n            'setting': '0rtt',\n            'handOnClick': exchangeStatus('0rtt'),\n            'content': '提高之前已连接到您网站的客户端的性能。'\n        },\n        {\n            'title': 'WebSocket',\n            'setting': 'websockets',\n            'handOnClick': exchangeStatus('websockets'),\n            'content': '允许与您的源服务器建立 WebSocket 连接。<br />适用于您所用计划的并发连接准则：low'\n        },\n        {\n            'title': '洋葱路由',\n            'setting': 'opportunistic_onion',\n            'handOnClick': exchangeStatus('opportunistic_onion'),\n            'content': '洋葱路由允许通过 Cloudflare 的洋葱服务而不是退出节点路由来自 Tor 网络上合法用户的流量，从而改善用户的隐私并实现更细化的保护。'\n        },\n        {\n            'title': 'IP 地理位置',\n            'setting': 'ip_geolocation',\n            'handOnClick': exchangeStatus('ip_geolocation'),\n            'content': '包含访问者位置的国家/地区代码和所有发送到您网站的请求。<br /><strong>注意：</strong>您必须从 CF-IPCountry HTTP 标头减检索 IP 地理位置信息。'\n\n        },\n    ]\n    return (\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n\n            {\n                actions.map((v) => {\n                    return (\n                        <SwitchCard loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            handOnClick={v.handOnClick}\n                            key={v.setting}\n                        >\n                            {v.content}\n                        </SwitchCard>\n                    )\n                })\n            }\n        </Space>\n    )\n}\n\nexport default Network\n","import React, { useContext } from 'react'\nimport { Space } from 'antd'\nimport SwitchCard from '@components/SwitchCard'\n\nimport Context from '@utils/context';\n\nfunction ScrapeShield() {\n\n    const { zone_settings, exchangeStatus, loading } = useContext(Context)\n\n\n    const actions = [\n        {\n            'title': '电子邮件地址混淆技术',\n            'setting': 'email_obfuscation',\n            'handOnClick': exchangeStatus('email_obfuscation'),\n            'content': '在您的网站上显示经过模糊处理的电子邮件地址，以防止机自动程序和垃圾邮件制造者获取该地址，而对于人类访问者，则不会对地址进行任何可见更改。'\n        },\n        {\n            'title': '服务器端排除',\n            'setting': 'server_side_exclude',\n            'handOnClick': exchangeStatus('server_side_exclude'),\n            'content': '自动隐藏特定内容以防声誉不好的访问者查看'\n        },\n        {\n            'title': 'Hotlink 保护',\n            'setting': 'hotlink_protection',\n            'handOnClick': exchangeStatus('hotlink_protection'),\n            'content': '防止站外链接指向您的图像。'\n        },\n    ]\n    return (\n        <Space direction=\"vertical\"\n            style={{ width: '100%' }}>\n\n            {\n                actions.map((v) => {\n                    return (\n                        <SwitchCard loading={loading} title={v.title}\n                            setting={zone_settings[v.setting]}\n                            handOnClick={v.handOnClick}\n                            key={v.setting}\n                        >\n                            {v.content}\n                        </SwitchCard>\n                    )\n                })\n            }\n        </Space>\n    )\n}\n\nexport default ScrapeShield\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Tabs, message } from 'antd';\n\nimport Context from '@utils/context'\n\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { getAllZoneSettings, changeZoneSetting } from '@service/zone'\n\nimport Overview from '@components/zone/Overview'\nimport SslTls from '@components/zone/SslTls'\nimport Firewall from '@components/zone/Firewall'\nimport Cache from '@components/zone/Cache'\nimport Pagerules from '@components/zone/Pagerules'\nimport Network from '@components/zone/Network'\nimport ScrapeShield from '@components/zone/ScrapeShield'\n\nconst { TabPane } = Tabs;\n\nconst breadcrumb = [\n    {\n        title: 'Zones',\n        link: '/user/zones'\n    },\n    {\n        title: 'Control'\n    }\n]\n\nconst Control = (props) => {\n    const components = [\n        {\n            'title': '概览',\n            'key': 'Overview',\n            'content': <Overview />\n        },\n        {\n            'title': 'SSL-TLS',\n            'key': 'SslTls',\n            'content': <SslTls />\n        },\n        {\n            'title': '防火墙',\n            'key': 'firewall',\n            'content': <Firewall />\n        },\n        {\n            'title': '缓存',\n            'key': 'Cache',\n            'content': <Cache />\n        },\n        {\n            'title': '页面规则',\n            'key': 'Pagerules',\n            'content': <Pagerules />\n        },\n        {\n            'title': '网络',\n            'key': 'Network',\n            'content': <Network />\n        },\n        {\n            'title': '内容保护',\n            'key': 'ScrapeShield',\n            'content': <ScrapeShield />\n        },\n    ]\n\n    const [zone_settings, setZone_settings] = useState({})\n    const [loading, setloading] = useState(true)\n\n    const zone_id = props.match.params.zone_id;\n    \n\n    useEffect(() => {\n        getAllZoneSettings(zone_id)\n            .then((res) => {\n                if (res.code === 200) {\n                    let tmp = {}\n                    res.data.map((v) => {\n                        return tmp[v.id] = v\n                    })\n                    setZone_settings(tmp)\n                    setloading(false)\n\n                } else {\n                    message.error(res.msg)\n                }\n            })\n    }, [zone_id])\n\n\n    const exchangeStatus = useCallback(\n        (id) => {\n            return async () => {\n                let value = (zone_settings[id].value === 'on') ? 'off' : 'on';\n                await changeZoneSetting(zone_id, id, value)\n                    .then((res) => {\n                        if (res.code === 200) {\n                            message.success('切换成功')\n                            zone_settings[id].value  = value\n                            setZone_settings(Object.assign({}, zone_settings))\n                        } else {\n                            message.info(res.msg)\n                        }\n                    })\n            }\n        },\n        [zone_settings, zone_id],\n    )\n    const contextValue = {\n        'zone_id': zone_id,\n        'zone_settings': zone_settings,\n        exchangeStatus,\n        loading\n    }\n\n    return (\n        <Context.Provider value={contextValue}>\n            <Mybreadcrumb path={breadcrumb} />\n            <Tabs defaultActiveKey=\"Overview\" centered>\n                {components.map((v) => {\n                    return <TabPane tab={v.title} key={v.key}>\n                        <div style={{ paddingBottom: '2rem' }}>\n                            {v.content}\n                        </div>\n                    </TabPane>\n                })}\n            </Tabs>\n        </Context.Provider>\n    );\n};\nexport default Control;\n","import React from 'react'\nimport { Form, Input, Button, message } from 'antd';\n\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { zoneCreate } from '@service/zone';\n\nconst layout = {\n    labelCol: {\n        span: 3,\n        sm: {\n            span: 5,\n        },\n        lg: {\n            span: 3,\n        }\n    },\n    wrapperCol: {\n        span: 12,\n        sm: {\n            span: 15,\n        },\n        lg: {\n            span: 12,\n        }\n    },\n};\nconst submitTailLayout = {\n    wrapperCol: {\n        offset: 3,\n        span: 12,\n        xs: {\n            offset: 0,\n            span: 15,\n        },\n        sm: {\n            offset: 5,\n            span: 15,\n        },\n        lg: {\n            offset: 3,\n            span: 12,\n        }\n    },\n};\nconst breadcrumb = [\n    {\n        title: 'Zones',\n        link: '/user/zones'\n    },\n    {\n        title: 'Create'\n    }\n]\n\nconst Edit = (props) => {\n    const onFinish = values => {\n        message.loading({ content: 'loading...', key: 'loading', duration: 0 });\n        zoneCreate(values.zone_name)\n            .then((res) => {\n                if (res.code === 200) {\n                    message.success({ content: '添加域名成功', key: 'loading' });\n                    props.history.push('/user/zones');\n                } else {\n                    message.error({ content: '添加域名失败', key: 'loading' });\n                }\n            });\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <div>\n            <Mybreadcrumb path={breadcrumb} />\n            <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"Zone Name\"\n                    name=\"zone_name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Zone Name!',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item  {...submitTailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" block>\n                        Submit\n        </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\nexport default Edit;\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Space, Button, message } from 'antd'\nimport {\n    SafetyCertificateOutlined\n} from '@ant-design/icons';\n\nimport { dnsRecordUpdate, dnsRecordDelete } from '@service/zone';\n\nfunction Operation(props) {\n\n    const [btnState, setBtnState] = useState(false)\n\n    const [\n        zone_id, record, index, [\n            dnsrecords, setDnsrecords\n        ]\n    ] = [props.zone_id, props.record, props.index, [props.dnsrecords.dnsrecords, props.dnsrecords.setDnsrecords]]\n\n    return (\n        <Space size=\"middle\">\n            <Button type=\"dashed\" className={'cdn ' + (record.proxied === true ? 'active' : '')} icon={<SafetyCertificateOutlined />} onClick={\n                () => {\n                    record.proxied = !record.proxied;\n                    message.loading({ content: 'Loading...', key: 'loading', duration: 0 });\n                    dnsRecordUpdate(zone_id, record.id, record)\n                        .then((res) => {\n                            if (res.code === 200) {\n\n                                setDnsrecords([...dnsrecords])\n\n                                message.success({ content: '更新成功', key: 'loading' });\n                            } else {\n                                message.error({ content: res.msg, key: 'loading' });\n                            }\n                        })\n                }\n            }></Button>\n            <Link to={'/user/zone/' + record.zone_id + '/dnsrecord/' + record.id + '/edit'}><Button>Manage</Button></Link>\n            <Button type=\"dashed\" danger\n                loading={btnState}\n                onClick={\n                    () => {\n                        setBtnState(true)\n                        message.loading({ content: 'Loading...', key: 'loading', duration: 0 });\n                        dnsRecordDelete(zone_id, record.id)\n                            .then((res) => {\n                                setBtnState(false)\n                                if (res.code === 200) {\n                                    dnsrecords.splice(index, 1);\n                                    setDnsrecords([...dnsrecords])\n                                    message.success({ content: '删除成功', key: 'loading' });\n                                } else {\n                                    message.error({ content: res.msg, key: 'loading' });\n                                }\n                            })\n                    }\n                }>Delete</Button>\n        </Space>\n\n    )\n}\n\nexport default Operation\n","import React, { useState, useEffect, useMemo } from 'react'\n\nimport { Table, Button, message, Divider } from 'antd';\n\n\n\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { getZoneDnsrecordsApi } from '@service/zone';\n\nimport '@css/user/dnsrecord/List.scss';\nimport Operation from '../../../components/dnsrecord/Operation';\n\n\nconst breadcrumb = [\n    {\n        title: 'Zones',\n        link: '/user/zones'\n    },\n    {\n        title: 'DNSRecords'\n    }\n]\nconst List = (props) => {\n    const [dnsrecords, setDnsrecords] = useState([]);\n    const params = props.match.params\n    const [loading, setloading] = useState(true)\n    const columns = useMemo(() => {\n        return [\n            {\n                title: 'Record Type',\n                dataIndex: 'type',\n                key: 'type',\n            },\n            {\n                title: 'Host Name',\n                dataIndex: 'name',\n                key: 'name',\n            },\n            {\n                title: 'Content',\n                dataIndex: 'content',\n                key: 'content',\n            },\n            {\n                title: 'TTL',\n                dataIndex: 'ttl',\n                key: 'ttl',\n            },\n            {\n                title: 'Operation',\n                key: 'operation',\n                render: (text, record, index) => {\n                    return (\n                        <Operation\n                            zone_id={params.zone_id}\n                            record={record}\n                            dnsrecords={{ dnsrecords, setDnsrecords }}\n                            index={index}\n                        />\n                    )\n                },\n            },\n        ];\n    }, [dnsrecords, params.zone_id])\n    useEffect(() => {\n        getZoneDnsrecordsApi(params.zone_id)\n            .then((res) => {\n                setloading(false);\n                if (res.code === 200) {\n                    setDnsrecords(res.data);\n                } else {\n                    message.error(res.msg)\n                }\n            })\n    }, [params.zone_id])\n\n    return (\n        <div>\n            <Mybreadcrumb path={breadcrumb} />\n            <Button\n                onClick={() => {\n                    props.history.push('/user/zone/' + params.zone_id + '/dnsrecord/create')\n                }}\n                type=\"primary\"\n            >\n                Add a Dnsrecord\n            </Button>\n            <Divider />\n            <Table\n                columns={columns}\n                dataSource={dnsrecords}\n                loading={loading}\n                rowKey={record => record.id} />\n        </div>\n    );\n}\nexport default List;\n","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { Form, Input, Button, Select, Switch, message, Spin } from 'antd';\n\nimport Mybreadcrumb from '@components/Mybreadcrumb';\nimport { getDnsRecordInfoApi, dnsRecordUpdate, dnsRecordCreate } from '@service/zone';\n\n\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: {\n    span: 3,\n    sm: {\n      span: 5,\n    },\n    lg: {\n      span: 3,\n    }\n  },\n  wrapperCol: {\n    span: 12,\n    sm: {\n      span: 15,\n    },\n    lg: {\n      span: 12,\n    }\n  },\n};\nconst submitTailLayout = {\n  wrapperCol: {\n    offset: 3,\n    span: 12,\n    xs: {\n      offset: 0,\n      span: 15,\n    },\n    sm: {\n      offset: 5,\n      span: 15,\n    },\n    lg: {\n      offset: 3,\n      span: 12,\n    }\n  },\n};\n\nconst initialValues = {\n  type: 'CNAME',\n  ttl: 1,\n  proxied: true\n}\n\nconst Edit = (props) => {\n\n  const params = props.match.params\n  const [loading, setLoading] = useState(true)\n\n  const isCreate = useCallback(\n    () => {\n      return params.dns_record_id === undefined\n    },\n    [params],\n  )\n  const formRef = useMemo(() => React.createRef(), []);\n\n  useEffect(() => {\n    if (!isCreate()) {\n      message.loading('loading...', 0);\n      getDnsRecordInfoApi(params.zone_id, params.dns_record_id)\n        .then((res) => {\n          if (res.code === 200) {\n            const data = res.data;\n            formRef.current.setFieldsValue(data)\n          } else {\n            message.error('加载dns记录失败');\n          }\n        }).finally(() => {\n          message.destroy()\n          setLoading(false)\n        })\n    } else {\n      setLoading(false)\n    }\n  }, [params, formRef, isCreate])\n  const onFinish = values => {\n    message.loading('loading...', 0);\n\n    setLoading(true)\n    if (isCreate()) {\n      //新增\n      dnsRecordCreate(params.zone_id, values)\n        .then((res) => {\n          message.destroy()\n          if (res.code === 200) {\n            message.success('添加记录成功');\n            props.history.push('/user/zone/' + params.zone_id + '/dnsrecord');\n          } else {\n            message.error(res.msg);\n          }\n        }).finally(() => {\n          message.destroy()\n          setLoading(false)\n        })\n\n    } else {\n      // 更新\n      dnsRecordUpdate(params.zone_id, params.dns_record_id, values)\n        .then((res) => {\n          if (res.code === 200) {\n            message.success('更新记录成功');\n          } else {\n            message.error(res.msg);\n          }\n        }).finally(() => {\n          message.destroy()\n          setLoading(false)\n        })\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const breadcrumb = [\n    {\n      title: 'Zones',\n      link: '/user/zones'\n    },\n    {\n      title: 'DNSRecord',\n      link: '/user/zone/' + params.zone_id + '/dnsrecord'\n    },\n    {\n      title: isCreate() ? 'Create' : 'Edit'\n    }\n  ]\n  return (\n    <div>\n      <Mybreadcrumb path={breadcrumb} />\n      <Spin delay={100} spinning={loading} tip=\"Loading...\">\n        <Form\n          {...layout}\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          initialValues={initialValues}\n          ref={formRef}\n        >\n\n          <Form.Item\n            label=\"Record Name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Record Name!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Record Type\"\n            name=\"type\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Record Type!',\n              },\n            ]}\n          >\n            <Select style={{ width: 170 }}>\n              <Option value=\"A\">A</Option>\n              <Option value=\"AAAA\">AAAA</Option>\n              <Option value=\"CNAME\">CNAME</Option>\n              <Option value=\"TXT\">TXT</Option>\n              <Option value=\"SRV\">SRV</Option>\n              <Option value=\"LOC\">LOC</Option>\n              <Option value=\"MX\">MX</Option>\n              <Option value=\"NS\">NS</Option>\n              <Option value=\"SPF\">SPF</Option>\n              <Option value=\"CERT\">CERT</Option>\n              <Option value=\"DNSKEY\">DNSKEY</Option>\n              <Option value=\"DS\">DS</Option>\n              <Option value=\"NAPTR\">NAPTR</Option>\n              <Option value=\"SMIMEA\">SMIMEA</Option>\n              <Option value=\"SSHFP\">SSHFP</Option>\n              <Option value=\"TLSA\">TLSA</Option>\n              <Option value=\"URI\">URI</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Record Content\"\n            name=\"content\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Record Content!',\n              },\n            ]}\n          >\n            <Input.TextArea />\n          </Form.Item>\n          <Form.Item\n            label=\"TTL\"\n            name=\"ttl\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your TTL!',\n              },\n            ]}\n            valuePropName='value'\n          >\n            <Select style={{ width: 170 }}>\n              <Option value={1}>Automatic</Option>\n              <Option value={120}>2 mins</Option>\n              <Option value={300}>5 mins</Option>\n              <Option value={600}>10 mins</Option>\n              <Option value={900}>15 mins</Option>\n              <Option value={1800}>30 mins</Option>\n              <Option value={3600}>1 hour</Option>\n              <Option value={7200}>2 hours</Option>\n              <Option value={18000}>5 hours</Option>\n              <Option value={43200}>12 hours</Option>\n              <Option value={86400}>1 day</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"CDN\"\n            name=\"proxied\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your CDN!',\n              },\n            ]}\n            valuePropName='checked'\n          >\n            <Switch />\n          </Form.Item>\n\n          <Form.Item  {...submitTailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Submit\n        </Button>\n          </Form.Item>\n        </Form>\n      </Spin>\n    </div>\n  );\n};\nexport default Edit;\n","\nimport Login from \"@pages/Login\";\nimport PageNotFound from \"@pages/PageNotFound\";\nimport Dashboard from \"@pages/user/Dashboard\";\nimport ZoneList from \"@pages/user/zone/List\";\nimport ZoneControl from \"@pages/user/zone/Control\";\nimport ZoneCreate from \"@pages/user/zone/Create\";\n\nimport DnsrecordList from \"@pages/user/dnsrecord/List\";\nimport DnsrecordEdit from \"@pages/user/dnsrecord/Edit\";\n\nexport const mainRoutes = [\n  {\n    path: \"/login\",\n    component: Login\n  },\n  {\n    path: \"/404\",\n    component: PageNotFound\n  }\n];\n\nexport const userRoutes = [\n  {\n    path: \"/user/dashboard\",\n    component: Dashboard,\n    exact:true,\n    title: \"控制台\",\n  },\n  {\n    path: \"/user/zones\",\n    component: ZoneList,\n    exact:true,\n    title: \"域名管理\",\n  },\n  {\n    path: \"/user/zone/control/:zone_id\",\n    component: ZoneControl,\n    exact:true,\n    title: \"域名控制\",\n  },\n  {\n    path: \"/user/zone/create\",\n    component: ZoneCreate,\n    exact:true,\n    title: \"域名添加\",\n  },\n  {\n    path: \"/user/zone/:zone_id/dnsrecord\",\n    component: DnsrecordList,\n    exact:true,\n    title: \"DNS记录管理\",\n  },\n  {\n    path: \"/user/zone/:zone_id/dnsrecord/:dns_record_id/edit\",\n    component: DnsrecordEdit,\n    exact:true,\n    title: \"DNS记录修改\",\n  },\n  {\n    path: \"/user/zone/:zone_id/dnsrecord/create\",\n    component: DnsrecordEdit,\n    title: \"DNS记录添加\",\n    exact:true,\n  }\n];","import React, { useState } from 'react';\nimport { Layout, Menu, Dropdown } from 'antd';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    HomeOutlined,\n    AntCloudOutlined,\n    LinkOutlined,\n    DownOutlined,\n} from '@ant-design/icons';\nimport { clearAll, getUsername } from '@utils/auth'\n\nimport '@css/Frame.scss';\n\nconst { Header, Sider, Content } = Layout;\n\nconst { SubMenu } = Menu;\n\nconst menu = [\n    {\n        icon: <HomeOutlined />,\n        title: '控制台',\n        link: '/user/dashboard',\n    }, {\n        icon: <AntCloudOutlined />,\n        title: '域名管理',\n        data: [\n            {\n                title: '域名列表',\n                link: '/user/zones',\n            },\n            {\n                title: '添加域名',\n                link: '/user/zone/create',\n            }\n        ]\n    }\n\n    , {\n        icon: <LinkOutlined />,\n        title: '访问Hidove',\n        link: 'https://www.hidove.cn',\n        isUrl: true,\n    }, {\n        icon: <LinkOutlined />,\n        title: '访问Cloudflare',\n        link: 'https://www.cloudflare.com',\n        isUrl: true,\n    }\n]\nconst Frame = (props) => {\n\n    const history = useHistory()\n    const [collapsed, setCollapsed] = useState(false);\n\n    const toggle = () => {\n        setCollapsed(!collapsed)\n    }\n    const logOut = () => {\n        clearAll()\n        history.push('/login')\n    }\n    return (\n        <Layout>\n            <Sider\n                trigger={null}\n                collapsible\n                collapsed={collapsed}\n                breakpoint=\"md\"\n                collapsedWidth=\"0\"\n                onBreakpoint={(broken) => {\n                    if (broken) {\n                        setCollapsed(true)\n                    }\n                }}\n            >\n                <div className=\"logo\" ><Link to=\"/\">Hidove</Link></div>\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                    {menu.map((v, k) => {\n                        if (Array.isArray(v.data) && v.data.length !== 0) {\n\n                            return (<SubMenu key={k} icon={v.icon} title={v.title}>\n                                {\n                                    v.data.map((vo, ke) => {\n                                        if (vo.isUrl === true) {\n                                            return <Menu.Item key={vo.link}>\n                                                <a target='_blank' href={vo.link} rel=\"noopener noreferrer\">{vo.title}</a>\n                                            </Menu.Item>;\n                                        }\n                                        return <Menu.Item key={vo.link}>\n                                            <Link to={vo.link}>{vo.title}</Link>\n                                        </Menu.Item>;\n                                    })\n                                }\n                            </SubMenu>)\n                        }\n                        if (v.isUrl === true) {\n                            return <Menu.Item key={k} icon={v.icon}>\n                                <a target='_blank' href={v.link} rel=\"noopener noreferrer\">{v.title}</a>\n                            </Menu.Item>;\n                        }\n                        return (<Menu.Item key={k} icon={v.icon}>\n                            <Link to={v.link}>{v.title}</Link>\n                        </Menu.Item>)\n                    })}\n                </Menu>\n            </Sider>\n            <Layout className=\"site-layout\">\n                <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n                    {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                        className: 'trigger',\n                        onClick: toggle,\n                    })}\n                    <Dropdown className=\"use-dropdown\" overlay={\n                        <Menu>\n                            <Menu.Item onClick={logOut}>退出登录</Menu.Item>\n                        </Menu>}>\n                        <span>{getUsername()} <DownOutlined /></span>\n                    </Dropdown>\n                </Header>\n                <Content\n                    className=\"site-layout-background\"\n                    style={{\n                        margin: '24px 16px',\n                        padding: 24,\n                        minHeight: '80%',\n                    }}\n                >\n                    {props.children}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n\n}\n\nexport default Frame;","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { userRoutes } from \"./routes\";\nimport Frame from \"./components/Frame\";\nimport { isLogined } from \"./utils/auth\";\nimport \"./css/App.scss\";\n\nfunction App() {\n  return isLogined() ? (\n\n    <Frame>\n      <Switch>\n        {userRoutes.map(route => {\n          return (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact={route.exact}\n              render={routeProps => {\n                console.log(routeProps)\n                return <route.component {...routeProps} />;\n              }}\n            />\n          );\n        })}\n        <Redirect to={userRoutes[0].path} from=\"/user\" />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Frame>\n\n\n  ) : (\n      <Redirect to=\"/login\" />\n    );\n}\n\nexport default App;\n","import React from \"react\"\nimport ReactDom from \"react-dom\"\n\nimport { HashRouter as Router, Route,Switch,Redirect} from 'react-router-dom'\n\nimport App from './App'\nimport {mainRoutes} from './routes'\n\nReactDom.render(\n    <Router>\n      <Switch>\n        <Route path=\"/user\" render={(routeProps) => <App {...routeProps} />} />\n        {mainRoutes.map((route) => {\n          return <Route key={route.path} {...route} />;\n        })}\n        <Redirect to=\"/user\" from=\"/\" />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Router>,\n    document.getElementById('root')\n)"],"sourceRoot":""}